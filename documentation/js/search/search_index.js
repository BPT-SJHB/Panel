var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/APICommunicationManagementService.html",[0,1.206,1,1.989]],["body/injectables/APICommunicationManagementService.html",[0,1.876,1,3.093,2,2.238,3,0.073,4,0.073,5,0.073,6,7.466,7,3.702,8,3.702,9,2.915,10,0.118,11,0.286,12,1.513,13,7.959,14,1.318,15,3.642,16,2.035,17,7.959,18,7.959,19,5.597,20,0.493,21,9.168,22,1.251,23,5.597,24,0.122,25,1.887,26,0.007,27,8.402,28,1.005,29,0.727,30,8.402,31,5.869,32,1.294,33,2.455,34,5.597,35,3.9,36,8.402,37,4.011,38,1.006,39,0.88,40,7.2,41,4.974,42,0.936,43,5.597,44,5.597,45,1.304,46,0.69,47,1.77,48,1.881,49,2.419,50,4.974,51,5.597,52,2.848,53,4.974,54,4.974,55,4.974,56,7.2,57,2.139,58,3.342,59,2.746,60,2.291,61,2.238,62,0.073,63,0.72,64,6.398,65,6.398,66,1.66,67,4.008,68,2.362,69,2.823,70,3.019,71,1.513,72,3.052,73,1.678,74,5.597,75,7.2,76,4.563,77,2.828,78,5.475,79,5.869,80,6.398,81,5.597,82,0.005,83,0.005]],["title/interfaces/APIUsernamePassword.html",[84,0.039,85,3.149]],["body/interfaces/APIUsernamePassword.html",[3,0.094,4,0.094,5,0.094,10,0.152,11,0.335,20,0.524,24,0.123,26,0.007,62,0.11,82,0.006,83,0.006,84,0.07,85,5.736,86,1.207,87,6.437,88,6.437,89,7.488,90,7.488,91,4.928,92,3.275,93,1.483]],["title/interfaces/AnnouncementGroup.html",[84,0.039,94,3.149]],["body/interfaces/AnnouncementGroup.html",[3,0.094,4,0.094,5,0.094,10,0.151,11,0.334,20,0.485,24,0.13,26,0.007,29,0.926,62,0.094,82,0.006,83,0.006,84,0.06,86,1.2,94,5.717,95,6.402,96,6.402,97,4.256,98,6.237,99,6.237,100,1.999,101,1.121]],["title/injectables/AnnouncementGroupSubgroupManagementService.html",[0,1.206,102,3.317]],["body/injectables/AnnouncementGroupSubgroupManagementService.html",[0,1.216,1,1.303,2,1.213,3,0.039,4,0.039,5,0.039,7,1.336,8,1.336,9,1.58,10,0.064,11,0.185,12,1.382,14,0.854,15,3.857,16,2.156,20,0.487,22,1.345,24,0.121,25,1.87,26,0.007,28,1.163,29,0.841,32,1.496,33,2.666,35,4.234,38,0.838,39,0.733,42,0.885,45,0.707,46,0.374,47,0.959,48,1.019,49,1.567,52,2.033,58,1.408,59,1.488,60,1.242,61,1.213,62,0.039,63,0.39,66,1.702,67,2.71,69,1.909,71,1.801,72,1.949,73,1.94,82,0.003,83,0.003,94,4.683,97,3.196,98,5.82,99,4.683,100,1.8,101,1.17,102,3.342,103,8.65,104,1.705,105,6.577,106,2.569,107,2.638,108,5.682,109,6.379,110,5.682,111,5.682,112,6.379,113,5.682,114,5.682,115,5.682,116,5.682,117,5.682,118,5.682,119,3.033,120,3.033,121,4.285,122,3.033,123,3.033,124,3.033,125,5.865,126,3.033,127,5.528,128,3.033,129,4.085,130,6.055,131,3.033,132,3.033,133,3.033,134,3.033,135,2.695,136,3.033,137,3.033,138,3.033,139,3.033,140,3.033,141,3.033,142,3.033,143,3.033,144,3.033,145,3.033,146,2.108,147,2.306,148,2.165,149,3.033,150,1.303,151,0.525,152,1.336,153,1.336,154,1.371,155,1.336,156,0.886,157,3.546,158,2.063,159,1.371,160,1.371,161,4.664,162,4.664,163,2.695,164,4.309,165,1.631,166,1.631,167,4.468,168,3.546,169,4.664,170,4.664,171,4.339,172,2.695,173,1.384,174,4.664,175,2.695,176,4.002,177,2.174,178,3.972,179,3.865,180,3.764,181,3.033,182,7.269,183,2.188,184,3.491,185,4.085,186,3.027,187,3.033,188,4.002,189,3.865,190,4.085,191,2.272,192,4.321,193,4.664,194,4.664,195,4.144,196,3.055,197,3.033,198,3.033,199,4.664,200,3.033,201,3.033,202,3.033,203,3.033,204,6.379,205,3.033,206,7.269,207,4.793,208,3.963,209,3.033,210,3.033,211,3.033,212,3.033,213,4.664,214,3.033,215,3.033,216,5.682,217,3.033,218,5.682,219,4.339,220,5.682,221,3.033,222,2.695,223,2.695,224,3.033,225,4.664,226,3.033]],["title/interfaces/AnnouncementSubGroup.html",[84,0.039,167,3.004]],["body/interfaces/AnnouncementSubGroup.html",[3,0.094,4,0.094,5,0.094,10,0.151,11,0.334,20,0.485,24,0.13,26,0.007,29,0.926,62,0.094,82,0.006,83,0.006,84,0.06,86,1.2,95,6.402,97,4.256,100,1.999,101,1.121,167,5.455,207,5.278,208,5.278,227,5.873]],["title/interfaces/AnnouncementSubGroupInRelation.html",[84,0.039,228,3.149]],["body/interfaces/AnnouncementSubGroupInRelation.html",[3,0.093,4,0.093,5,0.093,10,0.151,11,0.334,20,0.499,24,0.122,26,0.007,29,0.848,62,0.109,82,0.006,83,0.006,84,0.07,86,1.197,98,4.887,99,4.887,101,1.154,104,1.391,171,4.887,173,1.444,207,5.273,208,5.273,219,4.887,227,5.857,228,6.047,229,6.385]],["title/interfaces/ApiGroupProcess.html",[84,0.039,230,3.52]],["body/interfaces/ApiGroupProcess.html",[3,0.09,4,0.09,5,0.09,10,0.146,11,0.327,20,0.511,24,0.135,26,0.007,29,0.948,42,0.718,62,0.09,82,0.006,83,0.006,84,0.058,86,1.157,100,1.969,101,1.104,104,1.345,155,3.061,230,6.256,231,5.663,232,5.663,233,8.053,234,9.063,235,8.053,236,7.388,237,7.388,238,6.891,239,4.725]],["title/interfaces/ApiProcess.html",[84,0.039,238,3.52]],["body/interfaces/ApiProcess.html",[3,0.09,4,0.09,5,0.09,10,0.145,11,0.326,20,0.529,24,0.136,26,0.007,29,0.974,62,0.09,82,0.006,83,0.006,84,0.057,86,1.148,100,1.962,101,1.101,231,5.619,232,5.619,238,6.227,240,5.203,241,6.874,242,9.039,243,8.032,244,9.039,245,9.039]],["title/injectables/ApiProcessesService.html",[0,1.206,246,3.774]],["body/injectables/ApiProcessesService.html",[0,1.895,1,2.442,2,2.272,3,0.074,4,0.074,5,0.074,6,7.938,7,2.504,8,2.504,10,0.119,11,0.289,12,1.801,14,1.331,15,3.281,16,1.834,22,1.373,24,0.083,25,1.276,26,0.007,28,1.015,29,0.574,32,1.306,33,2.124,35,3.374,38,1.44,39,1.26,42,0.951,45,1.324,46,0.701,47,1.796,48,2.442,49,1.909,52,2.033,60,2.326,61,2.272,62,0.074,63,0.731,66,1.495,67,2.711,69,1.909,71,1.523,72,1.949,73,1.694,82,0.005,83,0.005,104,1.1,106,3.624,107,3.721,121,3.567,129,3.286,146,3.286,148,3.374,150,2.442,152,2.504,153,2.504,154,2.569,156,1.66,158,3.865,159,2.569,160,2.569,163,5.049,176,3.444,178,2.711,179,2.638,180,3.624,184,2.382,185,2.788,188,3.444,189,2.638,191,2.272,196,3.055,230,6.425,239,3.865,240,3.271,246,5.926,247,7.938,248,5.682,249,4.309,250,8.016,251,8.45,252,5.682,253,5.682,254,7.27,255,6.095,256,5.682,257,5.682,258,7.27,259,5.682,260,5.682,261,3.688,262,5.049,263,7.27,264,5.682,265,5.049,266,5.049,267,6.46,268,5.682,269,5.682,270,5.682,271,5.682,272,3.286,273,5.682,274,4.632,275,5.682,276,5.682,277,5.682,278,5.682,279,5.682,280,5.682]],["title/interfaces/ApiResponse.html",[47,1.463,84,0.039]],["body/interfaces/ApiResponse.html",[3,0.092,4,0.092,5,0.092,10,0.15,11,0.332,20,0.455,24,0.136,26,0.007,29,0.923,47,2.638,52,3.268,62,0.092,67,4.357,69,3.069,77,3.595,82,0.006,83,0.006,84,0.059,86,1.185,100,1.989,101,0.897,231,5.802,281,6.324,282,7.219,283,4.986,284,5.802,285,6.324]],["title/components/AppComponent.html",[286,0.226,287,1.079]],["body/components/AppComponent.html",[3,0.107,4,0.062,5,0.062,24,0.07,26,0.007,28,0.905,42,0.853,46,0.589,61,2.591,62,0.062,63,0.614,82,0.005,83,0.005,93,1.615,104,1.597,151,0.826,173,1.658,286,0.359,287,1.839,288,1.376,289,1.133,290,1.133,291,1.482,292,4.772,293,1.133,294,1.954,295,1.954,296,1.278,297,6.479,298,3.179,299,6.479,300,1.714,301,1.278,302,6.479,303,1.302,304,6.479,305,3.246,306,1.745,307,4.772,308,4.772,309,4.772,310,1.133,311,1.538,312,1.538,313,1.133,314,1.772,315,1.133,316,1.112,317,2.284,318,1.112,319,1.785,320,1.133,321,1.112,322,1.133,323,1.133,324,2.155,325,1.112,326,1.072,327,1.112,328,1.092,329,1.112,330,1.133,331,1.112,332,1.112,333,1.538,334,1.092,335,1.506,336,1.112,337,1.586,338,0.977,339,1.092,340,1.746,341,1.689,342,1.876,343,1.112,344,1.133,345,1.133,346,1.112,347,1.133,348,1.112,349,1.538,350,1.112,351,1.538,352,1.092,353,1.255,354,1.538,355,1.112,356,1.133,357,1.133,358,1.133,359,1.112,360,1.133,361,1.112,362,1.133,363,1.112,364,1.133,365,1.112,366,1.092,367,1.112,368,1.092,369,1.092,370,1.072,371,1.133,372,1.112,373,1.51,374,1.112,375,1.092,376,1.072,377,1.133,378,1.112,379,1.072,380,1.133,381,1.112,382,1.052,383,1.014,384,1.072,385,1.033,386,1.014,387,1.092,388,1.072,389,1.622,390,1.746,391,1.092,392,1.072,393,1.092,394,1.052,395,1.455,396,1.033,397,1.133,398,1.052,399,1.112,400,1.133,401,1.112,402,1.033,403,1.112,404,1.133,405,1.112,406,1.133,407,1.538,408,1.112,409,1.112,410,1.133,411,1.133,412,1.112,413,1.51,414,1.133,415,1.112,416,1.133,417,1.112,418,1.112,419,1.133,420,1.112,421,1.133,422,1.112,423,1.538,424,1.133,425,1.092,426,1.112,427,1.112,428,1.133,429,1.014,430,0.959,431,1.133,432,1.072,433,1.092,434,1.092,435,1.092,436,1.092,437,1.112,438,1.133,439,1.092,440,1.072,441,1.112,442,1.092,443,1.092,444,1.133,445,1.133]],["title/components/BinaryRadioInputComponent.html",[286,0.226,321,1.079]],["body/components/BinaryRadioInputComponent.html",[3,0.097,4,0.048,5,0.048,10,0.078,11,0.215,12,1.489,14,0.991,20,0.384,22,1.386,24,0.125,25,1.438,26,0.007,28,1.047,29,0.647,32,1.347,38,1.347,39,1.272,42,0.729,46,0.457,62,0.048,63,0.476,66,0.69,82,0.004,83,0.004,93,1.443,100,1.583,104,1.452,151,0.64,173,1.507,249,3.442,286,0.313,287,0.862,288,1.15,289,0.879,290,0.879,291,1.239,293,0.879,294,1.934,295,1.934,296,1.068,300,0.862,301,1.068,303,1.088,306,1.353,310,0.879,311,1.286,312,1.286,313,0.879,314,1.583,315,0.879,316,0.862,317,2.228,318,0.862,319,1.623,320,0.879,321,1.642,322,1.921,323,2.282,324,2.042,325,0.862,326,0.831,327,0.862,328,0.847,329,0.862,330,0.879,331,0.862,332,0.862,333,1.286,334,0.847,335,1.311,336,0.862,337,1.416,338,0.758,339,0.847,340,1.52,341,1.535,342,1.727,343,0.862,344,0.879,345,0.879,346,0.862,347,0.879,348,0.862,349,1.286,350,0.862,351,1.286,352,0.847,353,1.049,354,1.286,355,0.862,356,0.879,357,0.879,358,0.879,359,0.862,360,0.879,361,0.862,362,0.879,363,0.862,364,0.879,365,0.862,366,0.847,367,0.862,368,0.847,369,0.847,370,0.831,371,0.879,372,0.862,373,1.262,374,0.862,375,0.847,376,0.831,377,0.879,378,0.862,379,0.831,380,0.879,381,0.862,382,0.816,383,0.786,384,0.831,385,0.801,386,0.786,387,0.847,388,0.831,389,1.412,390,1.52,391,0.847,392,0.831,393,0.847,394,0.816,395,1.216,396,0.801,397,0.879,398,0.816,399,0.862,400,0.879,401,0.862,402,0.801,403,0.862,404,0.879,405,0.862,406,0.879,407,1.286,408,0.862,409,0.862,410,0.879,411,0.879,412,0.862,413,1.262,414,0.879,415,0.862,416,0.879,417,0.862,418,0.862,419,0.879,420,0.862,421,0.879,422,0.862,423,1.286,424,0.879,425,0.847,426,0.862,427,0.862,428,0.879,429,0.786,430,0.744,431,0.879,432,0.831,433,0.847,434,0.847,435,0.847,436,0.847,437,0.862,438,0.879,439,0.847,440,0.831,441,0.862,442,0.847,443,0.847,444,0.879,445,0.879,446,8.905,447,7.913,448,2.301,449,1.98,450,2.393,451,3.686,452,2.731,453,5.69,454,6.404,455,3.826,456,2.447,457,3.117,458,3.117,459,6.404,460,3.235,461,2.184,462,5.415,463,4.573,464,2.271,465,3.679,466,3.826,467,3.481,468,6.404,469,2.448,470,2.731,471,4.415,472,2.161,473,3.701,474,3.017,475,4.812,476,3.017,477,3.701,478,3.01,479,3.916,480,3.289,481,2.211,482,2.086,483,3.017,484,5.415,485,5.359,486,2.814,487,2.814,488,1.801,489,6.404,490,3.701,491,3.701,492,3.701,493,3.701,494,1.17,495,3.701,496,2.517,497,3.701,498,3.701,499,2.402,500,3.701,501,5.415,502,3.514,503,2.402,504,2.402,505,2.402,506,3.514,507,2.402]],["title/interfaces/CaptchaChallenge.html",[84,0.039,508,3.774]],["body/interfaces/CaptchaChallenge.html",[3,0.095,4,0.095,5,0.095,10,0.154,11,0.338,20,0.517,24,0.124,26,0.007,62,0.095,82,0.006,83,0.006,84,0.061,86,1.222,184,3.867,508,6.924,509,7.336,510,7.336,511,7.518]],["title/components/CaptchaInputComponent.html",[286,0.226,325,1.079]],["body/components/CaptchaInputComponent.html",[3,0.099,4,0.05,5,0.05,10,0.08,11,0.22,12,0.726,14,1.014,16,1.812,20,0.208,22,1.316,24,0.111,25,0.858,26,0.007,28,0.91,29,0.386,32,1.172,38,1.285,39,1.124,42,0.865,46,0.471,62,0.05,63,0.491,66,1.034,68,1.074,71,0.726,73,1.291,82,0.004,83,0.004,93,1.464,104,1.471,151,0.661,173,1.526,286,0.319,287,0.89,288,1.177,289,0.907,290,0.907,291,1.268,293,0.907,294,1.937,295,1.937,296,1.093,300,0.89,301,1.093,303,1.114,306,1.396,310,0.907,311,1.315,312,1.315,313,0.907,314,1.606,315,0.907,316,0.89,317,2.235,318,0.89,319,1.644,320,0.907,321,0.89,322,0.907,323,0.907,324,2.057,325,1.667,326,1.88,327,0.89,328,0.874,329,0.89,330,0.907,331,0.89,332,0.89,333,1.315,334,0.874,335,1.335,336,0.89,337,1.437,338,0.782,339,0.874,340,1.548,341,1.555,342,1.746,343,0.89,344,0.907,345,0.907,346,0.89,347,0.907,348,0.89,349,1.315,350,0.89,351,1.315,352,0.874,353,1.073,354,1.315,355,0.89,356,0.907,357,0.907,358,0.907,359,0.89,360,0.907,361,0.89,362,0.907,363,0.89,364,0.907,365,0.89,366,0.874,367,0.89,368,0.874,369,0.874,370,0.858,371,0.907,372,0.89,373,1.291,374,0.89,375,0.874,376,0.858,377,0.907,378,0.89,379,0.858,380,0.907,381,0.89,382,0.842,383,0.811,384,0.858,385,0.827,386,0.811,387,0.874,388,0.858,389,1.437,390,1.548,391,0.874,392,0.858,393,0.874,394,0.842,395,1.244,396,0.827,397,0.907,398,0.842,399,0.89,400,0.907,401,0.89,402,0.827,403,0.89,404,0.907,405,0.89,406,0.907,407,1.315,408,0.89,409,0.89,410,0.907,411,0.907,412,0.89,413,1.291,414,0.907,415,0.89,416,0.907,417,0.89,418,0.89,419,0.907,420,0.89,421,0.907,422,0.89,423,1.315,424,0.907,425,0.874,426,0.89,427,0.89,428,0.907,429,0.811,430,0.768,431,0.907,432,0.858,433,0.874,434,0.874,435,0.874,436,0.874,437,0.89,438,0.907,439,0.874,440,0.858,441,0.89,442,0.874,443,0.874,444,0.907,445,0.907,448,2.375,449,2.026,450,2.437,452,2.5,455,3.896,456,2.491,457,3.189,458,3.189,461,2.217,464,2.323,470,2.808,471,3.114,472,1.799,482,1.365,486,2.904,487,2.904,488,2.011,494,1.208,511,5.316,512,8.532,513,6.955,514,4.232,515,4.673,516,4.232,517,6.521,518,7.153,519,7.153,520,6.521,521,6.521,522,2.282,523,3.82,524,6.457,525,2.191,526,2.307,527,4.213,528,3.114,529,3.394,530,3.114,531,2.375,532,2.375,533,2.737,534,3.82,535,3.82,536,1.31,537,1.31,538,2.904,539,5.541,540,3.82,541,3.82,542,3.82,543,1.874,544,3.82,545,3.82,546,3.82,547,3.82,548,3.82,549,3.82,550,6.521,551,3.82,552,3.394,553,5.541,554,5.541,555,3.82,556,3.82,557,3.82,558,3.82,559,3.82,560,3.82]],["title/injectables/CaptchaService.html",[0,1.206,524,3.774]],["body/injectables/CaptchaService.html",[0,2.06,1,2.793,2,2.599,3,0.084,4,0.084,5,0.084,7,2.863,8,2.863,10,0.137,11,0.314,12,1.619,14,1.447,15,3.488,16,1.949,22,1.243,26,0.007,32,1.168,33,2.31,38,1.168,39,1.022,42,0.955,45,1.515,46,0.802,47,2.055,48,2.184,49,2.184,52,2.326,60,2.661,61,2.599,62,0.084,63,0.836,66,1.475,67,3.1,69,2.184,71,1.502,72,2.229,73,1.515,82,0.006,83,0.006,106,3.851,146,3.574,155,2.863,156,1.899,159,2.938,160,2.938,176,3.66,179,3.017,180,2.938,184,2.725,188,3.66,189,3.017,191,2.599,196,3.494,508,5.298,511,5.298,524,6.444,561,8.519,562,6.499,563,7.876,564,6.499,565,6.499,566,6.499,567,6.499,568,7.905,569,6.499,570,6.499,571,6.499,572,5.775,573,6.499,574,6.499]],["title/components/CheckboxInputComponent.html",[286,0.226,327,1.079]],["body/components/CheckboxInputComponent.html",[3,0.101,4,0.053,5,0.053,10,0.086,14,1.067,20,0.403,22,1.341,24,0.122,25,0.921,26,0.007,28,0.947,29,0.414,32,1.219,38,1.403,39,1.227,42,0.702,46,0.506,62,0.053,63,0.528,82,0.004,83,0.004,93,1.513,100,1.659,104,1.512,151,0.709,173,1.569,249,3.647,286,0.331,287,0.956,288,1.239,289,0.973,290,0.973,291,1.334,293,0.973,294,1.943,295,1.943,296,1.15,300,0.956,301,1.15,303,1.172,310,0.973,311,1.384,312,1.384,313,0.973,314,1.659,315,0.973,316,0.956,317,2.252,318,0.956,319,1.69,320,0.973,321,0.956,322,0.973,323,0.973,324,2.09,325,0.956,326,0.921,327,1.722,328,1.985,329,0.956,330,0.973,331,0.956,332,0.956,333,1.384,334,0.938,335,1.389,336,0.956,337,1.485,338,0.839,339,0.938,340,1.611,341,1.598,342,1.788,343,0.956,344,0.973,345,0.973,346,0.956,347,0.973,348,0.956,349,1.384,350,0.956,351,1.384,352,0.938,353,1.129,354,1.384,355,0.956,356,0.973,357,0.973,358,0.973,359,0.956,360,0.973,361,0.956,362,0.973,363,0.956,364,0.973,365,0.956,366,0.938,367,0.956,368,0.938,369,0.938,370,0.921,371,0.973,372,0.956,373,1.359,374,0.956,375,0.938,376,0.921,377,0.973,378,0.956,379,0.921,380,0.973,381,0.956,382,0.904,383,0.871,384,0.921,385,0.887,386,0.871,387,0.938,388,0.921,389,1.496,390,1.611,391,0.938,392,0.921,393,0.938,394,0.904,395,1.309,396,0.887,397,0.973,398,0.904,399,0.956,400,0.973,401,0.956,402,0.887,403,0.956,404,0.973,405,0.956,406,0.973,407,1.384,408,0.956,409,0.956,410,0.973,411,0.973,412,0.956,413,1.359,414,0.973,415,0.956,416,0.973,417,0.956,418,0.956,419,0.973,420,0.956,421,0.973,422,0.956,423,1.384,424,0.973,425,0.938,426,0.956,427,0.956,428,0.973,429,0.871,430,0.824,431,0.973,432,0.921,433,0.938,434,0.938,435,0.938,436,0.938,437,0.956,438,0.973,439,0.938,440,0.921,441,0.956,442,0.938,443,0.938,444,0.973,445,0.973,448,2.549,449,2.132,450,2.535,451,3.905,452,2.897,456,2.592,457,3.356,458,3.356,460,3.483,461,2.29,463,4.796,464,2.445,465,3.329,466,4.054,467,3.624,470,2.233,472,2.238,478,3.24,479,4.107,481,2.45,482,1.999,488,1.639,494,1.296,502,3.784,503,2.661,504,2.661,505,2.661,506,3.784,507,2.661,527,3.118,575,8.679,576,7.712,577,6.029,578,6.785,579,5.831,580,4.101,581,4.101,582,4.101,583,4.101,584,4.101,585,3.644,586,4.101,587,3.343]],["title/interfaces/City.html",[84,0.039,386,0.983]],["body/interfaces/City.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.497,24,0.129,26,0.007,29,0.921,62,0.108,82,0.006,83,0.006,84,0.069,86,1.179,100,2.048,101,1.149,385,1.532,386,1.877,588,6.29,589,6.29,590,6.534,591,6.534,592,8.102,593,5.073,594,5.073,595,5.073,596,5.77]],["title/interfaces/ColorScheme.html",[84,0.039,597,3.149]],["body/interfaces/ColorScheme.html",[3,0.083,4,0.083,5,0.083,10,0.134,11,0.311,20,0.532,22,1.002,24,0.134,26,0.007,28,0.89,29,0.889,62,0.083,82,0.006,83,0.006,84,0.075,86,1.061,101,0.803,283,5.26,286,0.382,288,1.354,597,6.145,598,4.567,599,6.309,600,6.474,601,4.567,602,4.893,603,6.373,604,5.313,605,5.597,606,6.053,607,4.567,608,4.567,609,4.567,610,4.567,611,5.313,612,4.567,613,4.567,614,4.567,615,4.567,616,4.567,617,6.053,618,4.567,619,4.567,620,4.567,621,4.567,622,4.335,623,4.567,624,4.567,625,4.567,626,4.335,627,4.567,628,5.313,629,4.567,630,4.335,631,4.335,632,4.567,633,4.567,634,4.567,635,4.567,636,4.335,637,4.335,638,4.567]],["title/interfaces/ComponentTokens.html",[84,0.039,628,3.149]],["body/interfaces/ComponentTokens.html",[3,0.085,4,0.085,5,0.085,20,0.534,22,1.031,24,0.096,26,0.007,28,0.915,62,0.085,82,0.006,83,0.006,84,0.076,86,1.092,101,0.826,283,3.917,286,0.388,288,1.393,597,6.047,598,4.698,599,4.698,600,5.695,601,4.698,602,4.753,604,5.405,605,5.695,606,6.128,607,4.698,608,4.698,609,4.698,610,4.698,611,5.405,612,4.698,613,4.698,614,4.698,615,4.698,616,4.698,617,6.128,618,4.698,619,4.698,620,4.698,621,4.698,622,4.459,623,4.698,624,4.698,625,4.698,626,4.459,627,4.698,628,5.817,629,5.695,630,4.459,631,4.459,632,4.698,633,4.698,634,4.698,635,4.698,636,4.459,637,4.459,638,4.698,639,6.556]],["title/injectables/CryptographyService.html",[0,1.206,640,3.774]],["body/injectables/CryptographyService.html",[0,2.175,2,2.846,3,0.092,4,0.092,5,0.092,10,0.15,14,1.528,15,3.625,20,0.507,22,1.119,24,0.104,25,1.598,26,0.007,28,0.994,29,0.719,32,1.279,42,0.863,46,0.878,60,2.913,61,2.846,62,0.092,63,0.916,66,1.328,77,3.595,82,0.006,83,0.006,640,6.803,641,8.345,642,7.117,643,8.855,644,8.345,645,7.117,646,6.324,647,7.117,648,7.117]],["title/components/DashboardComponent.html",[286,0.226,329,1.079]],["body/components/DashboardComponent.html",[3,0.09,4,0.04,5,0.04,10,0.12,11,0.186,12,1.78,14,0.857,16,1.666,22,1.421,24,0.119,25,1.051,26,0.007,28,0.892,29,0.791,32,1.308,33,1.868,38,1.472,39,1.288,42,0.951,45,0.71,46,0.376,52,1.09,57,1.164,62,0.04,63,0.392,66,1.287,68,1.797,71,1.441,73,1.328,82,0.003,83,0.003,93,1.309,101,0.718,104,1.336,107,2.644,121,2.795,129,2.575,148,2.172,150,1.309,151,0.527,152,2.061,153,1.342,154,1.377,173,1.386,177,2.182,178,1.453,183,1.045,237,4.644,239,2.072,246,5.211,247,2.706,261,1.976,265,2.706,272,2.89,285,2.706,286,0.312,287,0.71,288,0.994,289,0.723,290,0.723,291,1.07,293,0.723,294,1.916,295,1.916,296,0.923,298,2.795,300,0.71,301,0.923,303,0.94,305,2.072,306,1.113,310,0.723,311,1.111,312,1.111,313,0.723,314,1.435,315,0.723,316,0.71,317,2.176,318,0.71,319,1.493,320,0.723,321,0.71,322,0.723,323,0.723,324,1.945,325,0.71,326,0.684,327,0.71,328,0.697,329,1.49,330,0.723,331,0.71,332,0.71,333,1.111,334,0.697,335,1.166,336,0.71,337,1.285,338,0.623,339,0.697,340,1.352,341,1.412,342,1.605,343,0.71,344,0.723,345,0.723,346,1.49,347,0.723,348,0.71,349,1.111,350,0.71,351,1.111,352,0.697,353,0.906,354,1.111,355,0.71,356,0.723,357,0.723,358,0.723,359,1.49,360,0.723,361,0.71,362,0.723,363,0.71,364,0.723,365,0.71,366,0.697,367,0.71,368,0.697,369,0.697,370,0.684,371,0.723,372,0.71,373,1.09,374,0.71,375,0.697,376,0.684,377,0.723,378,0.71,379,0.684,380,0.723,381,0.71,382,0.671,383,0.647,384,0.684,385,0.659,386,0.647,387,0.697,388,0.684,389,1.256,390,1.352,391,0.697,392,0.684,393,0.697,394,0.671,395,1.051,396,0.659,397,0.723,398,0.671,399,0.71,400,0.723,401,0.71,402,0.659,403,1.49,404,0.723,405,0.71,406,0.723,407,1.111,408,1.49,409,1.49,410,0.723,411,0.723,412,0.71,413,1.49,414,0.723,415,1.09,416,0.723,417,0.71,418,0.71,419,0.723,420,0.71,421,0.723,422,0.71,423,1.111,424,0.723,425,0.697,426,0.71,427,0.71,428,0.723,429,0.647,430,0.612,431,0.723,432,0.684,433,0.697,434,0.697,435,0.697,436,0.697,437,0.71,438,0.723,439,0.697,440,0.684,441,0.71,442,0.697,443,0.697,444,0.723,445,0.723,449,1.71,450,2.129,461,1.981,467,1.414,472,1.571,482,1.794,488,1.315,525,1.914,526,0.982,536,1.045,537,1.045,543,1.494,649,3.046,650,5.062,651,3.541,652,4.678,653,2.115,654,1.801,655,4.678,656,4.678,657,5.697,658,5.062,659,5.697,660,5.537,661,5.062,662,5.697,663,4.861,664,4.581,665,5.697,666,5.697,667,5.68,668,2.816,669,4.678,670,4.678,671,6.392,672,3.046,673,3.046,674,3.046,675,4.678,676,3.046,677,4.678,678,4.581,679,3.046,680,3.046,681,4.678,682,3.046,683,5.157,684,3.046,685,3.353,686,3.046,687,6.129,688,1.893,689,4.678,690,4.157,691,3.046,692,3.046,693,4.082,694,3.046,695,3.046,696,3.814,697,3.046,698,3.814,699,3.046,700,3.046,701,3.046,702,1.71,703,3.046,704,3.046,705,4.082,706,3.046,707,2.706,708,1.819,709,1.893,710,0.963,711,3.046,712,3.046,713,3.046,714,2.706,715,2.706,716,3.046,717,3.046,718,2.706,719,3.046,720,3.046,721,2.182,722,2.182,723,3.046,724,3.046,725,2.706,726,2.316,727,3.046,728,2.706,729,2.706,730,2.483,731,2.706,732,2.483,733,2.483,734,2.706,735,3.046,736,2.706,737,2.483,738,2.182,739,2.182,740,2.483,741,3.046,742,2.706,743,2.706,744,3.046,745,3.046,746,3.046,747,3.046,748,5.697,749,3.046,750,3.046,751,3.046,752,1.453,753,3.046,754,3.046,755,3.046,756,2.483,757,3.046,758,3.046,759,3.046,760,3.046,761,3.046,762,3.046,763,3.046,764,3.046,765,3.046,766,3.046,767,3.046,768,2.706,769,1.819,770,3.046,771,2.706,772,2.908,773,2.706,774,3.046,775,3.046,776,3.046,777,3.046,778,3.046,779,3.046,780,3.046,781,2.706,782,3.046,783,3.046,784,3.046,785,3.557,786,3.046,787,3.046,788,3.046,789,3.046,790,3.046,791,5.68,792,3.046,793,4.157,794,3.046,795,3.046,796,3.046,797,3.046,798,3.046,799,3.046,800,1.539,801,3.046,802,3.046,803,3.046]],["title/components/DatePickerInput.html",[286,0.226,331,1.079]],["body/components/DatePickerInput.html",[3,0.092,4,0.042,5,0.042,10,0.068,14,0.9,20,0.423,22,1.401,24,0.127,25,1.331,26,0.007,28,0.991,29,0.599,32,1.275,38,1.469,39,1.285,42,0.845,46,0.401,52,1.163,62,0.042,63,0.418,66,1.106,68,1.382,71,0.934,77,1.642,82,0.004,83,0.004,93,1.353,100,1.331,104,1.375,151,0.562,173,1.427,249,3.553,272,2.68,286,0.29,287,0.757,288,1.044,289,0.771,290,0.771,291,1.124,293,0.771,294,1.922,295,1.922,296,0.97,298,2.909,300,0.757,301,0.97,303,0.988,306,1.188,310,0.771,311,1.167,312,1.167,313,0.771,314,1.484,315,0.771,316,0.757,317,2.194,318,0.757,319,1.536,320,0.771,321,0.757,322,0.771,323,0.771,324,1.978,325,0.757,326,0.73,327,0.757,328,0.743,329,0.757,330,0.771,331,1.54,332,1.807,333,2.28,334,0.743,335,1.214,336,0.757,337,1.328,338,0.665,339,0.743,340,1.407,341,1.453,342,1.646,343,0.757,344,0.771,345,0.771,346,0.757,347,0.771,348,0.757,349,1.167,350,0.757,351,1.167,352,0.743,353,0.952,354,1.167,355,0.757,356,0.771,357,0.771,358,0.771,359,0.757,360,0.771,361,0.757,362,0.771,363,0.757,364,0.771,365,0.757,366,0.743,367,0.757,368,0.743,369,0.743,370,0.73,371,0.771,372,0.757,373,1.145,374,0.757,375,0.743,376,0.73,377,0.771,378,0.757,379,0.73,380,0.771,381,0.757,382,0.716,383,0.69,384,0.73,385,0.703,386,0.69,387,0.743,388,0.73,389,1.307,390,1.407,391,0.743,392,0.73,393,0.743,394,0.716,395,1.104,396,0.703,397,0.771,398,0.716,399,0.757,400,0.771,401,0.757,402,0.703,403,0.757,404,0.771,405,0.757,406,0.771,407,1.167,408,0.757,409,0.757,410,0.771,411,0.771,412,0.757,413,1.145,414,0.771,415,0.757,416,0.771,417,0.757,418,0.757,419,0.771,420,0.757,421,0.771,422,0.757,423,1.167,424,0.771,425,0.743,426,0.757,427,0.757,428,0.771,429,0.69,430,0.653,431,0.771,432,0.73,433,0.743,434,0.743,435,0.743,436,0.743,437,0.757,438,0.771,439,0.743,440,0.73,441,0.757,442,0.743,443,0.743,444,0.771,445,0.771,449,1.797,450,2.47,451,3.804,452,2.912,455,3.542,456,2.265,457,2.829,458,2.829,460,2.936,461,2.048,463,4.29,464,2.486,465,3.483,466,4.241,467,3.295,469,2.222,470,1.951,472,2.06,478,2.732,479,3.673,481,1.941,482,2.053,488,1.382,494,1.027,496,2.21,499,2.109,502,3.19,503,2.109,504,3.19,505,2.109,506,3.19,507,2.109,514,3.847,515,4.248,516,3.847,531,2.02,532,2.02,533,2.329,653,2.222,654,1.874,710,1.027,752,3.975,804,8.976,805,7.976,806,2.887,807,4.833,808,3.522,809,3.522,810,2.909,811,5.268,812,4.032,813,4.846,814,5.787,815,4.833,816,2.887,817,2.887,818,3.738,819,5.873,820,2.887,821,3.249,822,3.553,823,4.915,824,3.249,825,2.887,826,2.887,827,2.887,828,2.887,829,3.249,830,3.249,831,3.738,832,5.352,833,3.249,834,2.21,835,3.522,836,3.249,837,3.249,838,2.649,839,2.887,840,2.649,841,3.249,842,2.109,843,2.109,844,2.471,845,2.471,846,2.471,847,2.471,848,2.471,849,2.649,850,3.343,851,2.471,852,1.594,853,1.55,854,1.55,855,2.21,856,4.833,857,2.649,858,2.649,859,2.649,860,2.649,861,2.649,862,1.642,863,2.649,864,3.738,865,3.249,866,2.329,867,3.249,868,3.738,869,2.649,870,2.471,871,3.249,872,3.249,873,2.329]],["title/components/DriverInfoFormComponent.html",[286,0.226,334,1.059]],["body/components/DriverInfoFormComponent.html",[3,0.125,4,0.028,5,0.028,10,0.045,11,0.14,12,1.683,14,0.643,16,1.791,20,0.41,22,1.415,24,0.1,25,1.17,26,0.007,28,0.867,29,0.526,32,1.514,33,2.007,38,1.28,39,1.153,42,0.835,45,0.495,46,0.262,47,1.646,48,0.714,49,0.714,52,1.256,57,0.812,62,0.028,63,0.273,66,1.597,68,0.987,70,2.418,71,1.43,72,2.356,73,1.344,78,2.669,82,0.003,83,0.003,92,2.607,93,1.692,100,0.788,101,0.565,104,1.116,121,2.829,151,0.368,155,2.295,156,0.621,173,1.159,191,0.85,286,0.219,287,0.495,288,0.746,289,0.504,290,0.504,291,0.803,293,0.504,294,1.873,295,1.873,296,0.692,300,0.495,301,0.692,303,0.705,310,0.504,311,0.833,312,0.833,313,0.504,314,1.17,315,0.504,316,0.495,317,2.059,318,0.495,319,1.248,320,0.504,321,0.495,322,0.504,323,0.504,324,1.742,325,0.495,326,0.477,327,0.495,328,0.486,329,0.495,330,0.504,331,0.495,332,0.495,333,0.833,334,1.191,335,1.936,336,0.495,337,1.32,338,0.435,339,0.486,340,1.065,341,1.18,342,1.369,343,0.495,344,0.504,345,0.504,346,0.495,347,0.504,348,0.495,349,0.833,350,0.495,351,0.833,352,0.486,353,1.743,354,0.833,355,0.495,356,0.504,357,0.504,358,0.504,359,0.495,360,0.504,361,0.495,362,0.504,363,0.495,364,0.504,365,0.495,366,0.486,367,1.045,368,0.486,369,0.486,370,0.477,371,0.504,372,0.495,373,1.214,374,0.495,375,0.486,376,0.477,377,0.504,378,0.818,379,1.17,380,0.504,381,0.495,382,0.468,383,0.451,384,0.477,385,0.46,386,0.451,387,0.486,388,0.477,389,0.989,390,1.065,391,0.486,392,0.477,393,0.486,394,0.468,395,0.788,396,0.46,397,0.504,398,1.148,399,0.495,400,0.504,401,0.495,402,0.46,403,0.495,404,0.504,405,0.495,406,0.504,407,0.833,408,0.495,409,0.495,410,0.504,411,0.504,412,0.495,413,0.818,414,0.504,415,0.495,416,0.504,417,0.495,418,0.495,419,0.504,420,0.495,421,0.504,422,0.495,423,1.369,424,0.504,425,1.191,426,0.495,427,0.495,428,0.504,429,0.451,430,0.427,431,0.504,432,0.477,433,0.486,434,0.486,435,0.486,436,0.486,437,0.495,438,0.504,439,0.486,440,0.477,441,0.495,442,0.486,443,0.486,444,0.504,445,0.504,456,1.714,461,1.614,465,4.134,469,1.587,470,2.928,472,1.237,482,1.755,488,1.847,494,0.672,522,2.679,525,2.207,526,0.685,536,0.729,537,0.729,543,2.201,654,1.418,668,2.295,702,1.283,710,0.672,810,2.201,852,1.043,853,1.014,854,1.014,874,6.866,875,6.866,876,8.467,877,0.812,878,2.182,879,5.517,880,3.41,881,1.372,882,1.372,883,2.082,884,4.485,885,4.485,886,2.027,887,4.485,888,1.793,889,2.035,890,2.911,891,4.628,892,2.862,893,2.278,894,3.51,895,4.628,896,3.96,897,3.119,898,5.208,899,6.209,900,5.702,901,6.328,902,5.838,903,6.83,904,4.996,905,5.838,906,5.356,907,4.469,908,1.523,909,2.125,910,3.985,911,3.985,912,3.51,913,3.119,914,1.732,915,3.51,916,5.208,917,3.51,918,4.996,919,2.388,920,1.888,921,3.119,922,3.119,923,1.445,924,1.616,925,3.51,926,3.111,927,1.888,928,2.862,929,1.732,930,1.888,931,5.208,932,4.485,933,3.585,934,1.888,935,3.985,936,4.485,937,3.985,938,3.119,939,1.888,940,3.119,941,3.119,942,1.888,943,3.41,944,3.119,945,3.656,946,2.278,947,1.616,948,2.082,949,1.616,950,3.119,951,1.379,952,3.445,953,1.379,954,2.388,955,1.523,956,1.629,957,1.269,958,2.125,959,3.51,960,1.616,961,1.437,962,1.445,963,1.379,964,1.445,965,2.125,966,2.125,967,1.888,968,1.888,969,2.125,970,2.125,971,2.125,972,2.125,973,2.125,974,2.125,975,2.125,976,1.888,977,2.125,978,2.125,979,1.888,980,2.125,981,1.888,982,2.125,983,0.961,984,1.523,985,1.523,986,0.986,987,1.547,988,1.269,989,2.182,990,1.321,991,1.142,992,0.961,993,0.87,994,0.85,995,0.87,996,0.986,997,1.523,998,1.142,999,1.888,1000,1.888,1001,1.732,1002,1.888,1003,0.986,1004,0.986,1005,0.986,1006,0.986,1007,1.014,1008,2.603,1009,1.888,1010,1.629,1011,3.51,1012,2.125,1013,2.125,1014,1.888,1015,1.616,1016,2.125,1017,2.125,1018,1.616,1019,5.208,1020,2.54,1021,1.888,1022,5.208,1023,2.125,1024,5.766,1025,4.7,1026,2.125,1027,3.445,1028,2.132,1029,2.911,1030,2.36,1031,2.418,1032,1.379,1033,2.125,1034,2.125,1035,2.125,1036,1.773,1037,1.888,1038,2.125,1039,2.125,1040,1.888,1041,1.888,1042,1.223,1043,1.616,1044,1.888,1045,1.888,1046,1.888,1047,2.125,1048,2.125,1049,2.125,1050,2.125,1051,2.125,1052,2.125,1053,2.125,1054,2.125,1055,2.125,1056,1.181,1057,1.321,1058,2.125,1059,2.125,1060,2.125,1061,2.125,1062,2.125,1063,2.125,1064,2.125,1065,2.125,1066,2.125]],["title/injectables/Driver_TruckManagementService.html",[0,1.206,988,2.766]],["body/injectables/Driver_TruckManagementService.html",[0,1.058,1,1.092,2,1.017,3,0.033,4,0.033,5,0.033,7,1.12,8,1.12,9,1.324,10,0.053,11,0.161,12,1.537,14,0.743,15,3.857,16,2.155,20,0.441,22,1.361,24,0.12,25,1.844,26,0.007,28,1.147,29,0.83,32,1.529,33,2.665,35,4.261,38,0.73,39,0.638,42,0.895,45,0.592,46,0.314,47,0.804,48,0.854,49,1.364,52,2.265,58,1.18,59,1.247,60,1.041,61,1.017,62,0.033,63,0.327,66,1.712,67,3.019,69,2.127,71,1.798,72,2.725,73,1.983,82,0.003,83,0.003,85,1.729,91,1.729,92,1.149,93,0.52,101,1.174,106,2.292,107,2.354,146,1.836,148,1.885,150,1.092,151,0.44,152,1.12,153,1.12,154,1.149,155,1.12,156,0.743,159,1.149,160,1.149,164,3.403,165,1.367,166,1.367,176,3.995,178,3.97,179,3.863,180,3.656,183,1.393,184,3.489,185,4.083,188,3.995,189,3.863,190,3.968,191,2.699,196,3.403,314,1.139,335,1.185,337,1.909,338,0.831,891,4.506,895,4.506,896,3.856,900,6.402,904,1.933,907,1.729,926,5.083,988,2.426,989,4.195,990,5.424,991,2.726,992,2.618,1067,6.252,1068,5.07,1069,5.07,1070,5.07,1071,5.79,1072,5.07,1073,5.79,1074,5.07,1075,5.07,1076,5.79,1077,5.07,1078,5.07,1079,5.07,1080,4.061,1081,2.542,1082,2.259,1083,2.542,1084,5.501,1085,2.542,1086,4.867,1087,2.542,1088,2.542,1089,2.542,1090,2.542,1091,2.542,1092,2.542,1093,2.542,1094,5.624,1095,2.542,1096,2.542,1097,2.542,1098,4.836,1099,2.542,1100,2.542,1101,2.542,1102,2.542,1103,4.597,1104,2.259,1105,2.542,1106,2.542,1107,2.542,1108,2.259,1109,2.542,1110,4.818,1111,5.501,1112,2.542,1113,2.542,1114,5.594,1115,2.542,1116,4.061,1117,2.259,1118,3.939,1119,2.542,1120,2.542,1121,2.072,1122,2.072,1123,4.572,1124,3.856,1125,3.088,1126,1.519,1127,1.58,1128,1.58,1129,5.79,1130,5.07,1131,3.31,1132,2.072,1133,2.072,1134,5.07,1135,5.79,1136,2.91,1137,5.07,1138,2.259,1139,1.933,1140,3.608,1141,2.542,1142,4.061,1143,2.542,1144,4.061,1145,2.542,1146,2.542,1147,2.542,1148,4.061,1149,1.729,1150,2.542,1151,4.061,1152,4.061,1153,2.542,1154,2.542,1155,2.542,1156,2.259,1157,2.542,1158,2.542,1159,2.542,1160,2.259,1161,2.542,1162,2.542,1163,2.542,1164,2.542,1165,6.33,1166,5.79,1167,2.542,1168,2.542,1169,2.542,1170,2.072,1171,2.072,1172,2.542,1173,2.542,1174,2.542,1175,2.542,1176,2.542,1177,2.542,1178,4.72,1179,2.542,1180,2.542,1181,1.933,1182,3.856,1183,2.542,1184,4.061,1185,2.542,1186,2.542,1187,2.973,1188,2.542,1189,2.259,1190,2.072,1191,2.259,1192,2.072,1193,2.259,1194,2.259,1195,2.072,1196,2.259,1197,2.072,1198,2.259,1199,1.933,1200,2.259,1201,2.072,1202,2.259,1203,2.072,1204,2.259,1205,2.072,1206,2.259,1207,1.822,1208,2.259,1209,2.542,1210,2.542,1211,2.542,1212,2.542,1213,2.542,1214,2.542,1215,2.542,1216,2.542,1217,2.542]],["title/components/EmergencyTurnsFormComponent.html",[286,0.226,339,1.059]],["body/components/EmergencyTurnsFormComponent.html",[3,0.102,4,0.043,5,0.043,10,0.07,11,0.199,12,1.722,14,0.915,16,1.375,22,1.396,24,0.073,26,0.007,28,0.698,32,1.201,38,1.404,39,1.264,42,0.88,45,0.774,46,0.41,57,1.27,62,0.043,63,0.428,66,1.337,70,1.393,71,0.632,72,1.14,73,0.774,82,0.004,83,0.004,93,1.369,104,1.388,151,0.575,156,0.971,173,1.441,286,0.294,287,0.774,288,1.062,289,0.789,290,0.789,291,1.144,293,0.789,294,1.925,295,1.925,296,0.986,300,0.774,301,0.986,303,1.005,310,0.789,311,1.187,312,1.187,313,0.789,314,1.501,315,0.789,316,0.774,317,2.2,318,0.774,319,1.551,320,0.789,321,0.774,322,0.789,323,0.789,324,1.99,325,0.774,326,0.746,327,0.774,328,0.76,329,0.774,330,0.789,331,0.774,332,0.774,333,1.187,334,0.76,335,1.23,336,0.774,337,1.514,338,0.68,339,1.529,340,1.702,341,1.897,342,2.127,343,0.774,344,0.789,345,0.789,346,0.774,347,0.789,348,0.774,349,1.187,350,0.774,351,1.187,352,0.76,353,1.773,354,1.187,355,0.774,356,0.789,357,0.789,358,0.789,359,0.774,360,0.789,361,0.774,362,0.789,363,0.774,364,0.789,365,0.774,366,0.76,367,0.774,368,0.76,369,0.76,370,0.746,371,0.789,372,0.774,373,1.165,374,0.774,375,0.76,376,0.746,377,0.789,378,0.774,379,0.746,380,0.789,381,0.774,382,0.733,383,0.706,384,0.746,385,0.719,386,0.706,387,0.76,388,0.746,389,1.325,390,1.427,391,0.76,392,0.746,393,0.76,394,0.733,395,1.123,396,0.719,397,0.789,398,0.733,399,0.774,400,0.789,401,0.774,402,0.719,403,0.774,404,0.789,405,0.774,406,0.789,407,1.187,408,0.774,409,0.774,410,0.789,411,0.789,412,0.774,413,1.165,414,0.789,415,0.774,416,0.789,417,0.774,418,0.774,419,0.789,420,0.774,421,0.789,422,0.774,423,1.187,424,0.789,425,1.529,426,0.774,427,0.774,428,0.789,429,0.706,430,0.668,431,0.789,432,0.746,433,0.76,434,0.76,435,0.76,436,0.76,437,1.755,438,1.427,439,0.76,440,0.746,441,0.774,442,0.76,443,0.76,444,0.789,445,0.789,452,1.094,461,2.072,469,2.26,470,2.572,472,1.379,482,1.766,488,1.406,494,1.051,525,2.019,526,1.072,536,1.14,537,1.14,654,1.9,668,2.945,683,2.261,688,2.066,702,1.828,708,1.985,710,1.051,852,1.631,853,1.585,854,1.585,862,1.679,877,1.27,881,1.954,882,1.954,883,2.79,886,2.717,888,2.673,889,2.613,923,2.261,948,2.79,953,2.157,956,2.321,957,1.985,961,2.047,983,1.502,986,1.543,987,1.464,993,1.361,994,1.329,995,1.361,996,1.543,1003,1.543,1004,1.543,1005,1.543,1006,1.543,1007,1.585,1008,2.096,1010,2.321,1020,1.464,1028,1.361,1030,1.361,1031,1.393,1086,4.049,1218,6.413,1219,4.391,1220,7.952,1221,7.952,1222,6.686,1223,6.01,1224,4.547,1225,4.899,1226,5.941,1227,6.686,1228,4.683,1229,7.532,1230,3.323,1231,2.953,1232,3.594,1233,3.994,1234,4.443,1235,2.382,1236,2.953,1237,2.382,1238,2.709,1239,2.709,1240,3.802,1241,2.709,1242,4.076,1243,2.709,1244,2.527,1245,2.709,1246,2.953,1247,2.953,1248,3.323,1249,2.527,1250,2.261,1251,2.261,1252,1.731,1253,2.382,1254,2.382,1255,1.731,1256,1.787,1257,1.787,1258,2.157,1259,2.382,1260,2.527,1261,2.157,1262,3.323,1263,3.323,1264,2.953,1265,2.953,1266,3.323,1267,2.527,1268,1.787,1269,2.527,1270,2.953,1271,2.709,1272,3.323,1273,3.323,1274,3.323,1275,3.323]],["title/interfaces/ErrorsValidation.html",[84,0.039,850,3.149]],["body/interfaces/ErrorsValidation.html",[3,0.056,4,0.056,5,0.056,10,0.091,11,0.242,20,0.331,24,0.124,26,0.007,28,1.373,29,0.918,42,0.449,62,0.098,66,1.615,71,0.826,76,3.542,82,0.005,83,0.005,84,0.036,86,0.724,92,1.964,93,0.89,121,2.132,129,1.964,183,2.083,240,2.501,326,0.976,338,0.89,494,1.374,752,2.897,813,2.82,850,4.763,852,2.98,900,3.114,901,3.861,902,3.861,903,3.861,904,3.304,905,3.861,906,3.542,907,2.956,1086,2.336,1110,2.956,1125,3.304,1187,1.914,1232,5.249,1252,5.093,1276,3.542,1277,3.542,1278,7.978,1279,7.582,1280,6.737,1281,6.737,1282,7.582,1283,7.582,1284,3.542,1285,3.861,1286,3.861,1287,4.345,1288,4.345,1289,4.345,1290,4.345,1291,7.003,1292,6.074,1293,4.345,1294,4.345,1295,4.345,1296,4.345,1297,4.345,1298,4.345,1299,4.345,1300,4.345,1301,4.345,1302,3.542,1303,4.345,1304,4.345,1305,6.074,1306,4.345,1307,7.003,1308,4.345,1309,4.345,1310,6.074,1311,4.345,1312,4.345,1313,6.074,1314,3.861,1315,4.345,1316,3.861,1317,4.345,1318,3.861,1319,4.345,1320,4.345,1321,3.542,1322,3.861,1323,2.336,1324,3.861,1325,4.345,1326,4.345,1327,4.345,1328,4.345,1329,3.542,1330,4.345,1331,4.345,1332,4.345,1333,4.345,1334,4.345,1335,4.345,1336,4.345,1337,4.345,1338,4.345,1339,3.542,1340,6.074,1341,3.542,1342,4.345,1343,3.542,1344,3.304,1345,4.345,1346,4.345,1347,4.345]],["title/interfaces/FPCInfo.html",[84,0.039,1348,3.774]],["body/interfaces/FPCInfo.html",[3,0.087,4,0.087,5,0.087,10,0.141,11,0.32,20,0.535,24,0.138,26,0.007,29,0.984,62,0.087,82,0.006,83,0.006,84,0.056,86,1.116,97,4.156,100,1.938,101,1.087,1348,6.563,1349,6.699,1350,4.347,1351,8.955,1352,8.955,1353,7.957,1354,8.955,1355,8.955,1356,8.955,1357,8.955]],["title/components/FooterComponent.html",[286,0.226,346,1.079]],["body/components/FooterComponent.html",[3,0.107,4,0.061,5,0.061,10,0.099,11,0.256,20,0.35,22,1.01,24,0.094,26,0.007,28,0.897,38,0.847,39,0.741,42,0.665,46,0.582,62,0.061,63,0.607,82,0.005,83,0.005,93,1.607,104,1.591,151,0.816,173,1.651,286,0.357,287,1.099,288,1.365,289,1.12,290,1.12,291,1.47,293,1.12,294,1.953,295,1.953,296,0.93,300,1.099,301,1.268,303,1.292,310,1.12,311,1.526,312,1.526,313,1.12,314,1.763,315,1.12,316,1.099,317,2.282,318,1.099,319,1.778,320,1.12,321,1.099,322,1.12,323,1.12,324,2.15,325,1.099,326,1.059,327,1.099,328,1.079,329,1.099,330,1.12,331,1.099,332,1.099,333,1.526,334,1.079,335,1.497,336,1.099,337,1.578,338,0.966,339,1.079,340,1.736,341,1.682,342,1.869,343,1.099,344,1.12,345,1.12,346,1.83,347,1.12,348,1.099,349,1.526,350,1.099,351,1.526,352,1.079,353,1.245,354,1.526,355,1.099,356,1.12,357,1.12,358,1.12,359,1.099,360,1.12,361,1.099,362,1.12,363,1.099,364,1.12,365,1.099,366,1.079,367,1.099,368,1.079,369,1.079,370,1.059,371,1.12,372,1.099,373,1.498,374,1.099,375,1.079,376,1.059,377,1.12,378,1.099,379,1.059,380,1.12,381,1.099,382,1.04,383,1.002,384,1.059,385,1.021,386,1.002,387,1.079,388,1.059,389,1.612,390,1.736,391,1.079,392,1.059,393,1.079,394,1.04,395,1.443,396,1.021,397,1.12,398,1.04,399,1.099,400,1.12,401,1.099,402,1.021,403,1.099,404,1.12,405,1.099,406,1.12,407,1.526,408,1.099,409,1.099,410,1.12,411,1.12,412,1.099,413,1.498,414,1.12,415,1.099,416,1.12,417,1.099,418,1.099,419,1.12,420,1.099,421,1.12,422,1.099,423,1.526,424,1.12,425,1.079,426,1.099,427,1.099,428,1.12,429,1.002,430,0.948,431,1.12,432,1.059,433,1.079,434,1.079,435,1.079,436,1.079,437,1.099,438,1.12,439,1.079,440,1.059,441,1.099,442,1.079,443,1.079,444,1.12,445,1.12,522,4.368,1358,4.716,1359,6.427,1360,6.427,1361,6.427,1362,8.216,1363,6.427,1364,6.427,1365,3.586,1366,3.586]],["title/components/ForgetPasswordFormComponent.html",[286,0.226,348,1.079]],["body/components/ForgetPasswordFormComponent.html",[3,0.101,4,0.053,5,0.053,10,0.086,11,0.232,14,1.067,20,0.318,22,1.227,24,0.108,25,0.92,26,0.007,28,0.947,29,0.414,32,0.736,38,0.736,39,0.644,42,0.863,46,0.505,62,0.053,63,0.527,71,0.779,82,0.004,83,0.004,93,1.936,104,1.511,151,0.709,173,1.569,286,0.331,287,0.955,288,1.238,289,0.973,290,0.973,291,1.333,293,0.973,294,1.942,295,1.942,296,1.15,300,0.955,301,1.15,303,1.171,310,0.973,311,1.383,312,1.383,313,0.973,314,1.659,315,0.973,316,0.955,317,2.252,318,0.955,319,1.689,320,0.973,321,0.955,322,0.973,323,0.973,324,2.089,325,0.955,326,0.92,327,0.955,328,0.937,329,0.955,330,0.973,331,0.955,332,0.955,333,1.383,334,0.937,335,1.388,336,0.955,337,1.485,338,0.839,339,0.937,340,1.61,341,1.598,342,1.788,343,0.955,344,0.973,345,0.973,346,0.955,347,0.973,348,1.721,349,2.025,350,0.955,351,1.383,352,0.937,353,1.43,354,1.383,355,0.955,356,0.973,357,0.973,358,0.973,359,0.955,360,0.973,361,0.955,362,0.973,363,0.955,364,0.973,365,0.955,366,0.937,367,0.955,368,0.937,369,0.937,370,0.92,371,0.973,372,0.955,373,1.358,374,0.955,375,0.937,376,0.92,377,0.973,378,0.955,379,0.92,380,0.973,381,0.955,382,0.903,383,0.87,384,0.92,385,0.887,386,0.87,387,0.937,388,0.92,389,1.495,390,1.61,391,0.937,392,0.92,393,0.937,394,0.903,395,1.309,396,0.887,397,0.973,398,0.903,399,0.955,400,0.973,401,0.955,402,0.887,403,0.955,404,0.973,405,0.955,406,0.973,407,1.383,408,0.955,409,0.955,410,0.973,411,0.973,412,0.955,413,1.358,414,0.973,415,0.955,416,0.973,417,0.955,418,0.955,419,0.973,420,0.955,421,0.973,422,0.955,423,1.383,424,0.973,425,1.69,426,0.955,427,0.955,428,0.973,429,0.87,430,0.823,431,0.973,432,0.92,433,0.937,434,0.937,435,0.937,436,0.937,437,0.955,438,0.973,439,0.937,440,0.92,441,0.955,442,0.937,443,0.937,444,0.973,445,0.973,456,2.591,469,2.634,470,1.349,482,1.436,494,1.295,522,2.448,525,1.958,526,2.188,536,1.405,537,1.405,654,2.144,710,1.295,852,2.01,853,1.954,854,1.954,877,1.565,881,2.277,882,2.277,886,1.852,952,4.052,963,2.659,983,3.066,985,2.936,986,1.902,987,1.805,1238,3.34,1243,3.34,1365,3.116,1366,3.116,1367,8.111,1368,7.207,1369,6.782,1370,6.782,1371,6.564,1372,5.178,1373,4.097,1374,2.787,1375,5.178,1376,3.641,1377,3.641,1378,4.097,1379,4.097,1380,4.097]],["title/components/ForgetPasswordPageComponent.html",[286,0.226,350,1.079]],["body/components/ForgetPasswordPageComponent.html",[3,0.106,4,0.061,5,0.061,24,0.068,26,0.007,28,0.891,42,0.808,46,0.576,62,0.061,63,0.6,82,0.005,83,0.005,93,1.907,104,1.585,151,0.807,173,1.645,286,0.355,287,1.087,288,1.356,289,1.108,290,1.108,291,1.46,293,1.108,294,1.952,295,1.952,296,1.259,300,1.087,301,1.259,303,1.282,310,1.108,311,1.515,312,1.515,313,1.108,314,1.755,315,1.108,316,1.087,317,2.279,318,1.087,319,1.771,320,1.108,321,1.087,322,1.108,323,1.108,324,2.145,325,1.087,326,1.048,327,1.087,328,1.067,329,1.087,330,1.108,331,1.087,332,1.087,333,1.515,334,1.067,335,1.489,336,1.087,337,1.571,338,0.955,339,1.067,340,1.726,341,1.676,342,1.863,343,1.087,344,1.108,345,1.108,346,1.087,347,1.108,348,1.822,349,2.091,350,1.822,351,1.515,352,1.788,353,1.235,354,1.515,355,1.822,356,1.108,357,1.726,358,1.108,359,1.087,360,1.108,361,1.087,362,1.108,363,1.087,364,1.108,365,1.087,366,1.067,367,1.087,368,1.067,369,1.067,370,1.048,371,1.108,372,1.087,373,1.487,374,1.087,375,1.067,376,1.048,377,1.108,378,1.087,379,1.048,380,1.108,381,1.087,382,1.029,383,0.991,384,1.048,385,1.01,386,0.991,387,1.067,388,1.048,389,1.603,390,1.726,391,1.067,392,1.048,393,1.067,394,1.029,395,1.433,396,1.01,397,1.108,398,1.029,399,1.087,400,1.108,401,1.087,402,1.01,403,1.087,404,1.108,405,1.087,406,1.108,407,1.515,408,1.087,409,1.087,410,1.108,411,1.108,412,1.087,413,1.487,414,1.108,415,1.087,416,1.108,417,1.087,418,1.087,419,1.108,420,1.087,421,1.108,422,1.087,423,1.515,424,1.108,425,1.067,426,1.087,427,1.087,428,1.108,429,0.991,430,0.938,431,1.108,432,1.048,433,1.067,434,1.067,435,1.067,436,1.067,437,1.087,438,1.108,439,1.067,440,1.048,441,1.087,442,1.067,443,1.067,444,1.108,445,1.108,756,5.201,1251,3.174,1368,4.146,1381,4.666,1382,4.666,1383,3.804,1384,5.201,1385,5.201,1386,4.146,1387,3.804,1388,4.146,1389,4.146,1390,3.344,1391,3.344,1392,4.666]],["title/components/FormCardComponent.html",[286,0.226,352,1.059]],["body/components/FormCardComponent.html",[3,0.107,4,0.062,5,0.062,24,0.07,26,0.007,28,0.909,42,0.673,46,0.592,62,0.062,63,0.618,82,0.005,83,0.005,93,1.62,104,1.601,151,0.831,173,1.661,286,0.361,287,1.119,288,1.382,289,1.14,290,1.14,291,1.489,293,1.14,294,1.954,295,1.954,296,1.284,300,1.119,301,1.284,303,1.308,310,1.14,311,1.545,312,1.545,313,1.14,314,1.777,315,1.14,316,1.119,317,2.285,318,1.119,319,1.789,320,1.14,321,1.119,322,1.14,323,1.14,324,2.157,325,1.119,326,1.079,327,1.119,328,1.099,329,1.119,330,1.14,331,1.119,332,1.119,333,1.545,334,1.099,335,1.511,336,1.119,337,1.59,338,0.983,339,1.099,340,1.752,341,1.693,342,1.879,343,1.119,344,1.14,345,1.14,346,1.119,347,1.14,348,1.119,349,1.545,350,1.119,351,1.545,352,1.81,353,1.717,354,1.545,355,1.119,356,1.14,357,1.14,358,1.14,359,1.119,360,1.14,361,1.119,362,1.14,363,1.119,364,1.14,365,1.119,366,1.099,367,1.119,368,1.099,369,1.099,370,1.079,371,1.14,372,1.119,373,1.516,374,1.119,375,1.099,376,1.079,377,1.14,378,1.119,379,1.079,380,1.14,381,1.119,382,1.059,383,1.02,384,1.079,385,1.039,386,1.02,387,1.099,388,1.079,389,1.627,390,1.752,391,1.099,392,1.079,393,1.099,394,1.059,395,1.461,396,1.039,397,1.14,398,1.059,399,1.119,400,1.14,401,1.119,402,1.039,403,1.119,404,1.14,405,1.119,406,1.14,407,1.545,408,1.119,409,1.119,410,1.14,411,1.14,412,1.119,413,1.516,414,1.14,415,1.119,416,1.14,417,1.119,418,1.119,419,1.14,420,1.119,421,1.14,422,1.119,423,1.545,424,1.14,425,1.099,426,1.119,427,1.119,428,1.14,429,1.02,430,0.965,431,1.14,432,1.079,433,1.099,434,1.099,435,1.099,436,1.099,437,1.119,438,1.14,439,1.099,440,1.079,441,1.119,442,1.099,443,1.099,444,1.14,445,1.14,1390,3.442,1393,4.803,1394,4.268,1395,5.305,1396,5.289,1397,5.782,1398,5.782,1399,3.267]],["title/injectables/FpcManagementService.html",[0,1.206,1400,4.114]],["body/injectables/FpcManagementService.html",[0,1.53,1,1.779,2,1.655,3,0.054,4,0.054,5,0.054,7,1.824,8,1.824,9,2.156,10,0.087,11,0.233,12,1.547,14,1.075,15,3.865,16,2.16,20,0.372,22,1.367,24,0.122,25,1.879,26,0.007,28,1.168,29,0.846,32,1.504,33,2.673,35,4.246,38,1.055,39,0.923,42,0.923,45,0.965,46,0.511,47,1.309,48,1.391,49,1.972,52,1.481,58,1.921,59,2.031,60,1.694,61,1.655,62,0.054,63,0.533,66,1.706,67,1.975,69,1.391,71,1.789,72,1.42,73,1.826,82,0.004,83,0.004,85,2.816,91,2.816,92,1.871,93,0.847,101,1.135,106,3.083,107,3.166,146,2.654,147,3.148,148,2.725,150,1.779,151,0.716,152,1.824,153,1.824,154,1.871,155,1.824,156,1.21,159,1.871,160,1.871,164,4.212,165,2.225,166,2.225,176,3.955,178,3.992,179,3.885,180,3.783,184,3.509,185,4.106,186,2.686,188,3.955,189,3.885,190,4.106,191,1.655,196,2.225,314,0.93,992,1.871,1117,3.678,1121,3.374,1122,3.374,1131,4.785,1132,3.374,1133,3.374,1136,2.966,1170,3.374,1171,3.374,1348,7.696,1353,8.333,1400,5.216,1401,8.82,1402,8.82,1403,6.82,1404,6.82,1405,6.82,1406,6.82,1407,5.87,1408,6.82,1409,6.82,1410,4.139,1411,4.139,1412,4.139,1413,8.138,1414,4.139,1415,4.139,1416,4.139,1417,3.148,1418,5.87,1419,4.139,1420,4.139,1421,4.139,1422,6.82,1423,4.139,1424,4.139,1425,3.148,1426,4.139,1427,5.87,1428,4.139,1429,4.139,1430,4.139,1431,7.421,1432,4.139,1433,4.139,1434,5.87,1435,4.139,1436,4.139,1437,4.139,1438,4.139]],["title/components/FullScreenBackgroundComponent.html",[286,0.226,355,1.079]],["body/components/FullScreenBackgroundComponent.html",[3,0.104,4,0.058,5,0.058,10,0.093,20,0.438,22,1.203,24,0.117,26,0.007,28,0.86,38,1.375,39,1.203,42,0.637,46,0.547,62,0.058,63,0.571,82,0.005,83,0.005,93,1.566,101,0.776,104,1.557,151,0.768,173,1.616,183,2.114,286,0.346,287,1.034,288,1.309,289,1.053,290,1.053,291,1.41,293,1.053,294,1.948,295,1.948,296,1.216,300,1.034,301,1.216,303,1.239,306,1.622,310,1.053,311,1.463,312,1.463,313,1.053,314,1.718,315,1.053,316,1.034,317,2.269,318,1.034,319,1.74,320,1.053,321,1.034,322,1.053,323,1.053,324,2.124,325,1.034,326,0.996,327,1.034,328,1.015,329,1.034,330,1.053,331,1.034,332,1.034,333,1.463,334,1.015,335,1.45,336,1.034,337,1.538,338,0.908,339,1.015,340,1.681,341,1.646,342,1.834,343,1.034,344,1.053,345,1.053,346,1.034,347,1.053,348,1.034,349,1.463,350,1.034,351,1.463,352,1.015,353,1.193,354,1.463,355,1.783,356,2.026,357,2.228,358,1.053,359,1.034,360,1.053,361,1.034,362,1.053,363,1.034,364,1.053,365,1.034,366,1.015,367,1.034,368,1.015,369,1.015,370,0.996,371,1.053,372,1.034,373,1.436,374,1.034,375,1.015,376,0.996,377,1.053,378,1.034,379,0.996,380,1.053,381,1.034,382,0.978,383,0.943,384,0.996,385,0.96,386,0.943,387,1.015,388,0.996,389,1.561,390,1.681,391,1.015,392,0.996,393,1.015,394,0.978,395,1.384,396,0.96,397,1.053,398,0.978,399,1.034,400,1.053,401,1.034,402,0.96,403,1.034,404,1.053,405,1.034,406,1.053,407,1.463,408,1.034,409,1.034,410,1.053,411,1.053,412,1.034,413,1.436,414,1.053,415,1.034,416,1.053,417,1.034,418,1.034,419,1.053,420,1.034,421,1.053,422,1.034,423,1.463,424,1.053,425,1.015,426,1.034,427,1.034,428,1.053,429,0.943,430,0.892,431,1.053,432,0.996,433,1.015,434,1.015,435,1.015,436,1.015,437,1.034,438,1.053,439,1.015,440,0.996,441,1.034,442,1.015,443,1.015,444,1.053,445,1.053,452,2.646,464,2.584,622,4.192,1387,6.554,1439,8.04,1440,4.437,1441,7.081,1442,6.163,1443,6.163,1444,7.081,1445,6.163,1446,5.773,1447,7.081,1448,6.163,1449,4.437,1450,6.163,1451,4.437,1452,4.437,1453,6.163,1454,4.437,1455,4.437]],["title/components/HeaderComponent.html",[286,0.226,359,1.079]],["body/components/HeaderComponent.html",[3,0.105,4,0.059,5,0.059,10,0.095,14,1.14,22,1.122,24,0.104,25,1.012,26,0.007,28,0.997,29,0.455,32,0.81,38,0.81,39,0.708,42,0.836,46,0.556,62,0.059,63,0.58,82,0.005,83,0.005,93,1.577,104,1.565,129,2.816,151,1.235,173,1.625,272,2.816,286,0.349,287,1.05,288,1.323,289,1.07,290,1.07,291,1.425,293,1.07,294,1.95,295,1.95,296,1.229,300,1.05,301,1.229,303,1.252,310,1.07,311,1.479,312,1.479,313,1.07,314,1.73,315,1.07,316,1.05,317,2.272,318,1.05,319,1.749,320,1.07,321,1.05,322,1.07,323,1.07,324,2.131,325,1.05,326,1.012,327,1.05,328,1.031,329,1.05,330,1.07,331,1.05,332,1.05,333,1.479,334,1.031,335,1.462,336,1.05,337,1.548,338,0.922,339,1.031,340,1.695,341,1.655,342,1.843,343,1.05,344,1.07,345,1.07,346,1.05,347,1.07,348,1.05,349,1.479,350,1.05,351,1.479,352,1.031,353,1.206,354,1.479,355,1.05,356,1.07,357,1.07,358,1.07,359,1.795,360,1.07,361,1.05,362,1.07,363,1.05,364,1.07,365,1.05,366,1.031,367,1.05,368,1.031,369,1.031,370,1.012,371,1.07,372,1.05,373,1.452,374,1.05,375,1.031,376,1.012,377,1.07,378,1.05,379,1.012,380,1.07,381,1.05,382,0.993,383,0.957,384,1.012,385,0.975,386,0.957,387,1.031,388,1.012,389,1.574,390,1.695,391,1.031,392,1.012,393,1.031,394,0.993,395,1.399,396,0.975,397,1.07,398,0.993,399,1.05,400,1.07,401,1.05,402,0.975,403,1.05,404,1.07,405,1.05,406,1.07,407,1.479,408,1.05,409,1.05,410,1.07,411,1.07,412,1.05,413,1.452,414,1.07,415,1.05,416,1.07,417,1.05,418,1.05,419,1.07,420,1.05,421,1.07,422,1.05,423,1.479,424,1.07,425,1.031,426,1.05,427,1.05,428,1.07,429,0.957,430,0.905,431,1.07,432,1.012,433,1.031,434,1.031,435,1.031,436,1.031,437,1.05,438,1.07,439,1.031,440,1.012,441,1.05,442,1.031,443,1.031,444,1.07,445,1.07,452,2.05,464,2.612,482,1.11,522,2.692,538,3.426,654,2.257,660,6.357,664,5.519,709,2.801,710,1.424,726,3.426,729,4.004,730,3.673,822,3.348,1042,3.585,1456,4.506,1457,6.229,1458,6.229,1459,8.084,1460,4.004,1461,4.506,1462,4.506,1463,4.506,1464,4.506,1465,4.506,1466,6.229]],["title/interfaces/HeaderData.html",[84,0.039,660,3.52]],["body/interfaces/HeaderData.html",[3,0.096,4,0.096,5,0.096,10,0.155,11,0.338,20,0.503,24,0.124,26,0.007,62,0.096,82,0.006,83,0.006,84,0.061,86,1.225,129,4.058,272,4.058,660,6.469,1467,7.356,1468,6.537,1469,6.537,1470,7.356]],["title/components/HomePageComponent.html",[286,0.226,361,1.079]],["body/components/HomePageComponent.html",[3,0.099,4,0.05,5,0.05,10,0.138,11,0.223,14,1.026,16,1.822,20,0.416,22,1.346,24,0.12,25,1.258,26,0.007,28,1.006,29,0.566,32,1.182,33,1.637,38,1.373,39,1.201,42,0.899,46,0.479,62,0.05,63,0.499,68,1.575,71,0.737,73,1.306,82,0.004,83,0.004,93,1.475,104,1.48,151,0.671,173,1.65,286,0.321,287,0.904,288,1.19,289,0.921,290,0.921,291,1.282,293,0.921,294,1.938,295,1.938,296,1.105,298,3.227,300,0.904,301,1.105,303,1.126,306,1.418,310,0.921,311,1.33,312,1.33,313,0.921,314,1.618,315,0.921,316,0.904,317,2.239,318,0.904,319,1.654,320,0.921,321,0.904,322,0.921,323,0.921,324,2.064,325,0.904,326,0.871,327,0.904,328,0.887,329,0.904,330,0.921,331,0.904,332,0.904,333,1.33,334,0.887,335,1.347,336,0.904,337,1.448,338,0.794,339,0.887,340,1.562,341,1.564,342,1.755,343,0.904,344,0.921,345,0.921,346,0.904,347,0.921,348,0.904,349,1.33,350,0.904,351,1.33,352,0.887,353,1.085,354,1.33,355,0.904,356,0.921,357,0.921,358,0.921,359,0.904,360,0.921,361,1.679,362,0.921,363,0.904,364,0.921,365,0.904,366,0.887,367,0.904,368,0.887,369,0.887,370,0.871,371,0.921,372,0.904,373,1.306,374,0.904,375,0.887,376,0.871,377,0.921,378,0.904,379,0.871,380,0.921,381,0.904,382,0.855,383,0.824,384,0.871,385,0.839,386,0.824,387,0.887,388,0.871,389,1.45,390,1.562,391,0.887,392,0.871,393,0.887,394,0.855,395,1.258,396,0.839,397,0.921,398,1.588,399,0.904,400,0.921,401,0.904,402,0.839,403,0.904,404,0.921,405,0.904,406,0.921,407,1.33,408,0.904,409,0.904,410,0.921,411,0.921,412,0.904,413,1.306,414,0.921,415,0.904,416,0.921,417,0.904,418,0.904,419,0.921,420,1.679,421,1.562,422,0.904,423,1.33,424,0.921,425,0.887,426,0.904,427,0.904,428,0.921,429,0.824,430,0.78,431,0.921,432,0.871,433,0.887,434,0.887,435,0.887,436,0.887,437,0.904,438,0.921,439,0.887,440,0.871,441,0.904,442,0.887,443,0.887,444,0.921,445,0.921,449,2.049,450,2.458,461,2.233,482,1.381,522,2.317,538,2.95,653,2.533,654,2.08,710,1.226,987,1.709,998,2.085,1365,2.95,1366,2.95,1383,3.162,1384,4.568,1385,4.568,1391,2.78,1471,8.695,1472,7.963,1473,6.578,1474,6.578,1475,6.578,1476,6.578,1477,7.641,1478,6.578,1479,6.79,1480,5.603,1481,7.205,1482,3.879,1483,5.873,1484,5.603,1485,5.603,1486,5.603,1487,6.137,1488,3.879,1489,4.261,1490,3.879,1491,3.879,1492,3.879,1493,3.879,1494,3.879,1495,3.879,1496,5.603,1497,2.78,1498,2.95,1499,3.879,1500,3.879,1501,3.447,1502,3.879,1503,3.879,1504,3.879,1505,3.879,1506,3.879,1507,3.879,1508,3.879,1509,5.603,1510,3.879,1511,5.603,1512,3.879,1513,2.02,1514,3.879,1515,3.879,1516,3.225]],["title/interfaces/LADPlace.html",[84,0.039,1517,3.774]],["body/interfaces/LADPlace.html",[3,0.09,4,0.09,5,0.09,10,0.145,11,0.326,20,0.523,24,0.137,26,0.007,29,0.964,62,0.09,82,0.006,83,0.006,84,0.057,86,1.151,100,2.104,101,1.102,1517,6.686,1518,6.91,1519,6.141,1520,9.047,1521,9.047,1522,8.039,1523,9.047,1524,8.039,1525,9.047]],["title/injectables/LADPlaceManagementService.html",[0,1.206,1526,3.52]],["body/injectables/LADPlaceManagementService.html",[0,1.515,1,1.755,2,1.633,3,0.053,4,0.053,5,0.053,7,1.8,8,1.8,9,2.127,10,0.086,11,0.231,12,1.54,14,1.065,15,3.859,16,2.157,20,0.369,22,1.363,24,0.121,25,1.872,26,0.007,28,1.164,29,0.842,32,1.498,33,2.668,35,4.237,37,2.927,38,1.045,39,0.914,42,0.897,45,0.952,46,0.504,47,1.291,48,1.372,49,1.954,52,1.461,58,1.896,59,2.004,60,1.672,61,1.633,62,0.053,63,0.525,66,1.703,67,1.948,69,1.372,71,1.786,72,1.401,73,1.943,82,0.004,83,0.004,101,1.132,106,3.061,107,3.143,121,2.853,129,2.629,146,2.629,148,2.699,150,1.755,151,0.707,152,1.8,153,1.8,154,1.846,155,1.8,156,1.194,159,1.846,160,1.846,164,4.191,165,2.196,166,2.196,176,3.947,178,3.977,179,3.87,180,3.769,183,1.994,184,3.495,185,4.09,186,2.651,188,3.947,189,3.87,190,4.09,191,1.633,196,2.196,1417,3.106,1498,3.106,1517,7.326,1522,8.32,1524,7.2,1526,4.421,1527,8.795,1528,9.397,1529,8.795,1530,6.77,1531,6.77,1532,6.77,1533,5.815,1534,5.815,1535,6.77,1536,6.77,1537,4.085,1538,4.085,1539,4.085,1540,4.085,1541,4.085,1542,4.085,1543,5.815,1544,4.085,1545,5.815,1546,3.106,1547,4.085,1548,8.898,1549,4.085,1550,4.085,1551,2.927,1552,4.085,1553,5.815,1554,4.085,1555,4.085,1556,4.085,1557,4.085,1558,4.085,1559,7.377,1560,4.085,1561,4.085,1562,5.815,1563,4.085,1564,4.085,1565,4.085,1566,4.085,1567,4.085,1568,4.085]],["title/interfaces/LoadAnnouncementPlace.html",[84,0.039,1487,3.317]],["body/interfaces/LoadAnnouncementPlace.html",[3,0.093,4,0.093,5,0.093,10,0.15,11,0.333,20,0.531,24,0.133,26,0.007,62,0.093,82,0.006,83,0.006,84,0.059,86,1.19,173,1.436,240,5.264,1487,5.995,1519,6.35,1569,6.35,1570,9.146,1571,9.146,1572,9.146]],["title/injectables/LoadAnnouncementPlacesService.html",[0,1.206,1483,3.774]],["body/injectables/LoadAnnouncementPlacesService.html",[0,2.079,1,2.835,2,2.638,3,0.086,4,0.086,5,0.086,7,2.907,8,2.907,10,0.139,11,0.317,12,1.63,14,1.46,15,3.51,16,1.962,22,1.254,26,0.007,32,1.185,33,2.331,38,1.185,39,1.037,42,0.959,45,1.537,46,0.814,47,2.086,48,2.217,49,2.217,60,2.701,61,2.638,62,0.086,63,0.849,66,1.488,71,1.254,73,1.537,82,0.006,83,0.006,106,3.876,146,3.606,155,2.907,156,1.928,159,2.982,160,2.982,173,1.79,176,3.428,179,3.062,180,2.982,188,3.428,189,3.062,572,5.862,1483,6.503,1487,4.728,1497,4.728,1498,5.017,1573,8.575,1574,6.597,1575,8.909,1576,6.597,1577,6.597,1578,7.977,1579,6.597,1580,6.597,1581,6.597]],["title/components/LoadCapacitorFormComponent.html",[286,0.226,366,1.059]],["body/components/LoadCapacitorFormComponent.html",[3,0.085,4,0.031,5,0.031,10,0.05,11,0.153,12,1.625,14,0.705,16,1.11,20,0.13,22,1.464,24,0.101,25,1.089,26,0.007,28,0.855,29,0.49,32,1.1,33,1.126,38,1.239,39,1.084,42,0.835,45,0.555,46,0.294,47,1.762,48,0.8,49,0.8,62,0.031,63,0.306,66,1.704,68,0.669,71,0.452,72,1.321,73,0.555,82,0.003,83,0.003,93,1.141,100,0.865,101,0.485,104,1.186,151,0.412,156,0.696,173,1.23,183,1.912,191,0.952,240,3.771,286,0.237,287,0.555,288,0.818,289,0.565,290,0.565,291,0.881,293,0.565,294,1.888,295,1.888,296,0.76,298,1.89,300,0.555,301,0.76,303,0.774,306,0.87,310,0.565,311,0.914,312,0.914,313,0.565,314,1.252,315,0.565,316,0.555,317,2.099,318,0.555,319,1.325,320,0.565,321,0.555,322,0.565,323,0.565,324,1.809,325,0.555,326,0.535,327,0.555,328,1.275,329,0.555,330,0.565,331,0.555,332,0.555,333,0.914,334,0.545,335,0.993,336,0.555,337,1.12,338,0.487,339,0.545,340,1.152,341,1.253,342,1.444,343,0.555,344,0.565,345,0.565,346,0.555,347,0.565,348,0.555,349,0.914,350,0.555,351,0.914,352,0.545,353,1.079,354,0.914,355,0.555,356,0.565,357,0.565,358,0.565,359,0.555,360,0.565,361,0.555,362,0.565,363,0.555,364,0.565,365,0.555,366,1.275,367,1.673,368,2.226,369,0.545,370,0.535,371,0.565,372,0.555,373,0.898,374,0.555,375,0.545,376,0.535,377,0.565,378,0.555,379,0.535,380,0.565,381,0.555,382,0.525,383,0.506,384,0.535,385,0.515,386,0.506,387,0.545,388,0.535,389,1.07,390,1.152,391,0.545,392,0.535,393,0.545,394,0.525,395,0.865,396,0.515,397,0.565,398,0.525,399,0.555,400,0.565,401,0.555,402,0.515,403,0.555,404,0.565,405,0.555,406,0.565,407,0.914,408,0.555,409,0.555,410,0.565,411,0.565,412,0.555,413,0.898,414,0.565,415,0.555,416,0.565,417,0.555,418,0.555,419,0.565,420,0.555,421,0.565,422,0.555,423,0.914,424,0.565,425,1.275,426,0.555,427,0.555,428,0.565,429,0.506,430,0.478,431,0.565,432,0.535,433,0.545,434,0.545,435,0.545,436,0.545,437,0.555,438,0.565,439,0.545,440,0.535,441,0.555,442,0.545,443,0.545,444,0.565,445,0.565,456,1.472,469,1.741,470,3.129,472,0.657,482,1.195,494,0.753,525,1.63,526,0.768,536,0.817,537,0.817,543,1.168,587,1.941,654,1.534,702,1.408,710,0.753,810,2.38,852,1.168,853,1.136,854,1.136,877,0.91,881,1.505,882,1.505,886,2.193,888,2.448,890,3.149,893,2.5,907,4.456,914,1.941,919,2.62,952,2.898,955,1.706,956,1.788,957,1.422,981,2.115,983,1.076,986,1.105,987,1.049,992,1.076,1010,2.842,1027,1.422,1032,1.545,1036,1.203,1056,1.323,1232,1.28,1234,3.423,1235,1.706,1252,1.24,1258,1.545,1329,5.341,1339,5.341,1341,5.341,1343,5.341,1497,1.706,1582,9.332,1583,8.292,1584,3.016,1585,4.852,1586,4.852,1587,4.852,1588,3.852,1589,5.575,1590,5.575,1591,3.852,1592,6.123,1593,5.822,1594,5.822,1595,4.982,1596,5.341,1597,5.822,1598,5.822,1599,5.822,1600,6.129,1601,4.456,1602,5.341,1603,4.456,1604,5.341,1605,5.822,1606,5.822,1607,5.822,1608,5.822,1609,5.822,1610,5.822,1611,5.822,1612,3.852,1613,4.239,1614,2.381,1615,1.619,1616,2.381,1617,2.381,1618,2.381,1619,3.852,1620,4.239,1621,2.381,1622,3.852,1623,2.381,1624,3.852,1625,8.389,1626,3.852,1627,3.852,1628,3.852,1629,3.852,1630,3.852,1631,3.852,1632,3.852,1633,3.852,1634,3.852,1635,3.852,1636,3.852,1637,3.852,1638,3.852,1639,3.852,1640,1.706,1641,1.941,1642,4.311,1643,3.423,1644,3.423,1645,1.706,1646,1.706,1647,2.381,1648,2.381,1649,2.381,1650,2.381,1651,2.381,1652,2.115,1653,2.381,1654,2.115,1655,2.381,1656,2.381,1657,2.381,1658,2.115,1659,2.381,1660,2.381,1661,2.381,1662,2.115,1663,2.381,1664,2.115,1665,2.381,1666,1.941,1667,2.381,1668,2.381,1669,2.115,1670,2.381,1671,2.115,1672,2.381,1673,2.381,1674,2.381,1675,2.381,1676,2.381,1677,2.381,1678,2.381,1679,2.381,1680,2.381,1681,2.115,1682,2.381,1683,2.115,1684,2.381,1685,2.381,1686,2.381,1687,2.381,1688,2.381,1689,2.381,1690,2.381,1691,2.381,1692,2.381,1693,2.115,1694,2.115,1695,2.381,1696,2.381,1697,2.381,1698,2.115,1699,1.941,1700,2.381,1701,2.115,1702,1.48,1703,2.381,1704,2.381,1705,2.381,1706,2.381,1707,2.381,1708,2.381,1709,2.381,1710,2.381,1711,2.381,1712,2.381,1713,2.381,1714,2.381,1715,2.381,1716,2.381,1717,2.381,1718,2.381,1719,2.381,1720,2.381,1721,2.381,1722,2.381,1723,2.381,1724,2.381,1725,2.381,1726,2.381,1727,2.381,1728,2.381,1729,2.381,1730,2.381,1731,2.381,1732,2.381,1733,2.381,1734,2.381,1735,2.381,1736,2.115,1737,2.381,1738,2.115,1739,2.381,1740,2.115,1741,2.381,1742,1.28,1743,2.381,1744,2.381,1745,2.381,1746,2.381,1747,2.381,1748,2.381,1749,2.381,1750,2.381,1751,2.381,1752,2.381,1753,2.381,1754,2.381,1755,2.381,1756,2.381,1757,2.381,1758,2.381,1759,2.381,1760,2.381,1761,2.381,1762,2.381,1763,2.381,1764,2.381,1765,2.381,1766,2.381,1767,2.381,1768,2.381,1769,2.381,1770,3.852,1771,3.852,1772,3.852,1773,3.852]],["title/injectables/LoadCapacitorManagementService.html",[0,1.206,1699,3.774]],["body/injectables/LoadCapacitorManagementService.html",[0,2.003,1,2.667,2,2.482,3,0.081,4,0.081,5,0.081,7,2.735,8,2.735,9,3.232,10,0.13,11,0.306,12,1.736,14,1.407,15,3.417,16,1.91,22,1.312,24,0.09,25,1.394,26,0.007,28,0.867,29,0.627,32,1.115,33,2.246,35,3.567,38,1.381,39,1.208,41,5.515,42,0.958,45,1.446,46,0.766,47,1.962,48,2.085,49,2.085,60,2.541,61,2.482,62,0.081,63,0.798,66,1.434,71,1.461,73,1.446,82,0.006,83,0.006,101,1.052,106,3.774,107,3.875,146,3.474,148,3.567,150,2.667,151,1.074,152,2.735,153,2.735,154,2.806,155,2.735,156,1.814,159,2.806,160,2.806,176,3.302,178,2.961,179,2.881,180,2.806,184,2.602,185,3.045,188,3.302,189,2.881,190,3.045,368,2.14,992,2.806,1136,4.448,1497,4.448,1551,4.448,1620,4.72,1699,6.265,1701,7.752,1774,8.724,1775,7.685,1776,7.685,1777,7.418,1778,6.207,1779,7.685,1780,6.207,1781,6.207]],["title/interfaces/LoadInfo.html",[84,0.039,1620,3.52]],["body/interfaces/LoadInfo.html",[3,0.086,4,0.064,5,0.064,10,0.104,11,0.264,20,0.536,24,0.142,26,0.007,42,0.511,62,0.064,82,0.005,83,0.005,84,0.041,86,0.822,101,1.238,240,4.606,907,5.443,1329,6.523,1339,6.523,1341,6.523,1343,6.523,1350,3.205,1569,4.388,1593,7.11,1594,7.11,1595,6.084,1596,6.523,1597,7.11,1598,7.11,1599,7.11,1600,7.11,1601,5.443,1602,6.523,1603,5.443,1604,6.523,1605,7.11,1606,7.11,1607,7.11,1608,7.11,1609,7.11,1610,7.11,1611,7.11,1613,6.084,1620,5.042,1698,4.388,1777,7.11,1782,8.002,1783,8.002,1784,4.939]],["title/interfaces/LoaderType.html",[84,0.039,1323,2.489]],["body/interfaces/LoaderType.html",[3,0.089,4,0.089,5,0.089,10,0.145,11,0.325,20,0.51,24,0.136,26,0.007,29,0.974,62,0.089,82,0.006,83,0.006,84,0.057,86,1.146,97,4.194,100,1.961,101,1.208,1323,4.399,1785,6.116,1786,4.279,1787,5.234,1788,8.029,1789,8.029,1790,4.433,1791,8.029,1792,5.398]],["title/components/LoaderTypeFormComponent.html",[286,0.226,369,1.059]],["body/components/LoaderTypeFormComponent.html",[3,0.09,4,0.04,5,0.04,10,0.099,11,0.188,12,1.73,14,0.865,16,1.843,20,0.313,22,1.399,24,0.141,25,1.558,26,0.007,28,1.064,29,0.701,32,1.412,33,1.381,38,1.412,39,1.266,42,0.877,45,0.719,46,0.381,47,2.034,48,1.036,49,1.036,57,1.179,62,0.04,63,0.397,66,1.421,68,1.615,70,1.293,71,1.223,72,1.97,73,1.338,82,0.004,83,0.004,93,1.317,100,1.061,101,0.723,104,1.343,121,2.318,129,2.596,130,3.386,151,0.534,173,1.394,191,1.234,284,2.515,286,0.281,287,0.719,288,1.004,289,0.732,290,0.732,291,1.081,293,0.732,294,1.917,295,1.917,296,0.932,300,0.719,301,0.932,310,0.732,311,1.122,312,1.122,313,0.732,314,1.445,315,0.732,316,0.719,317,2.18,318,0.719,319,1.501,320,0.732,321,0.719,322,0.732,323,0.732,324,1.952,325,0.719,326,0.693,327,0.719,328,0.706,329,0.719,330,0.732,331,0.719,332,0.719,333,1.122,334,0.706,335,1.176,336,0.719,337,1.293,338,0.632,339,0.706,340,1.363,341,1.42,342,1.613,343,0.719,344,0.732,345,0.732,346,0.719,347,0.732,348,0.719,349,1.122,350,0.719,351,1.122,352,0.706,353,1.246,354,1.122,355,0.719,356,0.732,357,0.732,358,0.732,359,0.719,360,0.732,361,0.719,362,0.732,363,0.719,364,0.732,365,0.719,366,0.706,367,0.719,368,0.706,369,1.472,370,1.765,371,0.732,372,0.719,373,1.101,374,0.719,375,0.706,376,0.693,377,0.732,378,0.719,379,0.693,380,0.732,381,0.719,382,0.68,383,0.655,384,0.693,385,0.668,386,0.655,387,0.706,388,0.693,389,1.266,390,1.363,391,0.706,392,0.693,393,0.706,394,0.68,395,1.061,396,0.668,397,0.732,398,0.68,399,0.719,400,0.732,401,0.719,402,0.668,403,0.719,404,0.732,405,0.719,406,0.732,407,1.122,408,0.719,409,0.719,410,0.732,411,0.732,412,0.719,413,1.101,414,0.732,415,0.719,416,0.732,417,0.719,418,0.719,419,0.732,420,0.719,421,0.732,422,0.719,423,1.122,424,0.732,425,1.472,426,0.719,427,0.719,428,0.732,429,0.655,430,0.62,431,0.732,432,0.693,433,0.706,434,0.706,435,0.706,436,0.706,437,0.719,438,0.732,439,0.706,440,0.693,441,0.719,442,0.706,443,0.706,444,0.732,445,0.732,456,2.194,461,1.994,465,1.514,469,2.136,470,2.409,472,1.775,482,1.586,488,1.328,494,0.975,525,1.929,526,0.995,536,1.058,537,1.058,543,1.514,577,5.103,587,2.515,653,2.136,654,1.815,668,2.835,702,1.727,710,0.975,800,1.558,877,1.179,881,1.846,882,2.244,883,2.665,886,2.596,888,2.774,889,2.515,890,3.727,893,3.066,919,3.214,948,2.665,949,2.346,951,2.002,952,4.372,956,2.193,957,1.843,960,2.346,961,1.934,962,2.098,964,2.098,983,1.395,986,1.432,987,1.359,993,1.263,994,1.234,995,1.263,996,1.432,1003,1.432,1004,1.432,1005,1.432,1006,1.432,1007,1.472,1008,1.981,1010,2.665,1020,1.359,1027,2.823,1028,1.263,1029,2.002,1030,1.263,1031,1.293,1032,2.002,1036,1.558,1056,1.714,1232,2.54,1237,2.211,1247,2.741,1252,1.607,1258,2.002,1323,3.459,1374,2.098,1513,1.607,1584,3.57,1615,2.098,1642,5.103,1643,4.198,1702,1.918,1786,1.918,1793,3.085,1794,8.957,1795,7.959,1796,4.725,1797,5.742,1798,4.681,1799,4.725,1800,4.725,1801,6.435,1802,4.725,1803,4.725,1804,5.742,1805,4.725,1806,2.515,1807,4.725,1808,3.085,1809,3.085,1810,2.346,1811,2.211,1812,4.725,1813,4.725,1814,2.515,1815,3.386,1816,4.725,1817,2.098,1818,3.085,1819,3.085,1820,3.214,1821,1.658,1822,2.002,1823,2.098,1824,1.918,1825,2.515,1826,4.725,1827,3.085,1828,3.085,1829,3.085,1830,3.085,1831,3.085,1832,3.085,1833,3.085,1834,3.085,1835,3.085,1836,3.085,1837,4.725,1838,3.085,1839,3.085,1840,3.085,1841,4.725,1842,4.725,1843,4.725,1844,4.725]],["title/interfaces/LoaderTypeInRelation.html",[84,0.039,1845,3.774]],["body/interfaces/LoaderTypeInRelation.html",[3,0.093,4,0.093,5,0.093,10,0.151,11,0.333,20,0.499,24,0.122,26,0.007,29,0.847,62,0.109,82,0.006,83,0.006,84,0.07,86,1.195,101,1.154,1187,3.161,1790,4.493,1792,5.471,1845,7.243,1846,4.88,1847,4.657,1848,3.857,1849,6.376,1850,4.88,1851,4.13,1852,4.287,1853,5.849]],["title/injectables/LoaderTypesService.html",[0,1.206,1822,3.004]],["body/injectables/LoaderTypesService.html",[0,1.751,1,2.165,2,2.015,3,0.065,4,0.065,5,0.065,7,2.22,8,2.22,10,0.106,11,0.267,12,1.725,14,1.23,15,3.716,16,2.076,20,0.412,22,1.359,24,0.11,25,1.698,26,0.007,28,1.056,29,0.764,32,1.449,33,2.526,35,4.012,38,1.207,39,1.056,42,0.939,45,1.174,46,0.621,47,1.593,48,1.693,49,2.258,52,2.404,58,2.339,59,2.472,60,2.062,61,2.015,62,0.065,63,0.648,66,1.646,67,3.205,69,2.258,71,1.742,72,2.305,73,1.762,82,0.005,83,0.005,97,2.339,101,0.953,106,3.418,107,3.51,146,3.038,148,3.119,150,2.165,151,0.872,152,2.22,153,2.22,154,2.278,155,2.22,156,1.472,159,2.278,160,2.278,164,3.612,165,2.708,166,2.708,176,3.852,178,3.607,179,3.51,180,3.418,183,1.728,184,3.17,185,3.71,186,5.235,188,3.852,189,3.51,190,3.71,191,2.687,196,3.612,1323,4.879,1785,7.841,1786,3.132,1788,4.477,1789,4.477,1790,4.329,1791,4.477,1792,4.015,1820,3.427,1821,2.708,1822,4.361,1823,6.002,1854,4.477,1855,7.561,1856,8.066,1857,7.561,1858,6.72,1859,5.038,1860,5.038,1861,5.038,1862,5.038,1863,4.477,1864,6.72,1865,5.038,1866,4.477,1867,4.477,1868,7.561,1869,5.038,1870,4.477,1871,5.038,1872,5.038,1873,5.038,1874,5.038,1875,5.038,1876,5.038,1877,5.038,1878,5.038,1879,5.038,1880,5.038,1881,5.038,1882,5.038,1883,5.038,1884,5.038,1885,3.831,1886,4.477]],["title/components/LoadingComponent.html",[286,0.226,300,1.079]],["body/components/LoadingComponent.html",[3,0.105,4,0.059,5,0.059,10,0.095,11,0.249,12,1.361,14,1.144,16,1.43,22,1.125,24,0.091,26,0.007,28,0.873,32,0.814,38,0.814,39,0.712,42,0.837,45,1.055,46,0.559,57,1.73,62,0.059,63,0.583,82,0.005,83,0.005,93,1.58,104,1.568,151,0.784,173,1.628,286,0.35,287,1.055,288,1.328,289,1.075,290,1.075,291,1.43,293,1.075,294,1.95,295,1.95,296,1.233,300,1.799,301,1.233,303,1.256,306,1.656,310,1.075,311,1.484,312,1.484,313,1.075,314,1.733,315,1.075,316,1.055,317,2.273,318,1.055,319,1.753,320,1.075,321,1.055,322,1.075,323,1.075,324,2.133,325,1.055,326,1.017,327,1.055,328,1.036,329,1.055,330,1.075,331,1.055,332,1.055,333,1.484,334,1.036,335,1.466,336,1.055,337,1.551,338,0.927,339,1.036,340,1.699,341,1.658,342,1.846,343,1.055,344,1.075,345,1.075,346,1.055,347,1.075,348,1.055,349,1.484,350,1.055,351,1.484,352,1.036,353,1.21,354,1.484,355,1.055,356,1.075,357,1.075,358,1.075,359,1.055,360,1.075,361,1.055,362,1.075,363,1.055,364,1.075,365,1.055,366,1.036,367,1.055,368,1.036,369,1.036,370,1.017,371,1.075,372,1.055,373,1.457,374,1.055,375,1.036,376,1.017,377,1.075,378,1.055,379,1.017,380,1.075,381,1.055,382,0.998,383,0.962,384,1.017,385,0.98,386,0.962,387,1.036,388,1.017,389,1.578,390,1.699,391,1.036,392,1.017,393,1.036,394,0.998,395,1.404,396,0.98,397,1.075,398,0.998,399,1.055,400,1.075,401,1.055,402,0.98,403,1.055,404,1.075,405,1.055,406,1.075,407,1.484,408,1.055,409,1.055,410,1.075,411,1.075,412,1.055,413,1.457,414,1.075,415,1.055,416,1.075,417,1.055,418,1.055,419,1.075,420,1.055,421,1.075,422,1.055,423,1.484,424,1.075,425,1.036,426,1.055,427,1.055,428,1.075,429,0.962,430,0.91,431,1.075,432,1.017,433,1.036,434,1.036,435,1.036,436,1.036,437,1.055,438,1.075,439,1.036,440,1.017,441,1.055,442,1.036,443,1.036,444,1.075,445,1.075,449,2.285,450,2.675,461,2.392,482,1.54,888,3.349,889,3.016,961,2.559,993,1.854,994,1.811,995,1.854,1005,2.102,1008,1.899,1887,4.529,1888,5.096,1889,5.096,1890,6.251,1891,6.251,1892,4.529,1893,4.753,1894,4.529,1895,4.529,1896,3.692,1897,4.529,1898,4.529]],["title/injectables/LoadingService.html",[0,1.206,889,1.809]],["body/injectables/LoadingService.html",[0,2.103,2,2.689,3,0.087,4,0.087,5,0.087,10,0.141,11,0.321,12,1.643,14,1.477,15,3.539,22,1.359,24,0.118,25,1.51,26,0.007,28,0.939,29,0.679,32,1.208,38,1.45,39,1.268,42,0.834,46,0.829,57,2.569,60,2.753,61,2.689,62,0.087,63,0.865,82,0.006,83,0.006,100,1.942,249,4.648,482,1.988,488,2.269,888,3.457,889,3.153,994,3.585,1893,6.574,1899,8.966,1900,6.724,1901,8.646,1902,8.069,1903,8.069,1904,6.724,1905,5.482,1906,8.069,1907,6.724,1908,8.069,1909,6.724,1910,6.724,1911,6.724]],["title/components/LoginFormComponent.html",[286,0.226,372,1.079]],["body/components/LoginFormComponent.html",[3,0.095,4,0.045,5,0.045,10,0.073,11,0.205,12,1.7,14,0.943,15,2.519,16,1.749,20,0.372,22,1.416,24,0.099,26,0.007,28,0.719,32,0.925,33,1.992,38,1.462,39,1.279,42,0.917,45,0.806,46,0.426,62,0.045,63,0.445,66,1.477,68,1.917,71,0.979,73,1.434,82,0.004,83,0.004,92,3.455,93,1.733,104,1.412,107,2.856,148,2.39,150,1.485,151,0.598,152,1.523,153,1.523,154,1.563,173,1.465,184,3.205,261,2.244,286,0.301,287,0.806,288,1.094,289,0.821,290,0.821,291,1.178,293,0.821,294,1.928,295,1.928,296,1.016,300,0.806,301,1.016,303,1.035,305,2.351,310,0.821,311,1.222,312,1.222,313,0.821,314,1.531,315,0.821,316,0.806,317,2.21,318,0.806,319,1.578,320,0.821,321,0.806,322,0.821,323,0.821,324,2.009,325,1.781,326,1.778,327,1.589,328,0.791,329,0.806,330,0.821,331,0.806,332,0.806,333,1.222,334,0.791,335,1.26,336,0.806,337,1.37,338,0.708,339,0.791,340,1.461,341,1.493,342,1.685,343,0.806,344,0.821,345,0.821,346,0.806,347,0.821,348,0.806,349,1.222,350,0.806,351,1.222,352,0.791,353,1.32,354,1.222,355,0.806,356,0.821,357,0.821,358,0.821,359,0.806,360,0.821,361,0.806,362,0.821,363,0.806,364,0.821,365,0.806,366,0.791,367,0.806,368,0.791,369,0.791,370,0.776,371,0.821,372,1.589,373,1.896,374,0.806,375,0.791,376,0.776,377,0.821,378,0.806,379,0.776,380,0.821,381,1.589,382,0.762,383,0.734,384,0.776,385,0.748,386,0.734,387,0.791,388,0.776,389,1.357,390,1.461,391,0.791,392,0.776,393,0.791,394,0.762,395,1.156,396,0.748,397,0.821,398,0.762,399,0.806,400,0.821,401,0.806,402,0.748,403,0.806,404,0.821,405,0.806,406,0.821,407,1.222,408,0.806,409,0.806,410,0.821,411,0.821,412,0.806,413,1.2,414,0.821,415,0.806,416,0.821,417,0.806,418,0.806,419,0.821,420,0.806,421,0.821,422,0.806,423,1.222,424,0.821,425,1.56,426,0.806,427,0.806,428,0.821,429,0.734,430,0.695,431,0.821,432,0.776,433,0.791,434,0.791,435,0.791,436,0.791,437,0.806,438,0.821,439,0.791,440,0.776,441,0.806,442,0.791,443,0.791,444,0.821,445,0.821,456,2.351,469,2.328,470,2.516,494,1.093,513,2.818,525,2.067,526,1.115,536,1.186,537,1.186,543,1.696,563,3.072,576,3.072,640,2.818,653,2.328,654,1.945,663,5.184,688,2.149,696,4.198,702,1.883,708,2.065,710,1.093,721,2.477,722,2.477,852,1.696,853,1.649,854,1.649,877,1.321,881,2.012,882,2.012,886,2.782,949,2.629,951,2.244,953,2.244,955,2.477,956,2.39,957,2.065,963,2.244,964,2.351,983,1.563,985,2.477,986,1.605,987,3.004,1010,2.39,1028,1.415,1232,3.665,1252,1.8,1365,2.629,1366,2.629,1371,6.058,1374,2.351,1375,4.576,1817,2.351,1912,9.064,1913,8.055,1914,6.153,1915,6.153,1916,6.153,1917,6.153,1918,6.153,1919,6.818,1920,6.792,1921,2.629,1922,3.457,1923,5.149,1924,5.149,1925,5.149,1926,5.149,1927,5.149,1928,3.457,1929,3.072,1930,3.457,1931,3.457,1932,3.072,1933,3.457,1934,3.457,1935,3.457,1936,3.072,1937,3.457,1938,3.072,1939,3.457,1940,3.457,1941,3.457,1942,3.457,1943,3.457,1944,3.457,1945,3.457,1946,3.457,1947,3.457,1948,3.457,1949,3.457,1950,3.457,1951,3.457,1952,3.457,1953,3.457,1954,3.457,1955,3.457,1956,3.457,1957,3.457,1958,3.457,1959,3.457,1960,3.457,1961,3.457,1962,3.457,1963,3.457,1964,3.457,1965,3.457,1966,3.457,1967,3.457,1968,3.457]],["title/interfaces/LoginFormData.html",[84,0.039,1969,3.774]],["body/interfaces/LoginFormData.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.529,24,0.135,26,0.007,62,0.092,82,0.006,83,0.006,84,0.059,86,1.179,92,4.122,93,1.867,100,1.868,184,3.704,326,2.048,353,1.371,1468,6.29,1920,7.851,1969,6.782,1970,7.078,1971,7.078,1972,6.29]],["title/components/LoginPageComponent.html",[286,0.226,374,1.079]],["body/components/LoginPageComponent.html",[3,0.107,4,0.061,5,0.061,24,0.068,26,0.007,28,0.894,42,0.848,46,0.579,62,0.061,63,0.603,82,0.005,83,0.005,93,1.604,104,1.588,151,0.812,173,1.648,286,0.356,287,1.093,288,1.36,289,1.114,290,1.114,291,1.465,293,1.114,294,1.952,295,1.952,296,1.263,298,3.142,300,1.093,301,1.263,303,1.287,306,1.715,310,1.114,311,1.52,312,1.52,313,1.114,314,1.759,315,1.114,316,1.093,317,2.281,318,1.093,319,1.775,320,1.114,321,1.093,322,1.114,323,1.114,324,2.148,325,1.093,326,1.053,327,1.093,328,1.073,329,1.093,330,1.114,331,1.093,332,1.093,333,1.52,334,1.073,335,1.493,336,1.093,337,1.574,338,0.96,339,1.073,340,1.731,341,1.679,342,1.866,343,1.093,344,1.114,345,1.114,346,1.093,347,1.114,348,1.093,349,1.52,350,1.093,351,1.52,352,1.668,353,1.24,354,1.52,355,1.699,356,1.114,357,1.731,358,1.114,359,1.093,360,1.114,361,1.093,362,1.114,363,1.093,364,1.114,365,1.093,366,1.073,367,1.093,368,1.073,369,1.073,370,1.053,371,1.114,372,1.699,373,2.055,374,1.826,375,1.073,376,1.053,377,1.114,378,1.093,379,1.053,380,1.114,381,1.093,382,1.034,383,0.997,384,1.053,385,1.015,386,0.997,387,1.073,388,1.053,389,1.607,390,1.731,391,1.073,392,1.053,393,1.073,394,1.034,395,1.438,396,1.015,397,1.114,398,1.034,399,1.093,400,1.114,401,1.093,402,1.015,403,1.093,404,1.114,405,1.093,406,1.114,407,1.52,408,1.093,409,1.093,410,1.114,411,1.114,412,1.093,413,1.492,414,1.114,415,1.093,416,1.114,417,1.093,418,1.093,419,1.114,420,1.093,421,1.114,422,1.093,423,1.52,424,1.114,425,1.073,426,1.093,427,1.093,428,1.114,429,0.997,430,0.943,431,1.114,432,1.053,433,1.073,434,1.073,435,1.073,436,1.073,437,1.093,438,1.114,439,1.073,440,1.053,441,1.093,442,1.073,443,1.073,444,1.114,445,1.114,756,5.221,1251,3.191,1383,3.824,1384,5.221,1385,5.221,1386,4.168,1387,3.824,1388,4.168,1389,4.168,1390,3.362,1391,3.362,1913,4.168,1973,4.691,1974,4.691,1975,4.691,1976,4.691]],["title/components/MainViewComponent.html",[286,0.226,375,1.059]],["body/components/MainViewComponent.html",[3,0.108,4,0.063,5,0.063,24,0.07,26,0.007,28,0.911,42,0.498,46,0.595,62,0.063,63,0.62,82,0.005,83,0.005,93,1.622,104,1.603,151,0.834,173,1.664,286,0.361,287,1.123,288,1.386,289,1.144,290,1.144,291,1.492,293,1.144,294,1.954,295,1.954,296,0.951,300,1.123,301,1.287,303,1.311,310,1.144,311,1.549,312,1.549,313,1.144,314,1.779,315,1.144,316,1.123,317,2.286,318,1.123,319,1.791,320,1.144,321,1.123,322,1.144,323,1.144,324,2.159,325,1.123,326,1.083,327,1.123,328,1.103,329,1.123,330,1.144,331,1.123,332,1.123,333,1.549,334,1.103,335,1.514,336,1.123,337,1.592,338,0.987,339,1.103,340,1.755,341,1.695,342,1.881,343,1.123,344,1.144,345,1.144,346,1.123,347,1.144,348,1.123,349,1.549,350,1.123,351,1.549,352,1.103,353,1.263,354,1.549,355,1.123,356,1.144,357,1.144,358,1.144,359,1.123,360,1.144,361,1.123,362,1.144,363,1.123,364,1.144,365,1.123,366,1.103,367,1.123,368,1.103,369,1.103,370,1.083,371,1.144,372,1.123,373,1.52,374,1.123,375,1.812,376,1.959,377,1.144,378,1.123,379,1.083,380,1.144,381,1.123,382,1.063,383,1.024,384,1.083,385,1.043,386,1.024,387,1.103,388,1.083,389,1.63,390,1.755,391,1.103,392,1.083,393,1.103,394,1.063,395,1.465,396,1.043,397,1.144,398,1.063,399,1.123,400,1.144,401,1.123,402,1.043,403,1.123,404,1.144,405,1.123,406,1.144,407,1.549,408,1.123,409,1.123,410,1.144,411,1.144,412,1.123,413,1.846,414,1.144,415,1.123,416,1.144,417,1.123,418,1.123,419,1.144,420,1.123,421,1.144,422,1.123,423,1.549,424,1.144,425,1.103,426,1.123,427,1.123,428,1.144,429,1.024,430,0.969,431,1.144,432,1.083,433,1.103,434,1.103,435,1.103,436,1.103,437,1.123,438,1.144,439,1.103,440,1.083,441,1.123,442,1.103,443,1.103,444,1.144,445,1.144,1977,4.82,1978,4.283,1979,4.283,1980,5.797,1981,5.797]],["title/interfaces/MenuItemData.html",[84,0.039,693,3.317]],["body/interfaces/MenuItemData.html",[3,0.094,4,0.094,5,0.094,10,0.151,11,0.334,14,1.539,20,0.515,22,1.133,24,0.122,26,0.007,32,1.294,62,0.094,82,0.006,83,0.006,84,0.06,86,1.2,272,4.145,467,4.256,482,2.071,693,6.024,781,8.148,1982,8.406,1983,7.205,1984,7.205]],["title/components/NewPasswordDialogComponent.html",[286,0.226,378,1.079]],["body/components/NewPasswordDialogComponent.html",[3,0.103,4,0.055,5,0.055,10,0.089,11,0.238,12,1.316,14,1.096,20,0.46,22,1.181,24,0.109,25,0.956,26,0.007,28,0.967,29,0.43,32,0.765,38,1.244,39,1.089,42,0.777,45,0.992,46,0.525,62,0.055,63,0.548,82,0.004,83,0.004,92,3.579,93,1.958,104,1.533,151,0.736,173,1.591,286,0.338,287,0.992,288,1.272,289,1.011,290,1.011,291,1.37,293,1.011,294,1.945,295,1.945,296,1.181,300,0.992,301,1.181,303,1.203,310,1.011,311,1.421,312,1.421,313,1.011,314,1.687,315,1.011,316,0.992,317,2.26,318,0.992,319,1.714,320,1.011,321,0.992,322,1.011,323,1.011,324,2.106,325,0.992,326,0.956,327,0.992,328,0.974,329,0.992,330,1.011,331,0.992,332,0.992,333,1.421,334,0.974,335,1.418,336,0.992,337,1.51,338,0.871,339,0.974,340,1.644,341,1.621,342,1.81,343,0.992,344,1.011,345,1.011,346,0.992,347,1.011,348,0.992,349,1.421,350,0.992,351,1.421,352,0.974,353,1.159,354,1.421,355,0.992,356,1.011,357,1.011,358,1.011,359,0.992,360,1.011,361,0.992,362,1.011,363,0.992,364,1.011,365,0.992,366,0.974,367,0.992,368,0.974,369,0.974,370,0.956,371,1.011,372,0.992,373,1.395,374,0.992,375,0.974,376,0.956,377,1.011,378,1.751,379,1.555,380,1.011,381,0.992,382,0.938,383,0.904,384,0.956,385,0.921,386,0.904,387,0.974,388,0.956,389,1.527,390,1.644,391,0.974,392,0.956,393,0.974,394,0.938,395,1.345,396,0.921,397,1.011,398,0.938,399,0.992,400,1.011,401,0.992,402,0.921,403,0.992,404,1.011,405,0.992,406,1.011,407,1.421,408,0.992,409,0.992,410,1.011,411,1.011,412,0.992,413,1.395,414,1.011,415,0.992,416,1.011,417,0.992,418,0.992,419,1.011,420,0.992,421,1.011,422,0.992,423,1.644,424,1.011,425,0.974,426,0.992,427,0.992,428,1.011,429,0.904,430,0.855,431,1.011,432,0.956,433,0.974,434,0.974,435,0.974,436,0.974,437,0.992,438,1.011,439,0.974,440,0.956,441,0.992,442,0.974,443,0.974,444,1.011,445,1.011,452,2.28,464,2.51,482,1.049,488,2.113,525,2.327,526,1.373,536,1.46,537,1.46,654,1.893,702,2.189,710,1.346,880,4.553,892,4.881,913,5.32,933,3.722,984,3.051,1001,6.455,1028,1.743,1040,3.783,1985,7.918,1986,4.257,1987,5.987,1988,5.987,1989,4.257,1990,4.257,1991,4.257,1992,4.257,1993,4.257]],["title/interfaces/PTPInfo.html",[84,0.039,1613,3.52]],["body/interfaces/PTPInfo.html",[3,0.107,4,0.09,5,0.09,10,0.146,11,0.327,20,0.477,24,0.132,26,0.007,62,0.09,82,0.006,83,0.006,84,0.058,86,1.155,100,1.967,101,1.181,1613,6.251,1736,8.05,1738,8.05,1740,8.05,1742,4.87,1994,6.938,1995,6.938]],["title/interfaces/PageGroup.html",[84,0.039,255,3.52]],["body/interfaces/PageGroup.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.514,24,0.133,26,0.007,42,0.734,62,0.092,82,0.006,83,0.006,84,0.059,86,1.182,96,6.307,101,1.114,121,4.478,129,4.125,239,4.828,255,6.336,272,4.125,274,7.44,705,6.54,1996,7.098,1997,6.307]],["title/components/PasswordInputComponent.html",[286,0.226,381,1.079]],["body/components/PasswordInputComponent.html",[3,0.1,4,0.051,5,0.051,10,0.082,11,0.225,14,1.035,20,0.46,22,1.371,24,0.127,26,0.007,28,0.789,32,0.705,38,1.543,39,1.35,42,0.852,46,0.484,62,0.051,63,0.505,68,2.037,82,0.004,83,0.004,93,1.785,100,1.795,104,1.487,151,1.146,173,1.543,249,3.56,272,2.994,286,0.324,287,0.915,288,1.201,289,0.932,290,0.932,291,1.293,293,0.932,294,1.939,295,1.939,296,1.115,300,0.915,301,1.115,303,1.136,310,0.932,311,1.342,312,1.342,313,0.932,314,1.627,315,0.932,316,0.915,317,2.242,318,0.915,319,1.661,320,0.932,321,0.915,322,0.932,323,0.932,324,2.07,325,0.915,326,0.882,327,0.915,328,0.898,329,0.915,330,0.932,331,0.915,332,0.915,333,1.342,334,0.898,335,1.356,336,0.915,337,1.456,338,0.804,339,0.898,340,1.572,341,1.572,342,1.763,343,0.915,344,0.932,345,0.932,346,0.915,347,0.932,348,0.915,349,1.342,350,0.915,351,1.342,352,0.898,353,1.094,354,1.342,355,0.915,356,0.932,357,0.932,358,0.932,359,0.915,360,0.932,361,0.915,362,0.932,363,0.915,364,0.932,365,0.915,366,0.898,367,0.915,368,0.898,369,0.898,370,0.882,371,0.932,372,0.915,373,1.317,374,0.915,375,0.898,376,0.882,377,0.932,378,0.915,379,0.882,380,0.932,381,1.688,382,0.865,383,0.834,384,0.882,385,0.85,386,0.834,387,0.898,388,0.882,389,1.46,390,1.572,391,0.898,392,0.882,393,0.898,394,0.865,395,1.269,396,0.85,397,0.932,398,0.865,399,0.915,400,0.932,401,0.915,402,0.85,403,0.915,404,0.932,405,0.915,406,0.932,407,1.342,408,0.915,409,0.915,410,0.932,411,0.932,412,0.915,413,1.317,414,0.932,415,0.915,416,0.932,417,0.915,418,0.915,419,0.932,420,0.915,421,0.932,422,0.915,423,1.572,424,0.932,425,1.657,426,0.915,427,0.915,428,0.932,429,0.834,430,0.789,431,0.932,432,0.882,433,0.898,434,0.898,435,0.898,436,0.898,437,0.915,438,0.932,439,0.898,440,0.882,441,0.915,442,0.898,443,0.898,444,0.932,445,0.932,448,2.44,452,2.906,456,2.53,457,3.253,458,3.253,464,2.37,465,3.249,466,3.956,467,3.074,470,2.527,471,3.2,472,1.998,474,3.2,476,3.2,482,1.393,486,2.985,488,1.589,494,1.241,514,4.298,515,4.746,516,4.298,527,2.985,528,3.2,530,3.2,531,2.44,532,2.44,533,2.813,653,2.555,752,4.022,810,3.249,812,4.504,813,5.189,822,3.894,853,1.873,854,1.873,986,1.822,987,1.729,1938,7.844,1998,8.827,1999,6.622,2000,7.244,2001,3.926,2002,3.488,2003,3.926,2004,5.652]],["title/interfaces/PrimitiveTokens.html",[84,0.039,604,3.149]],["body/interfaces/PrimitiveTokens.html",[3,0.085,4,0.085,5,0.085,20,0.535,22,1.032,26,0.007,28,0.917,62,0.085,82,0.006,83,0.006,84,0.076,86,1.093,101,0.827,286,0.389,288,1.395,597,6.049,598,4.704,599,4.704,600,5.699,601,4.704,602,4.943,604,5.82,605,5.699,606,6.132,607,4.704,608,4.704,609,4.704,610,4.704,611,5.41,612,4.704,613,4.704,614,4.704,615,4.704,616,4.704,617,6.132,618,4.704,619,4.704,620,4.704,621,4.704,622,4.465,623,4.704,624,4.704,625,4.704,626,4.465,627,4.704,628,5.41,629,4.704,630,4.465,631,4.465,632,4.704,633,4.704,634,4.704,635,4.704,636,4.465,637,4.465,638,4.704,2005,6.564]],["title/interfaces/Product.html",[84,0.039,383,0.983]],["body/interfaces/Product.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.497,24,0.129,26,0.007,29,0.921,62,0.108,82,0.006,83,0.006,84,0.069,86,1.179,100,2.048,101,1.149,383,1.877,1787,5.382,2006,6.29,2007,6.202,2008,5.447,2009,8.102,2010,4.594,2011,4.815,2012,4.815,2013,4.815,2014,5.073]],["title/components/ProductFormComponent.html",[286,0.226,382,1.021]],["body/components/ProductFormComponent.html",[3,0.088,4,0.038,5,0.038,10,0.061,11,0.179,12,1.75,14,0.823,16,1.98,20,0.389,22,1.41,24,0.125,25,1.602,26,0.007,28,1.075,29,0.721,32,1.42,33,1.314,38,1.452,39,1.293,42,0.876,45,0.674,46,0.357,47,1.744,48,0.972,49,0.972,52,1.609,57,1.106,62,0.058,63,0.372,66,1.535,68,2.005,69,1.511,70,1.213,71,1.588,72,2.311,73,1.793,79,2.359,82,0.004,83,0.003,84,0.037,93,1.274,97,3.669,100,1.943,101,0.996,104,1.305,151,0.501,173,1.354,183,1.543,191,1.157,286,0.27,287,0.674,288,0.956,289,0.687,290,0.687,291,1.029,293,0.687,294,1.911,295,1.911,296,0.887,298,2.707,300,0.674,301,0.887,303,0.904,306,1.058,310,0.687,311,1.068,312,1.068,313,0.687,314,1.397,315,0.687,316,0.674,317,2.161,318,0.674,319,1.458,320,0.687,321,0.674,322,0.687,323,0.687,324,1.918,325,0.674,326,0.65,327,0.674,328,0.662,329,0.674,330,0.687,331,0.674,332,0.674,333,1.068,334,0.662,335,1.129,336,0.674,337,1.25,338,0.593,339,0.662,340,1.31,341,1.379,342,1.572,343,0.674,344,0.687,345,0.687,346,0.674,347,0.687,348,0.674,349,1.068,350,0.674,351,1.068,352,0.662,353,1.205,354,1.068,355,0.674,356,0.687,357,0.687,358,0.687,359,0.674,360,0.687,361,0.674,362,0.687,363,0.674,364,0.687,365,0.674,366,0.662,367,0.674,368,0.662,369,0.662,370,0.65,371,0.687,372,0.674,373,1.048,374,0.674,375,0.662,376,0.65,377,0.687,378,0.674,379,0.65,380,0.687,381,0.674,382,1.372,383,1.635,384,0.65,385,0.626,386,0.615,387,0.662,388,0.65,389,1.216,390,1.31,391,0.662,392,0.65,393,0.662,394,0.638,395,1.01,396,0.626,397,0.687,398,0.638,399,0.674,400,0.687,401,0.674,402,0.626,403,0.674,404,0.687,405,0.674,406,0.687,407,1.068,408,0.674,409,0.674,410,0.687,411,0.687,412,0.674,413,1.048,414,0.687,415,0.674,416,0.687,417,0.674,418,0.674,419,0.687,420,0.674,421,0.687,422,0.674,423,1.068,424,0.687,425,0.662,426,0.674,427,0.674,428,0.687,429,1.322,430,1.109,431,0.687,432,0.65,433,0.662,434,0.662,435,0.662,436,0.662,437,0.674,438,0.687,439,0.662,440,0.65,441,0.674,442,0.662,443,0.662,444,0.687,445,0.687,449,1.644,450,2.061,461,1.928,472,1.522,482,1.533,488,1.265,525,1.854,526,0.934,536,0.993,537,0.993,543,2.207,653,2.033,654,1.744,668,2.741,702,1.644,710,0.915,877,1.106,881,1.758,882,1.758,883,2.561,888,2.206,889,2.431,893,2.919,908,2.074,919,1.969,947,2.201,948,2.561,949,2.201,951,1.878,953,1.878,961,1.841,963,1.878,993,1.185,994,1.157,995,1.185,996,1.343,1003,1.343,1004,1.343,1005,1.343,1006,1.343,1007,1.381,1008,1.886,1020,1.275,1027,2.687,1028,1.185,1029,1.878,1030,1.185,1031,1.213,1036,1.462,1056,1.608,1126,1.729,1127,1.799,1128,1.799,1149,1.969,1513,1.507,1742,1.556,1821,1.556,1824,1.799,1921,2.201,1936,2.572,2007,4.232,2008,3.717,2010,3.58,2011,5.063,2012,3.059,2013,4.852,2014,3.953,2015,7.353,2016,6.858,2017,3.175,2018,4.497,2019,3.953,2020,3.752,2021,4.497,2022,3.296,2023,3.953,2024,3.997,2025,4.498,2026,4.497,2027,4.498,2028,4.498,2029,4.458,2030,2.894,2031,2.359,2032,2.894,2033,4.105,2034,3.667,2035,2.572,2036,2.894,2037,2.572,2038,2.894,2039,3.667,2040,3.717,2041,2.359,2042,3.667,2043,2.572,2044,2.894,2045,2.359,2046,3.059,2047,2.572,2048,2.201,2049,2.074,2050,3.667,2051,2.687,2052,2.572,2053,2.572,2054,1.666,2055,1.343,2056,2.359,2057,1.799,2058,2.074,2059,2.201,2060,2.074,2061,2.359,2062,2.201,2063,2.201,2064,1.878,2065,1.666,2066,1.878,2067,2.359,2068,2.359,2069,2.359,2070,2.589,2071,2.359,2072,4.447,2073,2.359,2074,2.359,2075,3.667,2076,3.58,2077,1.969,2078,2.359,2079,2.074,2080,3.667,2081,2.359,2082,2.074,2083,3.667,2084,3.667,2085,2.074,2086,2.074,2087,2.074,2088,3.223,2089,2.074,2090,1.878,2091,1.878,2092,1.878,2093,1.507,2094,2.074,2095,1.878,2096,3.223,2097,2.359,2098,2.359,2099,2.074,2100,2.359,2101,2.074]],["title/interfaces/ProductParent.html",[84,0.039,2063,3.52]],["body/interfaces/ProductParent.html",[3,0.059,4,0.059,5,0.059,10,0.096,11,0.249,12,1.664,16,1.856,20,0.442,24,0.105,26,0.007,33,1.329,39,0.715,42,0.954,45,1.06,46,0.561,47,1.438,48,1.528,49,1.528,52,2.243,57,1.738,62,0.081,63,0.585,66,1.694,68,2.174,69,2.107,70,1.907,71,1.74,72,2.653,73,2.04,82,0.005,83,0.005,84,0.052,86,0.758,97,3.765,100,2.019,101,1.056,183,2.151,191,1.819,286,0.306,294,0.897,295,0.897,296,0.897,298,3.076,301,0.897,303,0.914,306,1.663,353,0.881,382,1.003,383,1.643,429,1.332,430,1.26,449,1.663,450,2.343,461,1.41,472,1.73,482,1.545,488,1.279,525,1.528,526,1.467,536,1.56,537,1.56,543,3.076,653,2.056,654,1.982,668,2.004,702,1.663,710,1.438,877,1.738,881,1.778,882,1.778,883,2.111,888,1.819,889,2.45,948,2.91,961,1.862,993,1.862,994,1.819,995,1.862,996,2.111,1003,2.111,1004,2.111,1005,2.111,1006,2.111,1007,2.17,1008,2.629,1020,2.004,1027,3.746,1028,1.862,1029,2.952,1030,1.862,1031,1.907,1036,2.298,1056,2.528,1126,2.717,1127,2.828,1128,2.828,1149,3.094,1742,2.445,1821,2.445,1824,2.828,2007,5.26,2008,4.286,2010,2.952,2011,6.043,2012,5.517,2013,6.043,2014,3.26,2015,3.708,2016,3.459,2017,3.609,2018,3.708,2019,3.26,2020,3.094,2021,3.708,2022,2.717,2023,3.26,2026,3.708,2029,3.26,2033,4.13,2034,3.708,2039,3.708,2040,3.746,2042,3.708,2046,3.094,2050,3.708,2051,2.717,2054,2.618,2055,2.111,2056,3.708,2057,2.828,2058,3.26,2059,3.459,2060,3.26,2061,3.708,2062,3.459,2063,4.768,2064,2.952,2065,2.618,2066,2.952,2067,3.708,2068,3.708,2069,3.708,2070,3.609,2071,3.708,2072,5.133,2073,3.708,2074,3.708,2075,5.111,2076,4.656,2077,3.094,2078,3.708,2079,3.26,2080,5.111,2081,3.708,2082,3.26,2083,5.111,2084,5.111,2085,3.26,2086,3.26,2087,3.26,2088,4.493,2089,3.26,2090,2.952,2091,2.952,2092,2.952,2093,2.369,2094,3.26,2095,2.952,2096,4.493,2097,3.708,2098,3.708,2099,3.26,2100,3.708,2101,3.26]],["title/interfaces/ProductType.html",[84,0.039,2010,3.004]],["body/interfaces/ProductType.html",[3,0.091,4,0.091,5,0.091,10,0.147,11,0.328,20,0.495,24,0.132,26,0.007,29,0.949,62,0.107,82,0.006,83,0.006,84,0.069,86,1.165,100,2.04,101,1.144,383,1.93,1787,5.318,2006,6.214,2007,4.757,2008,4.178,2009,6.214,2010,5.361,2011,6.178,2012,6.178,2013,6.178,2014,6.509]],["title/injectables/ProductTypesService.html",[0,1.206,2060,3.317]],["body/injectables/ProductTypesService.html",[0,1.782,1,2.222,2,2.068,3,0.067,4,0.067,5,0.067,7,2.279,8,2.279,10,0.109,11,0.272,12,1.655,14,1.252,15,3.735,16,2.087,20,0.417,22,1.332,24,0.112,25,1.72,26,0.007,28,1.07,29,0.774,32,1.376,33,2.545,35,4.042,38,1.229,39,1.075,42,0.943,45,1.205,46,0.638,47,1.635,48,1.738,49,2.297,58,2.401,59,2.538,60,2.117,61,2.068,62,0.067,63,0.665,66,1.624,71,1.734,73,1.785,82,0.005,83,0.005,100,1.955,101,1.097,106,3.463,107,3.556,130,6.461,146,3.091,148,3.174,150,2.222,151,0.895,152,2.279,153,2.279,154,2.338,155,2.279,156,1.511,159,2.338,160,2.338,164,4.118,165,2.78,166,2.78,176,3.742,178,3.654,179,3.556,180,3.463,183,1.774,184,3.212,185,3.759,186,3.357,188,3.742,189,3.556,190,3.759,383,1.453,1821,2.78,1854,4.596,1863,4.596,1866,4.596,1867,4.596,1870,4.596,2007,4.651,2008,5.064,2010,4.972,2011,5.923,2012,5.544,2013,4.651,2059,3.933,2060,4.9,2062,6.621,2102,8.708,2103,7.661,2104,7.661,2105,7.661,2106,5.172,2107,5.172,2108,5.172,2109,5.172,2110,5.172,2111,6.838,2112,5.172,2113,5.172,2114,6.838,2115,5.172,2116,5.172,2117,5.172,2118,5.172,2119,5.172,2120,5.172,2121,5.172,2122,5.172]],["title/interfaces/Province.html",[84,0.039,385,1.002]],["body/interfaces/Province.html",[3,0.091,4,0.091,5,0.091,10,0.147,11,0.328,20,0.495,24,0.132,26,0.007,29,0.949,62,0.107,82,0.006,83,0.006,84,0.069,86,1.165,100,2.04,101,1.144,385,1.788,386,1.93,588,6.214,589,6.214,590,5.012,591,5.012,592,6.214,593,6.509,594,6.509,595,6.509,596,7.404]],["title/components/ProvinceAndCityFormComponent.html",[286,0.226,384,1.04]],["body/components/ProvinceAndCityFormComponent.html",[3,0.088,4,0.038,5,0.038,10,0.061,11,0.179,12,1.766,14,0.823,16,1.96,20,0.367,22,1.41,24,0.123,25,1.602,26,0.007,28,1.075,29,0.721,32,1.42,33,1.314,38,1.452,39,1.293,42,0.851,45,0.674,46,0.357,47,1.744,48,0.972,49,0.972,52,1.609,57,1.106,62,0.038,63,0.372,66,1.507,68,1.749,69,1.511,71,1.535,72,2.311,73,1.793,79,2.359,82,0.004,83,0.003,84,0.024,93,1.274,97,3.669,100,1.877,101,0.97,104,1.305,151,0.501,156,0.846,173,1.354,183,0.993,191,1.157,286,0.27,287,0.674,288,0.956,289,0.687,290,0.687,291,1.029,293,0.687,294,1.911,295,1.911,296,0.887,300,0.674,301,0.887,303,0.904,310,0.687,311,1.068,312,1.068,313,0.687,314,1.397,315,0.687,316,0.674,317,2.161,318,0.674,319,1.458,320,0.687,321,0.674,322,0.687,323,0.687,324,1.918,325,0.674,326,0.65,327,0.674,328,0.662,329,0.674,330,0.687,331,0.674,332,0.674,333,1.068,334,0.662,335,1.129,336,0.674,337,1.25,338,0.593,339,0.662,340,1.31,341,1.379,342,1.572,343,0.674,344,0.687,345,0.687,346,0.674,347,0.687,348,0.674,349,1.068,350,0.674,351,1.068,352,0.662,353,1.205,354,1.068,355,0.674,356,0.687,357,0.687,358,0.687,359,0.674,360,0.687,361,0.674,362,0.687,363,0.674,364,0.687,365,0.674,366,0.662,367,0.674,368,0.662,369,0.662,370,0.65,371,0.687,372,0.674,373,1.048,374,0.674,375,0.662,376,0.65,377,0.687,378,0.674,379,0.65,380,0.687,381,0.674,382,0.638,383,0.615,384,1.397,385,1.781,386,2.045,387,0.662,388,0.65,389,1.216,390,1.31,391,0.662,392,0.65,393,0.662,394,0.638,395,1.01,396,0.626,397,0.687,398,0.638,399,0.674,400,0.687,401,0.674,402,0.626,403,0.674,404,0.687,405,0.674,406,0.687,407,1.068,408,0.674,409,0.674,410,0.687,411,0.687,412,0.674,413,1.048,414,0.687,415,0.674,416,0.687,417,0.674,418,0.674,419,0.687,420,0.674,421,0.687,422,0.674,423,1.068,424,0.687,425,0.662,426,0.674,427,0.674,428,0.687,429,1.322,430,1.109,431,0.687,432,0.65,433,0.662,434,0.662,435,0.662,436,0.662,437,0.674,438,0.687,439,0.662,440,0.65,441,0.674,442,0.662,443,0.662,444,0.687,445,0.687,449,1.644,450,2.061,461,1.928,472,1.522,482,1.533,488,1.265,525,1.854,526,0.934,536,0.993,537,0.993,543,2.207,590,4.458,591,3.223,593,5.111,594,2.074,595,4.829,651,3.43,668,2.741,702,1.644,877,1.106,881,1.758,882,1.758,883,2.561,888,2.206,889,2.431,893,2.919,919,1.969,948,2.561,957,1.729,961,1.841,962,1.969,964,1.969,993,1.185,994,1.157,995,1.185,996,1.343,1003,1.343,1004,1.343,1005,1.343,1006,1.343,1007,1.381,1008,1.213,1027,1.729,1028,1.841,1029,2.919,1030,1.185,1031,1.213,1036,1.462,1056,1.608,1126,1.729,1127,1.799,1128,1.799,1149,1.969,1235,2.074,1237,2.074,1374,1.969,1513,1.507,1640,2.074,1645,2.074,1646,2.074,1654,2.572,1742,1.556,1811,2.074,1817,1.969,2008,2.687,2017,3.175,2019,3.953,2020,3.752,2022,3.296,2023,3.953,2024,3.997,2029,4.458,2033,4.285,2040,3.296,2041,2.359,2049,2.074,2051,2.687,2054,1.666,2055,1.343,2057,1.799,2058,2.074,2064,1.878,2065,1.666,2066,1.878,2070,1.666,2072,3.717,2076,2.919,2079,2.074,2082,2.074,2085,2.074,2086,2.074,2087,2.074,2088,3.223,2089,2.074,2090,1.878,2091,1.878,2092,1.878,2093,1.507,2094,2.074,2095,1.878,2096,3.223,2099,2.074,2101,2.074,2123,8.015,2124,7.353,2125,4.902,2126,4.902,2127,4.902,2128,4.498,2129,4.902,2130,4.498,2131,4.498,2132,3.997,2133,2.894,2134,3.997,2135,2.894,2136,3.997,2137,2.894,2138,2.572,2139,2.894,2140,2.572,2141,3.997,2142,2.572,2143,3.42,2144,2.359,2145,3.997,2146,2.359,2147,2.572,2148,2.359,2149,2.359,2150,2.201,2151,2.572,2152,2.359,2153,3.997,2154,3.997,2155,2.572,2156,2.572,2157,2.572,2158,2.572,2159,2.572,2160,2.359,2161,2.572,2162,2.359,2163,2.572]],["title/injectables/ProvinceAndCityManagementService.html",[0,1.206,2150,3.52]],["body/injectables/ProvinceAndCityManagementService.html",[0,1.747,1,2.156,2,2.007,3,0.065,4,0.065,5,0.065,7,2.211,8,2.211,9,2.614,10,0.105,11,0.267,12,1.641,14,1.227,15,3.713,16,2.075,20,0.411,22,1.319,24,0.11,25,1.695,26,0.007,28,1.054,29,0.762,32,1.356,33,2.523,35,4.008,37,3.597,38,1.204,39,1.054,42,0.938,45,1.17,46,0.619,47,1.587,48,1.686,49,2.252,52,1.796,58,2.33,59,2.462,60,2.055,61,2.007,62,0.065,63,0.646,66,1.502,67,2.394,69,1.686,71,1.741,72,1.722,73,1.759,82,0.005,83,0.005,100,1.939,101,1.088,106,3.412,107,3.503,130,6.418,146,3.03,148,3.111,150,2.156,151,0.868,152,2.211,153,2.211,154,2.269,155,2.211,156,1.467,159,2.269,160,2.269,164,4.057,165,2.698,166,2.698,176,3.788,178,3.6,179,3.503,180,3.412,183,1.722,184,3.164,185,3.703,186,3.257,188,3.788,189,3.503,190,3.703,191,2.007,196,2.698,385,1.633,386,1.999,590,4.803,591,5.771,593,6.317,594,4.803,595,5.408,596,4.091,1546,3.816,1551,3.597,2148,4.091,2149,4.091,2150,5.097,2152,7.038,2160,4.091,2162,4.091,2164,8.634,2165,7.547,2166,7.547,2167,7.547,2168,5.019,2169,5.019,2170,5.019,2171,5.019,2172,5.019,2173,7.547,2174,6.703,2175,5.019,2176,5.019,2177,5.019,2178,5.019,2179,5.019,2180,5.019,2181,5.019,2182,5.019,2183,5.019,2184,5.019,2185,5.019,2186,5.019,2187,5.019,2188,5.019,2189,5.019,2190,5.019,2191,5.019]],["title/components/RealTimeTurnsFormComponent.html",[286,0.226,387,1.059]],["body/components/RealTimeTurnsFormComponent.html",[3,0.104,4,0.047,5,0.047,10,0.075,11,0.21,12,1.665,14,0.967,16,1.437,22,1.361,24,0.077,26,0.007,28,0.738,32,1.129,38,1.439,39,1.292,42,0.868,45,0.834,46,0.442,57,1.368,62,0.047,63,0.461,66,0.986,70,1.501,71,0.68,72,1.228,73,0.834,82,0.004,83,0.004,93,1.42,104,1.432,151,0.619,156,1.046,173,1.487,286,0.307,287,0.834,288,1.123,289,0.85,290,0.85,291,1.209,293,0.85,294,1.931,295,1.931,296,1.042,300,0.834,301,1.042,303,1.062,310,0.85,311,1.254,312,1.254,313,0.85,314,1.557,315,0.85,316,0.834,317,2.219,318,0.834,319,1.601,320,0.85,321,0.834,322,0.85,323,0.85,324,2.026,325,0.834,326,0.804,327,0.834,328,0.819,329,0.834,330,0.85,331,0.834,332,0.834,333,1.254,334,0.819,335,1.286,336,0.834,337,1.556,338,0.733,339,0.819,340,1.992,341,1.963,342,2.12,343,0.834,344,0.85,345,0.85,346,0.834,347,0.85,348,0.834,349,1.254,350,0.834,351,1.254,352,0.819,353,1.343,354,1.254,355,0.834,356,0.85,357,0.85,358,0.85,359,0.834,360,0.85,361,0.834,362,0.85,363,0.834,364,0.85,365,0.834,366,0.819,367,0.834,368,0.819,369,0.819,370,0.804,371,0.85,372,0.834,373,1.231,374,0.834,375,0.819,376,0.804,377,0.85,378,0.834,379,0.804,380,0.85,381,0.834,382,0.789,383,0.761,384,0.804,385,0.775,386,0.761,387,1.587,388,0.804,389,1.385,390,1.491,391,0.819,392,0.804,393,0.819,394,0.789,395,1.187,396,0.775,397,0.85,398,0.789,399,0.834,400,0.85,401,0.834,402,0.775,403,0.834,404,0.85,405,0.834,406,0.85,407,1.254,408,0.834,409,0.834,410,0.85,411,0.85,412,0.834,413,1.231,414,0.85,415,0.834,416,0.85,417,0.834,418,0.834,419,0.85,420,0.834,421,0.85,422,0.834,423,1.254,424,0.85,425,0.819,426,0.834,427,0.834,428,0.85,429,0.761,430,0.719,431,0.85,432,0.804,433,0.819,434,0.819,435,0.819,436,0.819,437,1.804,438,1.491,439,0.819,440,0.804,441,0.834,442,0.819,443,0.819,444,0.85,445,0.85,452,1.178,461,2.149,470,2.435,472,1.458,482,1.709,488,2.177,494,1.132,525,2.11,526,1.155,536,1.228,537,1.228,654,1.986,668,3.056,683,2.435,688,2.225,702,1.932,708,2.139,710,1.132,862,1.809,877,1.368,881,2.065,882,2.065,883,2.916,888,2.773,889,2.71,948,2.916,955,2.565,961,2.163,993,1.465,994,1.432,995,1.465,996,1.662,1003,1.662,1004,1.662,1005,1.662,1006,1.662,1007,1.708,1008,2.216,1020,1.577,1028,1.465,1030,1.465,1031,1.501,1086,3.377,1218,6.278,1219,4.298,1224,4.717,1225,5.12,1228,3.905,1232,3.728,1233,4.143,1238,2.918,1239,2.918,1240,4.018,1241,2.918,1242,4.308,1243,2.918,1250,2.435,1251,2.435,1252,1.864,1253,2.565,1254,2.565,1255,1.864,1256,1.924,1257,1.924,1259,2.565,1260,2.722,1261,2.323,1267,2.722,1268,1.924,1269,2.722,1271,2.918,1376,3.181,1640,2.565,1645,2.565,1646,2.565,2049,2.565,2192,8.332,2193,6.935,2194,3.58,2195,4.696,2196,3.58,2197,3.181,2198,3.181]],["title/interfaces/RelationOfAnnouncementGroupAndSubGroup.html",[84,0.039,171,3.149]],["body/interfaces/RelationOfAnnouncementGroupAndSubGroup.html",[3,0.092,4,0.092,5,0.092,10,0.15,11,0.332,20,0.498,24,0.129,26,0.007,29,0.843,62,0.108,82,0.006,83,0.006,84,0.069,86,1.185,98,6.213,99,6.213,101,1.151,104,1.378,171,5.676,173,1.43,207,4.096,208,4.096,219,6.213,227,5.802,228,6.213,229,6.324]],["title/components/RelationOfAnnouncementGroupAndSubGroupComponent.html",[286,0.226,388,1.04]],["body/components/RelationOfAnnouncementGroupAndSubGroupComponent.html",[3,0.086,4,0.031,5,0.031,10,0.103,11,0.155,12,1.692,14,0.712,16,1.903,20,0.336,22,1.4,24,0.114,25,1.556,26,0.007,28,1.04,29,0.7,32,1.296,38,1.432,39,1.273,42,0.849,45,0.561,46,0.297,62,0.031,63,0.31,66,1.511,68,1.375,69,1.643,70,2.05,71,1.17,73,1.736,77,1.216,82,0.003,83,0.003,84,0.032,93,1.149,94,3.817,98,3.326,99,2.644,101,0.776,102,1.726,104,1.863,105,3.718,125,4.413,127,4.683,151,0.417,156,0.704,157,2.956,158,1.638,167,3.642,168,2.956,171,3.817,173,1.929,207,2.238,208,2.238,272,1.088,286,0.239,287,0.561,288,0.826,289,0.572,290,0.572,291,0.889,293,0.572,294,1.889,295,1.889,296,0.767,300,0.561,301,0.767,303,0.781,310,0.572,311,0.923,312,0.923,313,0.572,314,1.26,315,0.572,316,0.561,317,2.103,318,0.561,319,2.074,320,0.572,321,0.561,322,0.572,323,0.572,324,1.816,325,0.561,326,0.541,327,0.561,328,0.551,329,0.561,330,0.572,331,0.561,332,0.561,333,0.923,334,0.551,335,1.001,336,0.561,337,1.128,338,0.493,339,0.551,340,1.161,341,1.261,342,1.452,343,0.561,344,0.572,345,0.572,346,0.561,347,0.572,348,0.561,349,0.923,350,0.561,351,0.923,352,0.551,353,1.087,354,0.923,355,0.561,356,0.572,357,0.572,358,0.572,359,0.561,360,0.572,361,0.561,362,0.572,363,0.561,364,0.572,365,0.561,366,0.551,367,0.561,368,0.551,369,0.551,370,0.541,371,0.572,372,0.561,373,0.906,374,0.561,375,0.551,376,0.541,377,0.572,378,0.561,379,0.873,380,0.572,381,0.561,382,0.531,383,0.512,384,0.541,385,0.521,386,0.512,387,0.551,388,1.26,389,1.786,390,1.161,391,0.551,392,0.541,393,0.551,394,1.237,395,1.098,396,1.058,397,0.572,398,0.531,399,0.561,400,0.572,401,0.561,402,0.521,403,0.561,404,0.572,405,0.561,406,0.572,407,0.923,408,0.561,409,0.561,410,0.572,411,0.572,412,0.561,413,0.906,414,0.572,415,0.561,416,0.572,417,0.561,418,0.561,419,0.572,420,0.561,421,0.572,422,0.561,423,0.923,424,0.572,425,0.551,426,0.561,427,0.561,428,0.572,429,0.512,430,0.781,431,0.572,432,0.541,433,0.551,434,0.551,435,0.551,436,0.551,437,0.561,438,0.572,439,0.551,440,0.541,441,0.561,442,0.551,443,0.551,444,0.572,445,0.572,452,0.793,456,1.868,467,1.805,469,1.757,470,2.623,472,1.072,482,1.205,488,0.677,494,0.761,525,1.643,526,0.777,536,0.826,537,0.826,654,1.546,702,1.421,710,0.761,769,3.679,772,2.417,800,3.111,810,2.399,822,2.09,843,1.563,855,1.638,862,1.216,878,2.417,886,2.21,888,1.955,889,2.193,933,1.497,946,2.523,956,1.805,961,1.591,983,1.088,993,0.986,994,0.963,995,0.986,1008,1.01,1010,1.805,1020,2.154,1028,1.591,1030,2.001,1031,2.05,1042,1.386,1057,1.497,1181,1.831,1219,4.389,1232,3.017,1233,3.353,1252,1.254,1255,1.254,1256,1.294,1257,1.294,1268,3.311,1513,2.025,1516,2.238,1584,3.04,1702,1.497,2055,1.118,2199,7.293,2200,6.085,2201,7.293,2202,2.14,2203,4.48,2204,3.326,2205,3.455,2206,3.455,2207,4.345,2208,3.986,2209,2.814,2210,3.718,2211,3.986,2212,3.986,2213,3.888,2214,3.455,2215,3.888,2216,3.169,2217,3.455,2218,3.888,2219,3.888,2220,4.575,2221,5.021,2222,5.021,2223,3.169,2224,6.375,2225,2.408,2226,2.956,2227,3.455,2228,2.408,2229,3.455,2230,2.408,2231,2.956,2232,2.408,2233,2.14,2234,2.786,2235,2.408,2236,3.169,2237,2.408,2238,3.169,2239,2.408,2240,2.408,2241,2.408,2242,2.408,2243,3.455,2244,2.408,2245,2.408,2246,2.644,2247,2.408,2248,2.408,2249,2.408,2250,2.408,2251,2.408,2252,2.408,2253,2.408,2254,2.408,2255,2.408,2256,2.408,2257,2.408,2258,2.408,2259,2.408,2260,2.408,2261,2.408,2262,2.408,2263,1.386,2264,1.563,2265,1.638,2266,1.963,2267,2.14,2268,1.638,2269,1.831,2270,2.786,2271,1.638,2272,1.638,2273,1.726,2274,1.963,2275,1.963,2276,3.997,2277,2.14,2278,2.14,2279,2.14,2280,2.14,2281,2.14,2282,1.831,2283,1.831,2284,2.644,2285,2.644,2286,1.963,2287,2.14,2288,1.963,2289,1.726,2290,2.644,2291,2.14,2292,1.831,2293,1.963,2294,1.726,2295,1.726,2296,1.726,2297,2.14,2298,2.14,2299,2.14,2300,2.14,2301,1.963,2302,1.963,2303,2.786,2304,1.963,2305,1.638,2306,3.455,2307,3.169,2308,1.726,2309,1.497,2310,1.726,2311,1.638,2312,2.523,2313,1.638,2314,1.638,2315,1.638,2316,1.638,2317,1.638,2318,1.963,2319,2.14,2320,1.726,2321,2.14,2322,1.563,2323,2.14,2324,2.14,2325,1.963,2326,1.963,2327,1.726,2328,2.14,2329,4.267,2330,2.956,2331,3.888,2332,3.888]],["title/interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html",[84,0.039,2333,3.317]],["body/interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.332,20,0.498,24,0.129,26,0.007,29,0.842,62,0.108,82,0.006,83,0.006,84,0.069,86,1.184,101,1.15,207,4.091,208,4.091,219,6.21,228,6.21,1187,3.131,1846,4.834,1847,4.612,1848,3.821,1851,5.255,1852,5.454,2333,5.976,2334,6.315]],["title/interfaces/RelationOfSequentialTurnToLoaderType.html",[84,0.039,1850,3.149]],["body/interfaces/RelationOfSequentialTurnToLoaderType.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.332,20,0.498,24,0.129,26,0.007,29,0.842,62,0.108,82,0.006,83,0.006,84,0.069,86,1.184,101,1.15,1187,3.131,1790,3.487,1792,4.246,1845,7.443,1846,4.834,1847,4.612,1848,3.821,1849,6.315,1850,5.672,1851,5.255,1852,5.454,1853,7.443]],["title/components/RelationOfSequentialTurnToLoaderTypeFormComponent.html",[286,0.226,392,1.04]],["body/components/RelationOfSequentialTurnToLoaderTypeFormComponent.html",[3,0.082,4,0.029,5,0.029,10,0.097,11,0.145,12,1.695,14,0.667,16,1.868,20,0.322,22,1.389,24,0.14,25,1.505,26,0.007,28,1.011,29,0.677,32,1.257,38,1.425,39,1.247,42,0.854,45,0.518,46,0.274,62,0.029,63,0.286,66,1.454,68,1.662,69,1.799,70,1.942,71,1.123,73,1.688,77,1.124,82,0.003,83,0.003,84,0.03,93,1.096,101,0.745,104,1.402,151,0.385,156,0.65,173,1.347,272,1.006,286,0.289,287,0.518,288,0.775,289,0.528,290,0.528,291,0.834,293,0.528,294,1.879,295,1.879,296,0.719,300,0.518,301,0.719,303,0.733,310,0.528,311,0.865,312,0.865,313,0.528,314,1.203,315,0.528,316,0.518,317,2.076,318,0.518,319,1.451,320,0.528,321,0.518,322,0.528,323,0.528,324,1.769,325,0.518,326,0.5,327,0.518,328,0.509,329,0.518,330,0.528,331,0.518,332,0.518,333,0.865,334,0.509,335,0.948,336,0.518,337,1.076,338,0.455,339,0.509,340,1.1,341,1.21,342,2.003,343,0.518,344,0.528,345,0.528,346,0.518,347,0.528,348,0.518,349,0.865,350,0.518,351,0.865,352,0.509,353,1.037,354,0.865,355,0.518,356,0.528,357,0.528,358,0.528,359,0.518,360,0.528,361,0.518,362,0.528,363,0.518,364,0.528,365,0.518,366,0.509,367,0.85,368,0.509,369,0.509,370,2.135,371,0.528,372,0.518,373,0.85,374,0.518,375,0.509,376,0.5,377,0.528,378,0.518,379,0.819,380,0.528,381,0.518,382,0.49,383,0.473,384,0.5,385,0.482,386,0.473,387,0.509,388,0.5,389,1.718,390,1.1,391,0.509,392,1.203,393,0.509,394,1.181,395,1.04,396,1.002,397,0.528,398,0.49,399,0.518,400,0.528,401,0.518,402,2.058,403,0.518,404,0.528,405,0.518,406,0.528,407,0.865,408,0.518,409,0.518,410,0.528,411,0.528,412,0.518,413,0.85,414,0.528,415,0.518,416,0.528,417,0.518,418,0.518,419,0.528,420,0.518,421,0.528,422,0.518,423,0.865,424,0.528,425,0.509,426,0.518,427,0.518,428,0.528,429,0.473,430,0.931,431,0.528,432,0.5,433,0.509,434,0.509,435,0.509,436,0.509,437,0.518,438,0.528,439,0.509,440,0.5,441,0.518,442,0.509,443,0.509,444,0.528,445,0.528,456,1.77,465,1.092,467,1.692,469,1.648,470,2.303,472,1.006,482,1.141,488,0.626,494,0.703,525,1.556,526,0.718,536,0.763,537,0.763,653,1.648,654,1.464,702,1.333,710,0.703,769,3.531,772,2.266,800,3.207,810,2.272,822,1.96,862,1.124,877,0.85,878,2.266,881,1.425,882,1.425,886,2.094,888,1.852,889,2.093,908,1.594,946,2.366,956,1.692,961,1.492,983,1.006,993,0.911,994,0.89,995,0.911,1008,0.933,1010,1.692,1020,2.041,1028,1.492,1030,1.896,1031,1.942,1042,1.281,1057,1.383,1126,1.329,1127,1.383,1128,1.383,1187,4.201,1219,4.357,1232,2.879,1233,3.2,1252,1.159,1255,1.159,1256,1.196,1257,1.196,1268,3.177,1323,3.177,1513,1.899,1516,2.098,1584,2.879,1658,1.977,1702,1.383,1786,1.383,1790,3.433,1792,4.18,1798,3.776,1810,1.692,1815,2.613,1820,2.48,1821,1.196,1822,1.444,1823,1.513,1824,1.383,1825,1.814,1847,1.444,1848,3.413,1850,3.643,1851,2.098,1852,2.178,2031,1.814,2035,1.977,2045,1.814,2047,1.977,2048,1.692,2052,1.977,2053,1.977,2055,1.033,2200,6.424,2203,4.318,2204,3.15,2209,2.666,2210,3.522,2216,2.972,2217,3.24,2226,4.072,2234,2.613,2246,2.48,2263,1.281,2264,1.444,2265,1.513,2268,1.513,2270,1.594,2271,1.513,2272,1.513,2273,1.594,2276,3.836,2284,2.48,2285,3.15,2290,1.513,2292,2.772,2294,1.594,2295,1.594,2303,1.594,2305,1.513,2308,1.594,2309,1.383,2310,1.594,2311,1.513,2312,2.366,2313,1.513,2314,1.513,2315,1.513,2316,1.513,2317,1.513,2320,1.594,2322,1.444,2327,1.594,2329,4.072,2330,2.772,2335,6.752,2336,4.116,2337,4.116,2338,3.776,2339,3.522,2340,4.116,2341,4.116,2342,3.646,2343,3.646,2344,3.24,2345,4.759,2346,5.704,2347,5.641,2348,2.225,2349,6.224,2350,2.225,2351,2.225,2352,3.24,2353,1.977,2354,3.24,2355,2.225,2356,3.24,2357,1.977,2358,2.772,2359,2.225,2360,1.977,2361,1.814,2362,1.977,2363,2.225,2364,1.814,2365,2.225,2366,2.225,2367,2.772,2368,2.225,2369,2.225,2370,2.225,2371,1.977,2372,2.225,2373,2.225,2374,2.225,2375,1.513,2376,3.522,2377,1.594,2378,1.513,2379,1.513,2380,1.814,2381,1.977,2382,1.814,2383,4.759,2384,1.977,2385,1.977,2386,1.977,2387,1.977,2388,1.977,2389,1.977,2390,1.977,2391,1.977,2392,1.814,2393,1.977,2394,1.977,2395,1.594,2396,1.814,2397,1.977,2398,1.814,2399,1.814,2400,1.977,2401,1.977,2402,1.814,2403,1.977,2404,1.977,2405,1.977,2406,1.814,2407,1.977,2408,1.977,2409,1.977,2410,1.977,2411,1.977,2412,1.814,2413,1.977,2414,3.646,2415,3.646]],["title/components/ResuscitateTurnsFormComponent.html",[286,0.226,393,1.059]],["body/components/ResuscitateTurnsFormComponent.html",[3,0.101,4,0.043,5,0.043,10,0.069,11,0.197,12,1.72,14,0.909,16,1.367,22,1.404,24,0.072,26,0.007,28,0.693,32,1.195,38,1.4,39,1.26,42,0.878,45,0.767,46,0.406,57,1.258,62,0.043,63,0.424,66,1.4,70,1.38,71,0.626,72,1.129,73,0.767,82,0.004,83,0.004,93,1.362,104,1.382,151,0.57,156,0.962,173,1.435,286,0.292,287,0.767,288,1.055,289,0.782,290,0.782,291,1.136,293,0.782,294,1.924,295,1.924,296,0.979,300,0.767,301,0.979,303,0.998,310,0.782,311,1.178,312,1.178,313,0.782,314,1.494,315,0.782,316,0.767,317,2.197,318,0.767,319,1.545,320,0.782,321,0.767,322,0.782,323,0.782,324,1.985,325,0.767,326,0.739,327,0.767,328,0.753,329,0.767,330,0.782,331,1.551,332,1.749,333,1.782,334,0.753,335,1.223,336,0.767,337,1.508,338,0.674,339,0.753,340,1.695,341,1.932,342,2.13,343,0.767,344,0.782,345,0.782,346,0.767,347,0.782,348,0.767,349,1.178,350,0.767,351,1.178,352,0.753,353,1.288,354,1.178,355,0.767,356,0.782,357,0.782,358,0.782,359,0.767,360,0.782,361,0.767,362,0.782,363,0.767,364,0.782,365,0.767,366,0.753,367,0.767,368,0.753,369,0.753,370,0.739,371,0.782,372,0.767,373,1.157,374,0.767,375,0.753,376,0.739,377,0.782,378,0.767,379,0.739,380,0.782,381,0.767,382,0.726,383,0.699,384,0.739,385,0.712,386,0.699,387,0.753,388,0.739,389,1.317,390,1.419,391,0.753,392,0.739,393,1.522,394,0.726,395,1.115,396,0.712,397,0.782,398,0.726,399,0.767,400,0.782,401,0.767,402,0.712,403,0.767,404,0.782,405,0.767,406,0.782,407,1.178,408,0.767,409,0.767,410,0.782,411,0.782,412,0.767,413,1.157,414,0.782,415,0.767,416,0.782,417,0.767,418,0.767,419,0.782,420,0.767,421,0.782,422,0.767,423,1.178,424,0.782,425,0.753,426,1.551,427,0.767,428,0.782,429,0.699,430,0.662,431,0.782,432,0.739,433,0.753,434,0.753,435,0.753,436,0.753,437,1.749,438,1.419,439,0.753,440,0.739,441,0.767,442,0.753,443,0.753,444,0.782,445,0.782,452,1.084,461,2.062,469,2.244,470,2.701,472,1.369,482,1.759,488,1.396,494,1.041,525,2.008,526,1.062,536,1.129,537,1.129,654,1.889,668,2.931,683,2.239,688,2.047,702,1.815,708,1.967,710,1.041,805,2.925,862,1.663,877,1.258,881,1.94,882,1.94,883,2.774,886,2.701,888,2.661,889,2.6,923,2.239,948,2.774,953,2.137,956,2.304,961,2.032,962,2.239,983,1.488,993,1.348,994,1.316,995,1.348,996,1.528,1003,1.528,1004,1.528,1005,1.528,1006,1.528,1007,1.57,1008,2.081,1010,2.304,1020,1.45,1028,1.348,1030,1.348,1031,1.38,1086,4.035,1218,6.446,1219,4.413,1224,4.526,1225,4.871,1226,5.912,1228,4.666,1232,3.577,1233,3.975,1235,2.359,1239,2.684,1240,3.775,1242,4.047,1244,2.503,1246,2.925,1249,2.503,1250,2.239,1251,2.239,1252,1.714,1253,2.359,1254,2.359,1255,1.714,1256,1.77,1257,1.77,1259,2.359,1260,2.503,1261,2.137,1267,2.503,1268,1.77,1269,2.503,1270,2.925,1271,2.684,1640,2.359,1641,2.684,1645,2.359,1646,2.359,1806,2.684,1929,2.925,2144,2.684,2146,2.684,2197,2.925,2198,2.925,2416,8.45,2417,6.654,2418,5.976,2419,6.654,2420,2.503,2421,3.292,2422,5.976,2423,3.292,2424,3.292,2425,3.292,2426,4.964,2427,3.292,2428,2.925,2429,3.292,2430,3.292,2431,3.292,2432,3.292,2433,3.292,2434,3.292,2435,3.292,2436,3.292,2437,3.292]],["title/interfaces/RowRelationOfAnnouncement.html",[84,0.039,2224,3.774]],["body/interfaces/RowRelationOfAnnouncement.html",[3,0.077,4,0.054,5,0.054,10,0.088,11,0.235,12,1.63,16,1.921,20,0.467,24,0.109,26,0.007,39,0.658,42,0.948,45,0.975,46,0.516,62,0.054,63,0.538,66,1.697,68,1.929,69,1.988,70,2.877,71,1.495,73,2.032,77,2.115,82,0.004,83,0.004,84,0.049,86,0.697,94,4.024,98,5.352,99,5.352,101,1.058,102,2.999,104,1.689,105,4.499,125,4.24,127,4.499,156,1.223,157,4.499,158,2.847,167,3.839,168,4.499,171,4.024,173,1.641,207,4.529,208,4.529,272,1.892,286,0.289,294,0.826,295,0.826,296,0.826,301,0.826,303,0.841,319,1.703,353,1.146,379,0.94,388,0.94,389,1.851,394,1.304,395,0.94,396,1.28,430,0.841,452,1.378,456,2.26,467,2.746,470,2.91,472,1.155,488,1.177,494,1.323,525,1.406,526,1.35,536,1.436,537,1.436,654,1.87,702,1.53,710,1.323,769,4.701,772,3.678,800,3.467,810,2.054,822,3.18,843,2.716,855,2.847,862,2.115,878,2.602,886,1.892,888,1.674,889,2.312,933,2.602,946,2.716,956,1.943,961,1.713,983,1.892,993,1.713,994,1.674,995,1.713,1008,1.755,1010,1.943,1020,3.023,1028,2.422,1030,2.809,1031,2.877,1042,2.409,1057,2.602,1181,3.183,1219,2.054,1232,3.18,1233,3.534,1252,2.18,1255,2.18,1256,2.25,1257,2.25,1268,4.23,1513,3.081,1584,3.678,1702,2.602,2055,1.943,2199,3.412,2200,2.847,2201,3.412,2202,3.719,2203,4.667,2204,4.024,2205,3.719,2206,3.719,2207,3.719,2208,3.412,2209,2.409,2210,3.183,2211,3.412,2212,3.412,2220,3.412,2221,4.823,2222,4.823,2223,3.412,2224,6.658,2227,3.719,2229,3.719,2231,3.183,2234,2.999,2236,3.412,2238,3.412,2243,3.719,2246,2.847,2263,2.409,2264,2.716,2265,2.847,2266,3.412,2267,3.719,2268,2.847,2269,3.183,2270,4.24,2271,2.847,2272,2.847,2273,2.999,2274,3.412,2275,3.412,2276,5.106,2277,3.719,2278,3.719,2279,3.719,2280,3.719,2281,3.719,2282,3.183,2283,3.183,2284,4.024,2285,4.024,2286,3.412,2287,3.719,2288,3.412,2289,2.999,2290,4.024,2291,3.719,2292,3.183,2293,3.412,2294,2.999,2295,2.999,2296,2.999,2297,3.719,2298,3.719,2299,3.719,2300,3.719,2301,3.412,2302,3.412,2303,4.24,2304,3.412,2305,2.847,2306,5.257,2307,4.823,2308,2.999,2309,2.602,2310,2.999,2311,2.847,2312,3.839,2313,2.847,2314,2.847,2315,2.847,2316,2.847,2317,2.847,2318,3.412,2319,3.719,2320,2.999,2321,3.719,2322,2.716,2323,3.719,2324,3.719,2325,3.412,2326,3.412,2327,2.999,2328,3.719]],["title/interfaces/RowRelationOfSequential.html",[84,0.039,2438,4.114]],["body/interfaces/RowRelationOfSequential.html",[3,0.073,4,0.051,5,0.051,10,0.082,11,0.223,12,1.629,16,1.925,20,0.467,24,0.105,26,0.007,39,0.612,42,0.949,45,1.309,46,0.48,62,0.051,63,0.501,66,1.729,68,1.853,69,2.215,70,2.356,71,1.515,73,2.028,77,1.967,82,0.004,83,0.004,84,0.047,86,0.648,94,3.822,101,1.035,102,4.026,104,1.397,105,4.272,125,4.026,127,4.272,156,1.642,157,4.272,158,2.648,167,3.646,168,2.961,173,1.538,177,4.724,207,4.589,208,4.589,272,1.76,286,0.274,294,0.768,295,0.768,296,0.768,301,0.768,303,0.782,319,1.656,342,0.858,353,1.088,379,0.874,389,1.812,391,0.891,394,1.239,395,0.874,396,1.216,402,1.562,430,0.782,452,1.282,456,2.147,467,2.608,470,2.981,472,1.074,488,1.095,494,1.231,525,1.308,526,1.256,536,1.336,537,1.336,654,1.776,702,1.423,710,1.231,769,4.763,772,3.493,800,4.028,810,1.91,822,3.02,843,2.527,855,2.648,862,1.967,877,1.488,878,2.42,881,1.522,882,1.522,886,1.76,888,1.557,889,2.196,933,2.42,946,2.527,956,1.807,961,1.594,983,1.76,993,1.594,994,1.557,995,1.594,1008,1.632,1010,1.807,1020,2.475,1028,2.3,1030,2.3,1031,2.356,1042,2.241,1057,2.42,1181,2.961,1187,3.707,1207,4.026,1219,1.91,1228,3.493,1232,3.543,1233,3.938,1252,2.028,1255,2.028,1256,2.093,1257,2.093,1265,3.46,1268,4.286,1513,3.433,1584,3.493,1702,2.42,1847,2.527,1848,3.543,1851,4.405,1852,4.572,2055,1.807,2195,3.46,2200,2.648,2203,4.484,2204,3.822,2208,3.174,2209,2.241,2211,3.174,2212,3.174,2214,3.46,2220,3.174,2221,4.58,2222,5.374,2223,3.174,2231,2.961,2234,2.79,2236,3.174,2238,3.174,2246,2.648,2263,2.241,2264,2.527,2265,2.648,2266,3.174,2268,2.648,2269,2.961,2270,4.026,2271,2.648,2272,2.648,2273,2.79,2274,3.174,2275,3.174,2276,5.174,2282,2.961,2283,2.961,2284,3.822,2285,3.822,2286,3.174,2288,3.174,2289,2.79,2290,3.822,2293,3.174,2294,2.79,2295,2.79,2296,2.79,2301,4.58,2302,4.58,2303,4.026,2304,3.174,2305,2.648,2307,3.174,2308,2.79,2309,2.42,2310,2.79,2311,2.648,2312,3.646,2313,2.648,2314,2.648,2315,2.648,2316,2.648,2317,2.648,2318,3.174,2320,4.026,2322,2.527,2325,3.174,2326,3.174,2333,4.026,2335,2.961,2338,3.174,2339,2.961,2346,3.174,2358,2.961,2367,2.961,2375,2.648,2376,5.012,2377,2.79,2378,2.648,2379,2.648,2392,3.174,2396,3.174,2398,3.174,2399,3.174,2402,3.174,2406,3.174,2438,7.085,2439,3.46,2440,3.46,2441,3.893,2442,3.893,2443,5.618,2444,3.893,2445,3.893,2446,5.618,2447,3.893,2448,3.893,2449,3.893,2450,3.893,2451,3.893,2452,3.893,2453,3.893,2454,3.893,2455,3.893,2456,3.893,2457,3.893,2458,3.893,2459,3.893,2460,3.893,2461,3.893,2462,3.893,2463,3.893,2464,3.893,2465,3.893,2466,3.893,2467,3.893]],["title/interfaces/RowRelationOfSequentialToLoader.html",[84,0.039,2349,3.774]],["body/interfaces/RowRelationOfSequentialToLoader.html",[3,0.073,4,0.051,5,0.051,10,0.082,11,0.225,12,1.632,16,1.885,20,0.46,24,0.125,26,0.007,42,0.95,45,0.915,46,0.484,62,0.051,63,0.505,66,1.664,68,2.037,69,2.225,70,2.777,71,1.459,73,2.002,77,1.983,82,0.004,83,0.004,84,0.047,86,0.654,101,1.038,104,1.094,156,1.147,173,0.789,272,1.775,286,0.354,294,0.774,295,0.774,296,0.774,301,0.774,303,0.789,319,0.85,342,0.865,353,1.094,367,0.915,370,1.724,379,0.882,389,1.763,392,0.882,394,1.246,395,0.882,396,1.223,402,1.661,430,1.136,456,2.159,467,2.623,470,2.632,472,1.083,488,1.104,494,1.241,525,1.319,526,1.266,536,1.347,537,1.347,653,1.775,654,1.787,702,1.435,710,1.241,769,4.586,772,3.513,800,3.66,810,1.926,822,3.038,862,1.983,877,1.5,878,2.44,881,1.534,882,1.534,886,1.775,888,1.57,889,2.209,946,2.548,956,1.822,961,1.607,983,1.775,993,1.607,994,1.57,995,1.607,1008,1.646,1010,1.822,1020,2.918,1028,2.314,1030,2.711,1031,2.777,1042,2.259,1057,2.44,1126,2.345,1127,2.44,1128,2.44,1187,3.784,1219,1.926,1232,3.038,1233,3.376,1252,2.044,1255,2.044,1256,2.11,1257,2.11,1268,4.127,1323,3.038,1513,2.943,1584,3.513,1702,2.44,1786,2.44,1790,4.137,1792,5.038,1798,3.2,1815,2.813,1820,3.844,1821,2.11,1822,2.548,1823,2.67,1824,2.44,1825,3.2,1847,2.548,1848,3.56,1850,3.844,1851,4.419,1852,4.586,2055,1.822,2200,3.844,2203,4.504,2204,3.844,2209,2.259,2210,2.985,2226,4.297,2234,2.813,2246,2.67,2263,2.259,2264,2.548,2265,2.67,2268,2.67,2270,2.813,2271,2.67,2272,2.67,2273,2.813,2276,4.982,2284,3.844,2285,4.504,2290,2.67,2292,4.297,2294,2.813,2295,2.813,2303,2.813,2305,2.67,2308,2.813,2309,2.44,2310,2.813,2311,2.67,2312,3.668,2313,2.67,2314,2.67,2315,2.67,2316,2.67,2317,2.67,2320,2.813,2322,2.548,2327,2.813,2335,2.985,2336,3.488,2337,3.488,2338,3.2,2339,2.985,2340,3.488,2341,3.488,2345,3.488,2346,5.906,2347,5.884,2349,6.518,2352,3.488,2354,3.488,2356,3.488,2358,2.985,2367,2.985,2375,2.67,2376,5.035,2377,2.813,2378,2.67,2379,2.67,2380,3.2,2381,3.488,2382,3.2,2383,6.437,2384,3.488,2385,3.488,2386,3.488,2387,3.488,2388,3.488,2389,3.488,2390,3.488,2391,3.488,2392,3.2,2393,3.488,2394,3.488,2395,2.813,2396,3.2,2397,3.488,2398,3.2,2399,3.2,2400,3.488,2401,3.488,2402,3.2,2403,3.488,2404,3.488,2405,3.488,2406,3.2,2407,3.488,2408,3.488,2409,3.488,2410,3.488,2411,3.488,2412,3.2,2413,3.488]],["title/components/SearchAutoCompleteComponent.html",[286,0.226,394,1.021]],["body/components/SearchAutoCompleteComponent.html",[3,0.075,4,0.028,5,0.028,10,0.045,11,0.14,12,1.397,14,0.646,16,1.425,20,0.427,22,1.421,24,0.13,25,1.399,26,0.007,28,0.961,29,0.696,32,1.282,33,1.316,38,1.54,39,1.411,42,0.644,46,0.264,53,5.14,62,0.028,63,0.579,66,1.162,68,1.751,70,0.896,71,1.252,73,0.498,77,1.08,82,0.005,83,0.003,93,1.07,100,1.174,101,0.269,104,1.12,151,1.001,173,1.163,183,1.545,249,3.541,272,3.227,282,5.077,283,2.108,286,0.283,287,0.498,288,0.75,289,0.508,290,0.508,291,0.807,293,0.508,294,1.874,295,1.874,296,0.696,298,2.21,300,0.498,301,0.696,303,0.709,306,0.782,310,0.508,311,0.838,312,0.838,313,0.508,314,1.174,315,0.508,316,0.498,317,2.061,318,0.498,319,1.252,320,0.508,321,0.498,322,0.508,323,0.508,324,1.746,325,0.498,326,0.48,327,0.498,328,0.489,329,0.498,330,0.508,331,0.498,332,0.498,333,0.838,334,0.489,335,0.922,336,0.498,337,1.051,338,0.438,339,0.489,340,1.069,341,1.184,342,1.373,343,0.498,344,0.508,345,0.508,346,0.498,347,0.508,348,0.498,349,0.838,350,0.498,351,0.838,352,0.489,353,0.683,354,0.838,355,0.498,356,0.838,357,0.508,358,0.508,359,0.498,360,0.508,361,0.498,362,0.508,363,0.498,364,0.508,365,0.498,366,0.489,367,0.498,368,0.489,369,0.489,370,0.48,371,0.508,372,0.498,373,0.822,374,0.498,375,0.489,376,0.48,377,0.508,378,0.498,379,1.299,380,0.508,381,0.498,382,0.471,383,0.454,384,0.48,385,0.463,386,0.454,387,0.489,388,0.48,389,0.993,390,1.069,391,0.489,392,0.48,393,0.489,394,1.152,395,1.961,396,2.077,397,0.508,398,0.471,399,0.498,400,0.508,401,0.498,402,0.463,403,0.498,404,0.508,405,0.498,406,0.508,407,0.838,408,0.498,409,0.498,410,0.508,411,0.508,412,0.498,413,0.822,414,0.508,415,0.498,416,0.508,417,0.498,418,0.498,419,0.508,420,0.498,421,0.508,422,0.498,423,1.478,424,0.508,425,0.489,426,0.498,427,0.498,428,0.508,429,0.454,430,0.43,431,0.508,432,0.48,433,0.489,434,0.489,435,0.489,436,1.03,437,0.498,438,0.508,439,0.489,440,0.48,441,0.498,442,0.489,443,0.489,444,0.508,445,0.508,449,1.29,450,1.683,451,2.593,452,3.086,456,1.721,460,2.108,461,1.62,463,3.393,464,2.426,465,3.502,466,4.686,467,3.313,470,2.168,472,2.258,475,3.135,478,1.961,479,2.905,481,3.456,482,1.964,485,4.735,488,1.47,494,0.676,496,1.454,502,2.29,503,1.387,504,2.29,505,1.387,506,2.29,507,1.387,514,2.923,516,2.923,531,1.329,532,1.329,602,1.961,630,3.556,631,2.4,653,1.595,752,2.971,785,2.683,808,2.528,809,2.528,810,2.21,812,3.935,822,2.81,831,2.683,832,1.532,834,1.454,835,2.528,842,2.923,848,2.683,855,2.4,862,2.923,864,1.626,866,3.746,868,3.975,869,5.37,873,1.532,888,2.09,918,3.425,943,4.399,1008,1.479,1030,0.875,1043,2.683,1281,4.002,1284,3.672,1446,4.262,1489,3.425,1513,3.586,1615,3.556,2020,3.556,2046,2.4,2066,1.387,2264,5.883,2269,2.683,2284,4.236,2289,1.532,2382,2.876,2468,8.055,2469,2.138,2470,4.504,2471,3.528,2472,3.528,2473,4.002,2474,5.785,2475,4.504,2476,4.504,2477,6.588,2478,5.228,2479,2.683,2480,3.528,2481,3.528,2482,4.504,2483,4.504,2484,5.785,2485,4.504,2486,4.504,2487,4.504,2488,3.425,2489,4.504,2490,4.504,2491,2.138,2492,5.228,2493,3.528,2494,3.528,2495,2.138,2496,3.135,2497,5.228,2498,5.228,2499,4.645,2500,2.138,2501,4.262,2502,4.262,2503,7.353,2504,5.785,2505,2.138,2506,3.528,2507,4.002,2508,2.138,2509,3.528,2510,2.138,2511,5.077,2512,2.138,2513,2.138,2514,4.504,2515,3.528,2516,3.528,2517,2.138,2518,3.528,2519,3.528,2520,3.135,2521,2.138,2522,3.528,2523,3.528,2524,3.528,2525,3.528,2526,2.138,2527,4.262,2528,5.228,2529,6.886,2530,3.528,2531,2.138,2532,2.138,2533,3.528,2534,2.138,2535,2.138,2536,3.528,2537,3.935,2538,2.138,2539,6.119,2540,2.138,2541,4.399,2542,2.138,2543,3.528,2544,5.785,2545,6.228,2546,2.138,2547,3.528,2548,3.528,2549,3.528,2550,2.138,2551,3.135,2552,6.228,2553,2.138,2554,3.528,2555,3.528,2556,5.785,2557,2.683,2558,2.138,2559,3.135,2560,3.528,2561,3.528,2562,2.138,2563,3.528,2564,3.135,2565,3.528,2566,3.528,2567,5.228,2568,2.138,2569,3.528,2570,3.528,2571,2.138,2572,2.138,2573,2.138,2574,2.138,2575,4.504,2576,2.138,2577,2.138,2578,2.138,2579,2.138,2580,2.138,2581,2.138,2582,2.138,2583,2.138,2584,2.138,2585,2.138,2586,2.138,2587,2.138,2588,2.138,2589,2.138,2590,1.9,2591,2.138,2592,2.138,2593,1.626,2594,2.138,2595,2.138,2596,2.138,2597,2.138,2598,4.504,2599,4.504,2600,2.138,2601,2.138,2602,2.138,2603,1.9,2604,3.528,2605,3.528,2606,3.528,2607,4.504,2608,3.528,2609,1.9,2610,5.785,2611,1.9,2612,2.138,2613,3.528,2614,3.528,2615,5.228,2616,3.528,2617,2.138,2618,2.138,2619,2.138,2620,2.138,2621,2.138,2622,3.528,2623,1.9,2624,2.138,2625,2.138,2626,2.138,2627,2.138,2628,2.138,2629,2.138,2630,3.135,2631,2.138,2632,2.138,2633,2.138]],["title/components/SearchInputComponent.html",[286,0.226,398,1.021]],["body/components/SearchInputComponent.html",[3,0.083,4,0.034,5,0.034,10,0.054,11,0.164,12,1.45,14,0.753,16,1.745,20,0.473,22,1.454,24,0.134,25,1.313,26,0.007,28,0.949,29,0.687,32,1.33,33,2.163,38,1.572,39,1.393,42,0.789,46,0.319,57,0.988,62,0.034,63,0.333,66,0.956,68,1.794,69,0.868,71,1.292,73,0.959,82,0.006,83,0.003,93,1.197,100,1.601,101,0.518,104,1.236,151,1.011,173,1.283,249,2.756,272,2.318,282,5.203,286,0.25,287,0.602,288,0.874,289,0.614,290,0.614,291,0.941,293,0.614,294,1.898,295,1.898,296,0.812,298,2.515,300,0.602,301,0.812,303,0.827,306,0.945,310,0.614,311,0.977,312,0.977,313,0.614,314,1.313,315,0.614,316,0.602,317,2.126,318,0.602,319,1.381,320,0.614,321,0.602,322,0.614,323,0.614,324,1.856,325,0.602,326,0.58,327,0.602,328,0.591,329,0.602,330,0.614,331,0.602,332,0.602,333,0.977,334,0.591,335,1.05,336,0.602,337,1.175,338,0.529,339,0.591,340,1.217,341,1.307,342,1.499,343,0.602,344,0.614,345,0.614,346,0.602,347,0.614,348,0.602,349,0.977,350,0.602,351,0.977,352,0.591,353,1.236,354,0.977,355,0.602,356,0.614,357,0.614,358,0.614,359,0.602,360,0.614,361,0.602,362,0.614,363,0.602,364,0.614,365,0.602,366,0.591,367,0.602,368,0.591,369,0.591,370,0.58,371,0.614,372,0.602,373,0.959,374,0.602,375,0.591,376,0.58,377,0.614,378,0.602,379,0.58,380,0.614,381,0.602,382,0.57,383,0.549,384,0.58,385,0.559,386,0.549,387,0.591,388,0.58,389,1.13,390,1.217,391,0.591,392,0.58,393,0.591,394,0.57,395,2.045,396,1.109,397,0.614,398,1.289,399,0.602,400,0.614,401,0.602,402,0.559,403,0.602,404,0.614,405,0.602,406,0.614,407,0.977,408,0.602,409,0.602,410,0.614,411,0.614,412,0.602,413,0.959,414,0.614,415,0.602,416,0.614,417,0.602,418,0.602,419,0.614,420,0.602,421,0.614,422,0.602,423,1.217,424,0.614,425,1.337,426,0.602,427,0.602,428,0.614,429,0.549,430,0.519,431,0.614,432,0.58,433,0.591,434,0.591,435,0.591,436,0.591,437,0.602,438,0.614,439,0.591,440,0.58,441,0.602,442,0.591,443,0.591,444,0.614,445,0.614,448,1.607,449,1.504,450,1.916,451,2.369,452,2.975,453,4.556,456,1.959,457,2.369,458,2.369,460,2.458,461,1.811,464,1.725,465,3.131,466,3.063,467,2.38,470,1.688,472,2.24,478,2.287,479,3.249,481,3.063,482,1.926,483,2.107,485,4.445,487,1.965,488,1.643,494,0.817,514,3.327,516,3.327,531,1.607,532,1.607,626,1.758,651,2.558,653,1.86,654,1.621,668,2.575,683,3.487,710,0.817,752,3.531,785,1.965,810,2.515,812,3.487,813,4.412,822,3.142,842,3.793,843,1.677,848,1.965,853,1.233,854,1.233,862,1.306,918,1.965,986,1.2,987,1.139,998,4.984,1007,1.233,1284,4.179,1489,3.129,1513,4.156,1615,1.758,2041,3.354,2046,2.799,2066,2.67,2076,2.67,2468,8.238,2473,4.556,2488,3.129,2499,4.556,2537,4.341,2539,5.194,2557,3.129,2564,2.297,2593,1.965,2603,2.297,2609,3.656,2611,2.297,2623,2.297,2630,2.297,2634,5.127,2635,5.127,2636,4.115,2637,5.845,2638,4.115,2639,5.845,2640,4.115,2641,5.127,2642,5.127,2643,5.127,2644,5.127,2645,5.127,2646,5.127,2647,5.127,2648,5.127,2649,5.127,2650,5.127,2651,5.127,2652,5.127,2653,5.127,2654,2.297,2655,2.585,2656,2.585,2657,4.115,2658,2.585,2659,2.297,2660,2.297,2661,2.585,2662,2.297,2663,2.585,2664,2.297,2665,2.585,2666,2.585,2667,2.297,2668,2.297,2669,2.297,2670,2.585,2671,2.297,2672,2.585,2673,2.585,2674,2.585,2675,2.585,2676,2.585,2677,4.115,2678,4.115,2679,4.115,2680,2.585,2681,5.127,2682,4.115,2683,2.585,2684,4.115,2685,4.115,2686,3.656,2687,5.845,2688,4.115,2689,5.845,2690,2.585,2691,4.115,2692,4.115,2693,4.115,2694,4.115,2695,4.115,2696,2.585,2697,4.115,2698,3.656,2699,4.115,2700,4.115,2701,4.115,2702,2.585,2703,4.115,2704,4.115,2705,4.115,2706,2.585,2707,2.585,2708,2.585,2709,2.585,2710,4.115,2711,2.585,2712,2.585,2713,2.297,2714,2.585,2715,2.297,2716,2.585,2717,5.127,2718,2.585,2719,2.585,2720,2.585,2721,2.585,2722,2.585,2723,2.585,2724,4.115,2725,2.585,2726,2.585,2727,2.585,2728,4.115,2729,5.127,2730,2.585,2731,4.115,2732,5.127,2733,2.585,2734,2.585,2735,4.115,2736,2.585,2737,2.585,2738,2.585,2739,2.585,2740,2.585,2741,2.585,2742,2.585]],["title/components/SelectInputComponent.html",[286,0.226,399,1.079]],["body/components/SelectInputComponent.html",[3,0.097,4,0.047,5,0.047,10,0.077,14,0.981,20,0.439,22,1.408,24,0.131,25,1.572,26,0.007,28,1.088,29,0.707,32,1.401,38,1.485,39,1.326,42,0.806,46,0.45,62,0.047,63,0.469,66,0.681,68,1.507,82,0.004,83,0.004,93,1.433,100,1.572,104,1.444,151,1.099,173,1.498,249,3.415,272,2.872,283,2.18,286,0.31,287,0.85,288,1.139,289,0.866,290,0.866,291,1.226,293,0.866,294,1.933,295,1.933,296,1.057,300,0.85,301,1.057,303,1.077,306,1.334,310,0.866,311,1.272,312,1.272,313,0.866,314,1.572,315,0.866,316,0.85,317,2.224,318,0.85,319,1.614,320,0.866,321,0.85,322,0.866,323,0.866,324,2.036,325,0.85,326,0.82,327,0.85,328,0.835,329,0.85,330,0.866,331,0.85,332,0.85,333,1.272,334,0.835,335,1.3,336,0.85,337,1.407,338,0.747,339,0.835,340,1.508,341,1.527,342,1.718,343,0.85,344,0.866,345,0.866,346,0.85,347,0.866,348,0.85,349,1.272,350,0.85,351,1.272,352,0.835,353,1.038,354,1.272,355,0.85,356,0.866,357,0.866,358,0.866,359,0.85,360,0.866,361,0.85,362,0.866,363,0.85,364,0.866,365,0.85,366,0.835,367,0.85,368,0.835,369,0.835,370,0.82,371,0.866,372,0.85,373,1.249,374,0.85,375,0.835,376,0.82,377,0.866,378,0.85,379,0.82,380,0.866,381,0.85,382,0.805,383,0.775,384,0.82,385,0.79,386,0.775,387,0.835,388,0.82,389,1.4,390,1.508,391,0.835,392,0.82,393,0.835,394,0.805,395,1.204,396,0.79,397,0.866,398,0.805,399,1.631,400,1.913,401,0.85,402,0.79,403,0.85,404,0.866,405,0.85,406,0.866,407,1.272,408,0.85,409,0.85,410,0.866,411,0.866,412,0.85,413,1.249,414,0.866,415,0.85,416,0.866,417,0.85,418,0.85,419,0.866,420,0.85,421,0.866,422,0.85,423,1.272,424,0.866,425,0.835,426,0.85,427,0.85,428,0.866,429,0.775,430,0.733,431,0.866,432,0.82,433,0.835,434,0.835,435,0.835,436,0.835,437,0.85,438,0.866,439,0.835,440,0.82,441,0.85,442,0.835,443,0.835,444,0.866,445,0.866,448,2.269,452,2.895,455,3.795,456,2.427,457,3.085,458,3.085,460,3.202,461,2.169,463,4.543,464,2.247,465,3.117,466,3.795,467,3.249,470,1.201,472,2.15,474,2.975,476,2.975,478,2.979,479,3.89,481,2.18,482,2.113,486,2.775,488,1.507,494,1.154,496,2.482,502,3.478,503,2.368,504,3.478,505,2.368,506,3.478,507,2.368,527,2.775,528,2.975,529,3.243,530,2.975,531,2.269,532,2.269,585,3.243,653,2.423,752,3.339,808,3.841,809,3.841,810,3.117,812,4.321,822,3.763,831,4.076,832,5.586,834,2.482,835,3.841,870,2.775,873,2.615,2002,3.243,2496,5.644,2654,3.243,2743,9.026,2744,8.02,2745,6.352,2746,6.352,2747,6.352,2748,5.36,2749,5.36,2750,5.36,2751,7,2752,3.65,2753,5.36,2754,3.65,2755,3.65,2756,3.243,2757,3.65]],["title/interfaces/SelectedNodes.html",[84,0.039,2758,3.774]],["body/interfaces/SelectedNodes.html",[3,0.051,4,0.051,5,0.051,12,1.515,16,1.507,20,0.306,22,0.611,24,0.057,26,0.007,33,1.925,39,0.611,42,0.954,45,0.906,46,0.48,47,1.229,48,1.306,49,1.886,52,2.58,57,1.485,58,1.805,59,1.907,62,0.051,63,0.5,66,1.487,68,2.15,69,1.886,70,2.353,71,1.733,72,1.925,73,1.857,77,2.835,78,2.956,82,0.004,83,0.004,84,0.032,86,0.647,100,1.479,151,0.673,156,1.136,183,1.334,191,2.244,236,5.369,240,3.791,241,4.268,261,2.523,283,2.323,286,0.274,294,0.767,295,0.767,296,0.767,298,2.754,301,0.767,303,0.781,306,1.421,353,0.753,398,1.237,425,1.284,430,0.781,440,0.873,441,1.535,442,1.879,443,1.96,449,1.421,450,2.097,456,2.144,461,1.205,470,1.847,472,1.989,482,1.383,488,1.578,494,1.229,525,1.306,526,1.254,536,1.334,537,1.334,543,3.752,601,2.786,602,4.429,651,3.489,654,1.774,668,1.713,702,1.421,710,1.229,800,3.327,852,1.907,853,1.854,854,1.854,877,1.485,881,1.519,882,1.519,883,1.805,886,1.757,889,2.193,890,2.523,948,2.605,952,3.353,956,1.805,961,1.591,983,1.757,985,2.786,986,1.805,987,2.473,992,1.757,993,1.591,994,1.555,995,1.591,996,1.805,998,2.09,1003,1.805,1004,1.805,1005,1.805,1006,1.805,1007,1.854,1010,1.805,1015,2.956,1020,2.902,1028,1.591,1030,2.297,1031,2.761,1032,2.523,1036,3.327,1042,3.23,1056,3.119,1103,2.523,1219,2.754,1241,3.169,1742,4.111,1889,4.575,1896,3.169,1905,3.169,2017,3.23,2033,3.23,2054,2.238,2055,1.805,2065,3.791,2070,3.23,2090,4.274,2091,3.642,2092,3.642,2093,3.43,2095,3.642,2143,2.956,2209,2.238,2263,2.238,2501,3.169,2502,3.169,2758,6.496,2759,4.575,2760,5.879,2761,2.786,2762,2.956,2763,3.642,2764,2.786,2765,3.169,2766,3.169,2767,3.455,2768,4.987,2769,3.169,2770,4.022,2771,4.575,2772,4.575,2773,5.852,2774,3.455,2775,4.987,2776,2.786,2777,3.455,2778,4.987,2779,3.455,2780,3.455,2781,4.987,2782,4.987,2783,4.987,2784,6.408,2785,4.987,2786,4.987,2787,4.987,2788,3.455,2789,3.455,2790,4.987,2791,3.455,2792,5.852,2793,3.455,2794,3.455,2795,3.455,2796,3.455,2797,3.455,2798,4.987,2799,3.455,2800,3.455,2801,4.987,2802,4.987,2803,3.455,2804,3.455,2805,3.455,2806,3.455,2807,3.455,2808,3.455,2809,4.987,2810,3.455,2811,3.455,2812,3.455,2813,3.455,2814,5.852,2815,3.455,2816,3.455,2817,4.987,2818,3.455,2819,3.455,2820,3.455,2821,3.455,2822,3.455,2823,3.455,2824,3.455,2825,3.455,2826,3.455,2827,3.455,2828,3.455,2829,3.455,2830,3.455,2831,3.455,2832,3.455,2833,3.455,2834,3.455,2835,3.455,2836,3.455,2837,3.455,2838,3.455,2839,3.455,2840,3.169]],["title/interfaces/SelectionKey.html",[84,0.039,2022,2.766]],["body/interfaces/SelectionKey.html",[3,0.058,4,0.058,5,0.058,10,0.093,11,0.245,12,1.345,20,0.453,24,0.103,26,0.007,29,0.622,42,0.882,46,0.546,62,0.08,63,0.57,66,1.148,68,2.15,71,1.812,82,0.005,83,0.005,84,0.051,86,0.738,100,2.009,286,0.301,291,1.749,294,0.874,295,0.874,296,0.874,301,0.874,303,0.89,306,1.619,328,1.013,398,0.976,429,0.941,430,1.615,449,1.619,450,2.3,451,3.543,452,3.023,455,3.678,461,1.373,470,2.026,472,2.515,478,2.462,479,3.421,482,1.98,488,2.259,494,1.4,499,2.875,602,3.932,654,1.4,685,3.174,708,2.646,710,1.4,752,2.936,842,4.591,987,1.952,997,3.174,998,2.381,1742,4.748,2017,3.543,2022,3.678,2033,4.625,2040,2.646,2051,4.227,2054,2.55,2055,2.056,2057,2.754,2065,4.91,2070,4.401,2072,3.678,2077,3.013,2209,2.55,2395,3.174,2479,3.368,2537,4.812,2541,3.368,2776,3.174,2841,3.611,2842,3.611,2843,6.78,2844,5.018,2845,3.611,2846,3.611,2847,3.611,2848,3.611,2849,3.611,2850,3.611,2851,3.611,2852,3.611,2853,3.611,2854,3.611,2855,3.611,2856,3.611,2857,3.174,2858,3.611,2859,3.611,2860,3.611,2861,3.611,2862,3.611,2863,3.611,2864,3.611,2865,3.611,2866,5.018,2867,5.018,2868,5.018,2869,5.018,2870,5.018,2871,3.611,2872,3.611,2873,5.018,2874,3.611,2875,3.611,2876,3.611,2877,3.611,2878,5.018,2879,3.611,2880,5.018,2881,3.611,2882,5.018,2883,3.611,2884,5.018,2885,3.611,2886,5.018,2887,5.38,2888,6.55,2889,3.611,2890,3.611,2891,3.611,2892,3.611,2893,3.611,2894,5.38,2895,5.018,2896,3.611,2897,5.767,2898,5.767,2899,3.611,2900,5.018,2901,3.611,2902,3.611,2903,3.611,2904,3.611,2905,3.611,2906,3.611,2907,3.611,2908,3.611,2909,3.611,2910,3.611,2911,5.018,2912,3.611,2913,3.611,2914,3.611,2915,3.611,2916,3.611,2917,3.611,2918,3.611,2919,3.611,2920,3.611,2921,5.018,2922,5.018,2923,3.611,2924,5.767,2925,3.611,2926,5.018,2927,3.611,2928,5.018,2929,5.018,2930,5.018]],["title/interfaces/SelectionOption.html",[84,0.039,2064,3.004]],["body/interfaces/SelectionOption.html",[3,0.059,4,0.059,5,0.059,10,0.096,11,0.25,12,1.666,16,1.858,20,0.392,24,0.092,26,0.007,29,0.635,33,1.335,39,0.718,42,0.954,45,1.065,46,0.564,47,1.444,48,1.535,49,1.535,52,2.25,57,1.745,62,0.082,63,0.588,66,1.695,68,2.178,69,2.113,70,1.915,71,1.742,72,2.657,73,2.042,82,0.005,83,0.005,84,0.052,86,0.761,97,3.771,100,2.058,101,0.976,183,2.157,191,1.827,286,0.307,294,0.901,295,0.901,296,0.901,298,3.086,301,0.901,303,0.918,306,1.67,353,0.885,382,1.007,383,1.646,429,1.336,430,1.264,449,1.67,450,2.35,461,1.416,472,1.735,482,1.55,488,1.284,525,1.535,526,1.474,536,1.567,537,1.567,543,3.086,653,2.065,654,1.988,668,2.013,702,1.67,710,1.444,877,1.745,881,1.785,882,1.785,883,2.121,888,1.827,889,2.458,948,2.919,961,1.87,993,1.87,994,1.827,995,1.87,996,2.121,1003,2.121,1004,2.121,1005,2.121,1006,2.121,1007,2.179,1008,2.637,1020,2.013,1027,3.757,1028,1.87,1029,2.965,1030,1.87,1031,1.915,1036,2.308,1056,2.539,1126,2.729,1127,2.84,1128,2.84,1149,3.107,1742,4.165,1821,2.456,1824,2.84,2007,5.27,2008,4.296,2010,2.965,2011,5.711,2012,4.278,2013,5.711,2014,3.274,2015,3.724,2016,3.474,2017,3.62,2018,3.724,2019,3.274,2020,3.107,2021,3.724,2022,2.729,2023,3.274,2026,3.724,2029,3.274,2033,4.139,2034,3.724,2039,3.724,2040,3.757,2042,3.724,2046,3.107,2050,3.724,2051,2.729,2054,2.63,2055,2.121,2056,3.724,2057,2.84,2058,3.274,2059,3.474,2060,3.274,2061,3.724,2062,3.474,2063,3.474,2064,4.081,2065,4.459,2066,2.965,2067,3.724,2068,3.724,2069,3.724,2070,3.62,2071,3.724,2072,5.139,2073,3.724,2074,3.724,2075,5.127,2076,4.667,2077,3.107,2078,3.724,2079,3.274,2080,5.127,2081,3.724,2082,3.274,2083,5.127,2084,5.127,2085,3.274,2086,3.274,2087,3.274,2088,4.507,2089,3.274,2090,2.965,2091,2.965,2092,2.965,2093,2.379,2094,3.274,2095,2.965,2096,4.507,2097,3.724,2098,3.724,2099,3.274,2100,3.724,2101,3.274]],["title/interfaces/SelectionOption-1.html",[84,0.032,800,1.946,2064,2.5]],["body/interfaces/SelectionOption-1.html",[3,0.061,4,0.061,5,0.061,10,0.099,11,0.256,12,1.703,16,1.798,20,0.351,24,0.094,26,0.007,29,0.651,33,1.382,39,0.743,42,0.946,45,1.102,46,0.583,47,1.495,48,1.589,49,1.589,52,2.304,57,1.807,62,0.061,63,0.608,66,1.69,68,2.059,69,2.163,71,1.722,72,2.696,73,2.059,82,0.005,83,0.005,84,0.039,86,0.788,97,3.817,100,2.035,101,0.922,156,1.382,183,1.622,191,1.891,286,0.315,294,0.933,295,0.933,296,0.933,301,0.933,303,0.95,353,0.916,384,1.062,385,1.78,386,1.877,429,1.368,430,1.294,449,1.729,450,2.406,461,1.466,472,1.776,482,1.587,488,1.33,525,1.589,526,1.525,536,1.622,537,1.622,543,3.159,590,5.633,591,4.615,593,5.893,594,3.389,595,5.893,651,4.003,668,2.084,702,1.729,877,1.807,881,1.848,882,1.848,883,2.195,888,1.891,889,2.516,948,2.989,961,1.936,993,1.936,994,1.891,995,1.936,996,2.195,1003,2.195,1004,2.195,1005,2.195,1006,2.195,1007,2.256,1008,1.983,1027,2.825,1028,2.636,1029,4.179,1030,1.936,1031,1.983,1036,2.389,1056,2.628,1126,2.825,1127,2.94,1128,2.94,1149,3.217,1742,4.226,2008,2.825,2017,3.706,2019,3.389,2020,3.217,2022,2.825,2023,3.389,2029,3.389,2033,4.524,2040,2.825,2051,2.825,2054,2.722,2055,2.195,2057,2.94,2058,3.389,2064,4.179,2065,4.524,2066,3.069,2070,2.722,2072,4.696,2076,4.179,2079,3.389,2082,3.389,2085,3.389,2086,3.389,2087,3.389,2088,4.615,2089,3.389,2090,3.069,2091,3.069,2092,3.069,2093,2.463,2094,3.389,2095,3.069,2096,4.615,2099,3.389,2101,3.389,2123,4.202,2124,3.855,2125,4.202,2126,4.202,2127,4.202,2129,4.202,2132,4.202,2134,4.202,2136,4.202,2141,4.202,2143,3.596,2145,4.202,2147,4.202,2148,3.855,2149,3.855,2150,3.596,2151,4.202,2152,3.855,2153,5.722,2154,5.722,2155,4.202,2156,4.202,2157,4.202,2158,4.202,2159,4.202,2160,3.855,2161,4.202,2162,3.855,2163,4.202]],["title/interfaces/SemanticTokens.html",[84,0.039,611,3.149]],["body/interfaces/SemanticTokens.html",[3,0.083,4,0.083,5,0.083,10,0.134,11,0.311,20,0.532,22,1.002,24,0.134,26,0.007,28,0.89,29,0.889,62,0.083,82,0.006,83,0.006,84,0.075,86,1.061,101,0.803,283,5.26,286,0.382,288,1.354,597,6.334,598,4.567,599,4.567,600,6.474,601,4.567,602,4.893,604,5.313,605,5.597,606,6.053,607,4.567,608,4.567,609,4.567,610,4.567,611,5.745,612,4.567,613,4.567,614,4.567,615,4.567,616,4.567,617,6.053,618,4.567,619,4.567,620,4.567,621,4.567,622,4.335,623,4.567,624,4.567,625,4.567,626,4.335,627,4.567,628,5.313,629,4.567,630,4.335,631,4.335,632,4.567,633,4.567,634,4.567,635,4.567,636,4.335,637,4.335,638,4.567,2931,6.373]],["title/interfaces/SequentialTurn.html",[84,0.039,1848,2.489]],["body/interfaces/SequentialTurn.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.513,24,0.133,26,0.007,29,0.952,62,0.092,82,0.006,83,0.006,84,0.059,86,1.179,97,4.232,100,1.984,101,1.113,1187,3.119,1846,4.815,1848,4.472,1851,5.248,1852,5.447,2378,4.815,2932,7.078,2933,8.102]],["title/injectables/SequentialTurnManagementService.html",[0,1.206,2375,3.149]],["body/injectables/SequentialTurnManagementService.html",[0,1.172,1,1.244,2,1.157,3,0.038,4,0.038,5,0.038,7,1.275,8,1.275,9,1.507,10,0.061,11,0.179,12,1.356,14,0.823,15,3.84,16,2.146,20,0.472,22,1.331,24,0.12,25,1.848,26,0.007,28,1.149,29,0.831,32,1.478,33,2.648,35,4.207,38,0.808,39,0.707,42,0.886,45,0.674,46,0.357,47,0.915,48,0.972,49,1.511,52,2.226,58,1.343,59,1.42,60,1.185,61,1.157,62,0.038,63,0.372,66,1.691,67,2.968,69,2.09,71,1.796,72,2.134,73,1.917,82,0.003,83,0.003,97,2.888,100,1.602,101,1.2,106,2.494,107,2.561,121,4.246,125,5.515,129,3.72,130,5.515,146,2.033,147,2.201,148,2.088,150,1.244,151,0.501,152,1.275,153,1.275,154,1.308,155,1.275,156,0.846,159,1.308,160,1.308,164,4.137,165,1.556,166,1.556,167,1.878,172,3.997,175,3.997,176,3.992,178,3.925,179,3.819,180,3.72,183,0.993,184,3.45,185,4.037,186,1.878,188,3.992,189,3.819,190,4.037,191,2.488,192,4.731,195,3.997,196,3.344,207,3.878,208,1.666,219,4.232,222,2.572,223,2.572,370,0.65,389,0.992,402,0.626,1187,4.093,1228,5.545,1314,6.839,1323,2.966,1417,2.201,1425,2.201,1786,1.799,1790,4.349,1792,1.729,1821,1.556,1846,5.827,1848,4.249,1850,4.232,1851,4.931,1852,4.447,1853,5.072,1885,2.201,1886,2.572,2333,4.458,2375,3.059,2377,6.139,2379,1.969,2380,2.359,2440,2.572,2933,5.528,2934,5.517,2935,5.517,2936,5.517,2937,5.517,2938,5.517,2939,5.517,2940,5.517,2941,6.222,2942,5.517,2943,5.517,2944,5.517,2945,2.894,2946,2.894,2947,2.894,2948,2.894,2949,2.894,2950,2.894,2951,2.894,2952,2.572,2953,2.894,2954,2.894,2955,2.894,2956,2.894,2957,2.894,2958,2.359,2959,2.894,2960,2.894,2961,2.894,2962,2.894,2963,2.894,2964,2.894,2965,2.894,2966,2.894,2967,5.517,2968,2.894,2969,2.894,2970,4.498,2971,2.894,2972,4.498,2973,2.894,2974,2.894,2975,6.338,2976,2.894,2977,6.222,2978,6.222,2979,2.894,2980,2.894,2981,4.498,2982,2.894,2983,2.894,2984,2.572,2985,6.222,2986,2.894,2987,4.498,2988,4.498,2989,2.894,2990,2.894,2991,2.894,2992,2.894,2993,2.894,2994,2.894,2995,2.894,2996,2.894,2997,2.894,2998,2.894,2999,5.517,3000,2.894,3001,6.738,3002,5.517,3003,2.894,3004,2.894,3005,4.498,3006,2.894,3007,2.894]],["title/interfaces/ShortResponse.html",[58,2.149,84,0.039]],["body/interfaces/ShortResponse.html",[3,0.097,4,0.097,5,0.097,10,0.156,11,0.34,20,0.491,24,0.108,26,0.007,58,3.972,62,0.097,77,4.678,82,0.006,83,0.006,84,0.062,86,1.237,281,6.602,3008,7.429]],["title/components/SidebarComponent.html",[286,0.226,403,1.079]],["body/components/SidebarComponent.html",[3,0.101,4,0.053,5,0.053,10,0.086,11,0.231,14,1.065,20,0.317,22,1.383,24,0.114,25,0.918,26,0.007,28,0.946,29,0.413,32,1.326,38,1.217,39,1.065,42,0.91,46,0.504,57,1.562,62,0.053,63,0.526,82,0.004,83,0.004,93,1.511,104,1.51,151,0.707,173,1.567,286,0.331,287,0.953,288,1.236,289,0.97,290,0.97,291,1.331,293,0.97,294,1.942,295,1.942,296,1.148,300,0.953,301,1.148,303,1.169,306,1.494,310,0.97,311,1.381,312,1.381,313,0.97,314,1.657,315,0.97,316,0.953,317,2.251,318,0.953,319,1.688,320,0.97,321,0.953,322,0.97,323,0.97,324,2.088,325,0.953,326,0.918,327,0.953,328,0.935,329,0.953,330,0.97,331,0.953,332,0.953,333,1.381,334,0.935,335,1.387,336,0.953,337,1.483,338,0.837,339,0.935,340,1.608,341,1.596,342,1.787,343,0.953,344,0.97,345,0.97,346,0.953,347,0.97,348,0.953,349,1.381,350,0.953,351,1.381,352,0.935,353,1.127,354,1.381,355,0.953,356,0.97,357,0.97,358,0.97,359,0.953,360,0.97,361,0.953,362,0.97,363,0.953,364,0.97,365,0.953,366,0.935,367,0.953,368,0.935,369,0.935,370,0.918,371,0.97,372,0.953,373,1.356,374,0.953,375,0.935,376,0.918,377,0.97,378,0.953,379,0.918,380,0.97,381,0.953,382,0.901,383,0.868,384,0.918,385,0.885,386,0.868,387,0.935,388,0.918,389,1.493,390,1.608,391,0.935,392,0.918,393,0.935,394,0.901,395,1.306,396,0.885,397,0.97,398,0.901,399,0.953,400,0.97,401,0.953,402,0.885,403,1.72,404,0.97,405,1.72,406,1.752,407,1.381,408,0.953,409,0.953,410,0.97,411,0.97,412,1.72,413,1.578,414,0.97,415,0.953,416,0.97,417,0.953,418,0.953,419,0.97,420,0.953,421,0.97,422,0.953,423,1.381,424,0.97,425,0.935,426,0.953,427,0.953,428,0.97,429,0.868,430,0.821,431,0.97,432,0.918,433,0.935,434,0.935,435,0.935,436,0.935,437,0.953,438,0.97,439,0.935,440,0.918,441,0.953,442,0.935,443,0.935,444,0.97,445,0.97,449,2.127,450,2.531,452,2.23,461,2.287,464,2.439,472,1.605,482,1.818,522,2.442,538,3.108,661,6.019,664,5.808,688,2.541,693,4.854,709,2.541,715,3.632,725,3.632,726,3.108,728,3.632,732,3.332,733,3.332,1043,5.15,1460,3.632,1888,4.743,1893,5.15,3009,4.088,3010,5.818,3011,6.773,3012,5.818,3013,5.818,3014,7.798,3015,6.019,3016,6.773,3017,7.379,3018,7.379,3019,5.818,3020,6.773,3021,5.818,3022,4.088,3023,5.818,3024,4.088,3025,5.818,3026,4.088,3027,4.088,3028,5.818,3029,4.088,3030,4.088,3031,4.088,3032,4.088,3033,4.088,3034,4.088,3035,3.632,3036,3.632,3037,4.088,3038,5.818,3039,4.088,3040,4.088,3041,4.088,3042,4.088]],["title/components/SidebarMenuComponent.html",[286,0.226,405,1.079]],["body/components/SidebarMenuComponent.html",[3,0.106,4,0.06,5,0.06,10,0.152,22,0.726,24,0.092,26,0.007,28,0.884,38,0.829,39,0.726,42,0.748,46,0.57,62,0.06,63,0.594,82,0.005,83,0.005,93,1.593,104,1.579,151,0.799,173,1.639,286,0.353,287,1.076,288,1.346,289,1.096,290,1.096,291,1.449,293,1.096,294,1.951,295,1.951,296,1.25,300,1.076,301,1.25,303,1.273,310,1.096,311,1.504,312,1.504,313,1.096,314,1.748,315,1.096,316,1.076,317,2.277,318,1.076,319,1.765,320,1.096,321,1.076,322,1.096,323,1.096,324,2.141,325,1.076,326,1.037,327,1.076,328,1.056,329,1.076,330,1.096,331,1.076,332,1.076,333,1.504,334,1.056,335,1.48,336,1.076,337,1.564,338,0.945,339,1.056,340,1.717,341,1.669,342,1.857,343,1.076,344,1.096,345,1.096,346,1.076,347,1.096,348,1.076,349,1.504,350,1.076,351,1.504,352,1.056,353,1.227,354,1.504,355,1.076,356,1.096,357,1.096,358,1.096,359,1.076,360,1.096,361,1.076,362,1.096,363,1.076,364,1.096,365,1.076,366,1.056,367,1.076,368,1.056,369,1.056,370,1.037,371,1.096,372,1.076,373,1.476,374,1.076,375,1.056,376,1.037,377,1.096,378,1.076,379,1.037,380,1.096,381,1.076,382,1.018,383,0.981,384,1.037,385,0.999,386,0.981,387,1.056,388,1.037,389,1.594,390,1.717,391,1.056,392,1.037,393,1.056,394,1.018,395,1.422,396,0.999,397,1.096,398,1.018,399,1.076,400,1.096,401,1.076,402,0.999,403,1.076,404,1.096,405,1.813,406,2.048,407,1.504,408,1.076,409,1.076,410,1.096,411,1.096,412,1.076,413,1.476,414,1.096,415,1.076,416,1.096,417,1.076,418,1.076,419,1.096,420,1.076,421,1.096,422,1.076,423,1.504,424,1.096,425,1.056,426,1.076,427,1.076,428,1.096,429,0.981,430,0.928,431,1.096,432,1.037,433,1.056,434,1.056,435,1.056,436,1.056,437,1.076,438,1.096,439,1.056,440,1.037,441,1.076,442,1.654,443,1.056,444,1.096,445,1.096,452,2.085,464,2.656,693,4.539,732,3.764,733,3.764,1516,3.646,1615,4.309,3035,5.629,3043,6.334,3044,4.102,3045,7.231,3046,5.629,3047,5.629,3048,7.782,3049,4.617,3050,4.617,3051,4.617,3052,6.334]],["title/interfaces/SidebarState.html",[84,0.039,3053,4.114]],["body/interfaces/SidebarState.html",[3,0.081,4,0.081,5,0.081,10,0.131,11,0.306,24,0.122,26,0.007,42,0.865,62,0.1,66,1.438,68,1.753,71,1.661,82,0.006,83,0.006,84,0.052,86,1.039,100,1.879,101,1.054,121,4.104,158,4.242,177,5.523,183,2.869,255,6.644,262,5.542,267,8.127,396,1.35,472,2.126,709,3.877,726,4.742,818,4.742,862,4.825,2593,4.742,3015,8.321,3053,7.433,3054,6.237,3055,9.269,3056,6.849,3057,6.237,3058,6.849,3059,6.237,3060,6.237,3061,6.237,3062,6.237,3063,6.237,3064,6.237,3065,7.708,3066,6.237,3067,7.708,3068,6.237,3069,6.237,3070,6.237,3071,5.542,3072,7.708,3073,6.237]],["title/interfaces/SoftwareUserInfo.html",[84,0.039,2763,3.004]],["body/interfaces/SoftwareUserInfo.html",[3,0.088,4,0.088,5,0.088,10,0.143,11,0.323,20,0.521,24,0.137,26,0.007,29,0.979,62,0.088,82,0.006,83,0.006,84,0.056,86,1.13,92,4.065,100,2.095,101,1.175,151,1.174,1103,5.836,1350,4.403,2763,5.265,2770,6.445,3074,6.785,3075,7.331,3076,7.331,3077,7.331,3078,7.991]],["title/components/SubMenuComponent.html",[286,0.226,408,1.079]],["body/components/SubMenuComponent.html",[3,0.103,4,0.056,5,0.056,10,0.146,11,0.239,12,1.321,14,1.101,22,1.092,24,0.101,25,0.962,26,0.007,28,0.97,29,0.433,32,0.77,38,1.081,39,0.945,42,0.851,45,0.999,46,0.529,62,0.056,63,0.551,68,1.205,82,0.004,83,0.004,93,1.543,104,1.537,129,1.937,151,0.741,173,1.595,239,2.914,274,6.471,286,0.388,287,0.999,288,1.278,289,1.017,290,1.017,291,1.376,293,1.017,294,1.946,295,1.946,296,1.186,300,0.999,301,1.186,303,1.209,310,1.017,311,1.428,312,1.428,313,1.017,314,1.692,315,1.017,316,0.999,317,2.261,318,0.999,319,1.944,320,1.017,321,0.999,322,1.017,323,1.017,324,2.109,325,0.999,326,0.962,327,0.999,328,0.98,329,0.999,330,1.017,331,0.999,332,0.999,333,1.428,334,0.98,335,1.423,336,0.999,337,1.514,338,0.877,339,0.98,340,1.65,341,1.625,342,1.814,343,0.999,344,1.017,345,1.017,346,0.999,347,1.017,348,0.999,349,1.428,350,0.999,351,1.428,352,0.98,353,1.165,354,1.428,355,0.999,356,1.017,357,1.017,358,1.017,359,0.999,360,1.017,361,0.999,362,1.017,363,0.999,364,1.017,365,0.999,366,0.98,367,0.999,368,0.98,369,0.98,370,0.962,371,1.017,372,0.999,373,1.402,374,0.999,375,0.98,376,0.962,377,1.017,378,0.999,379,0.962,380,1.017,381,0.999,382,0.945,383,0.91,384,0.962,385,0.927,386,0.91,387,0.98,388,0.962,389,1.532,390,1.65,391,0.98,392,0.962,393,0.98,394,0.945,395,1.351,396,0.927,397,1.017,398,0.945,399,0.999,400,1.017,401,0.999,402,0.927,403,0.999,404,1.017,405,0.999,406,1.017,407,1.428,408,1.756,409,0.999,410,1.017,411,1.017,412,0.999,413,1.402,414,1.017,415,0.999,416,1.017,417,0.999,418,0.999,419,1.017,420,0.999,421,1.017,422,0.999,423,1.428,424,1.017,425,0.98,426,0.999,427,0.999,428,1.017,429,0.91,430,0.861,431,1.017,432,0.962,433,0.98,434,0.98,435,0.98,436,0.98,437,0.999,438,1.017,439,0.98,440,0.962,441,0.999,442,1.59,443,0.98,444,1.017,445,1.017,452,1.98,464,2.522,482,1.056,664,5.4,698,4.903,705,5.898,709,2.664,714,6.696,731,3.807,737,3.493,738,3.071,739,3.071,1396,4.98,1399,2.914,1516,3.462,2309,2.664,3044,3.807,3046,5.345,3047,5.345,3079,7.536,3080,6.015,3081,4.285,3082,6.015,3083,4.285,3084,6.95,3085,4.285,3086,4.31,3087,4.285,3088,3.807,3089,4.285,3090,4.285,3091,3.493,3092,4.285,3093,6.015,3094,4.285,3095,4.285,3096,6.95,3097,6.015]],["title/components/SupportButtonComponent.html",[286,0.226,409,1.079]],["body/components/SupportButtonComponent.html",[3,0.099,4,0.05,5,0.05,10,0.081,11,0.221,12,1.243,14,1.019,16,1.497,22,1.287,24,0.105,25,0.863,26,0.007,28,0.913,29,0.388,32,1.289,38,1,39,0.875,42,0.909,46,0.474,62,0.05,63,0.494,68,1.565,73,0.895,82,0.004,83,0.004,93,1.468,100,1.611,104,1.474,150,3.082,151,0.665,152,2.882,153,1.693,154,1.737,173,1.53,261,2.493,286,0.32,287,0.895,288,1.182,289,0.912,290,0.912,291,1.273,293,0.912,294,1.937,295,1.937,296,1.098,300,0.895,301,1.098,303,1.118,305,2.613,310,0.912,311,1.321,312,1.321,313,0.912,314,1.611,315,0.912,316,0.895,317,2.237,318,0.895,319,1.647,320,0.912,321,0.895,322,0.912,323,0.912,324,2.06,325,1.671,326,0.863,327,0.895,328,0.879,329,0.895,330,0.912,331,0.895,332,0.895,333,1.321,334,0.879,335,1.339,336,0.895,337,1.441,338,0.787,339,0.879,340,1.553,341,1.558,342,1.75,343,0.895,344,0.912,345,0.912,346,0.895,347,0.912,348,0.895,349,1.321,350,0.895,351,1.321,352,0.879,353,1.077,354,1.321,355,0.895,356,0.912,357,0.912,358,0.912,359,0.895,360,0.912,361,0.895,362,0.912,363,0.895,364,0.912,365,0.895,366,0.879,367,0.895,368,0.879,369,0.879,370,0.863,371,0.912,372,0.895,373,1.297,374,0.895,375,0.879,376,0.863,377,0.912,378,0.895,379,0.863,380,0.912,381,0.895,382,0.847,383,0.816,384,0.863,385,0.831,386,0.816,387,0.879,388,0.863,389,1.442,390,1.553,391,0.879,392,0.863,393,0.879,394,0.847,395,1.25,396,0.831,397,0.912,398,0.847,399,0.895,400,0.912,401,0.895,402,0.831,403,0.895,404,0.912,405,0.895,406,0.912,407,1.321,408,0.895,409,1.671,410,1.943,411,0.912,412,0.895,413,1.297,414,0.912,415,0.895,416,0.912,417,0.895,418,0.895,419,0.912,420,0.895,421,0.912,422,1.671,423,1.321,424,1.553,425,0.879,426,0.895,427,0.895,428,0.912,429,0.816,430,0.772,431,0.912,432,0.863,433,0.879,434,0.879,435,0.879,436,0.879,437,0.895,438,0.912,439,0.879,440,0.863,441,0.895,442,0.879,443,0.879,444,0.912,445,0.912,472,2.189,482,1.612,513,3.132,522,3.324,525,2.198,526,2.313,536,1.318,537,1.318,654,2.068,663,6.225,710,1.215,718,7.45,721,2.753,722,2.753,880,4.975,892,5.847,933,4.067,984,2.753,986,1.783,987,2.452,1028,2.278,2686,4.945,3098,8.384,3099,3.842,3100,6.542,3101,6.542,3102,5.565,3103,5.565,3104,6.542,3105,7.172,3106,7.172,3107,7.172,3108,3.842,3109,5.565,3110,3.842,3111,3.842,3112,3.842,3113,3.842,3114,3.842,3115,3.842,3116,3.842,3117,3.842,3118,3.842,3119,3.842,3120,5.565,3121,5.565]],["title/components/TabBarComponent.html",[286,0.226,412,1.079]],["body/components/TabBarComponent.html",[3,0.101,4,0.053,5,0.053,10,0.085,11,0.23,12,1.281,14,1.059,22,1.308,24,0.113,25,1.299,26,0.007,28,1.026,29,0.584,32,1.211,38,1.211,39,1.06,42,0.879,45,0.944,46,0.5,57,1.548,62,0.053,63,0.521,68,1.626,82,0.004,83,0.004,93,1.505,101,1.018,104,1.505,121,3.607,151,0.701,173,1.562,286,0.329,287,0.944,288,1.228,289,0.962,290,0.962,291,1.323,293,0.962,294,1.942,295,1.942,296,1.141,300,0.944,301,1.141,303,1.162,306,1.482,310,0.962,311,1.373,312,1.373,313,0.962,314,1.651,315,0.962,316,0.944,317,2.249,318,0.944,319,1.682,320,0.962,321,0.944,322,0.962,323,0.962,324,2.084,325,0.944,326,0.91,327,0.944,328,0.927,329,0.944,330,0.962,331,0.944,332,0.944,333,1.373,334,0.927,335,1.38,336,0.944,337,1.477,338,0.83,339,0.927,340,1.6,341,1.591,342,1.782,343,0.944,344,0.962,345,0.962,346,0.944,347,0.962,348,0.944,349,1.373,350,0.944,351,1.373,352,0.927,353,1.12,354,1.373,355,0.944,356,0.962,357,0.962,358,0.962,359,0.944,360,0.962,361,0.944,362,0.962,363,0.944,364,0.962,365,0.944,366,0.927,367,0.944,368,0.927,369,0.927,370,0.91,371,0.962,372,0.944,373,1.348,374,0.944,375,0.927,376,0.91,377,0.962,378,0.944,379,0.91,380,0.962,381,0.944,382,0.893,383,0.861,384,0.91,385,0.877,386,0.861,387,0.927,388,0.91,389,1.486,390,1.6,391,0.927,392,0.91,393,0.927,394,0.893,395,1.299,396,0.877,397,0.962,398,0.893,399,0.944,400,0.962,401,0.944,402,0.877,403,0.944,404,0.962,405,0.944,406,0.962,407,1.373,408,0.944,409,0.944,410,0.962,411,0.962,412,1.713,413,2.046,414,0.962,415,0.944,416,0.962,417,0.944,418,0.944,419,0.962,420,0.944,421,0.962,422,0.944,423,1.373,424,0.962,425,0.927,426,0.944,427,0.944,428,0.962,429,0.861,430,0.814,431,0.962,432,0.91,433,0.927,434,0.927,435,0.927,436,0.927,437,0.944,438,0.962,439,0.927,440,0.91,441,0.944,442,0.927,443,0.927,444,0.962,445,0.962,449,2.114,450,2.519,455,3.455,461,2.278,482,1.811,664,5.268,678,4.831,698,4.714,709,2.52,734,3.601,736,3.601,740,3.304,1516,3.328,1888,5.496,1893,5.126,3036,7.557,3088,3.601,3122,7.557,3123,4.053,3124,5.783,3125,5.138,3126,5.783,3127,5.783,3128,6.741,3129,6.741,3130,7.181,3131,5.783,3132,5.783,3133,4.053,3134,5.783,3135,4.053,3136,5.783,3137,4.053,3138,4.053,3139,4.053,3140,4.053,3141,4.053,3142,4.053,3143,4.053,3144,4.053,3145,3.601,3146,4.053,3147,4.053,3148,4.053,3149,4.053,3150,4.053,3151,4.053,3152,4.053,3153,5.138,3154,5.783,3155,5.783]],["title/interfaces/TabItem.html",[84,0.039,678,3.317]],["body/interfaces/TabItem.html",[3,0.092,4,0.092,5,0.092,10,0.148,11,0.33,20,0.453,24,0.135,26,0.007,42,0.73,62,0.092,82,0.006,83,0.006,84,0.059,86,1.176,97,4.096,100,2.046,101,1.046,121,4.33,129,3.99,286,0.445,678,5.952,738,5.059,739,5.059,1469,6.273,2309,5.486,3086,6.324,3156,7.059,3157,6.273,3158,7.059,3159,7.059,3160,7.059]],["title/interfaces/TabView.html",[84,0.039,3161,3.774]],["body/interfaces/TabView.html",[3,0.106,4,0.05,5,0.05,10,0.081,11,0.221,20,0.357,24,0.128,26,0.007,29,0.562,42,0.982,46,0.474,62,0.085,69,2.75,71,0.73,82,0.004,83,0.004,84,0.032,86,0.64,104,1.537,129,4.339,173,1.441,177,2.753,183,1.318,286,0.469,316,1.297,318,1.297,319,1.718,334,1.273,335,1.625,336,1.297,337,1.315,338,1.139,339,1.273,341,1.625,342,1.937,343,1.297,353,0.744,363,1.297,365,1.297,366,1.273,368,1.273,369,1.497,370,1.25,375,0.879,376,0.863,382,1.227,384,1.25,386,1.182,387,1.273,388,1.25,391,1.273,392,1.25,393,1.273,401,1.297,402,1.552,417,1.297,427,1.297,432,1.611,433,1.273,434,1.273,435,1.273,436,1.273,439,1.273,440,1.25,442,1.273,443,1.273,737,3.132,743,3.414,800,2.811,875,5.454,876,6.373,1187,3.16,1219,4.359,1220,3.414,1221,3.414,1250,3.785,1251,6.408,1302,3.132,1323,2.065,1526,2.922,1583,3.414,1795,3.414,1978,3.414,2016,2.922,2051,2.295,2124,3.132,2192,4.945,2200,4.879,2201,3.132,2416,4.945,2439,3.414,2527,5.333,2760,4.536,2857,2.753,3086,2.753,3091,3.132,3161,4.536,3162,3.414,3163,3.414,3164,5.565,3165,4.945,3166,7.172,3167,4.975,3168,3.842,3169,5.565,3170,5.565,3171,3.842,3172,3.842,3173,3.842,3174,3.842,3175,3.842,3176,3.842,3177,3.842,3178,3.842,3179,3.414,3180,3.842,3181,3.414,3182,6.542,3183,6.373,3184,3.842,3185,6.542,3186,4.945,3187,3.842,3188,7.172,3189,3.842,3190,3.414,3191,3.414,3192,3.414,3193,3.414,3194,3.414,3195,3.414,3196,3.414,3197,3.414,3198,3.414,3199,3.414,3200,3.414,3201,3.414,3202,3.414,3203,3.414,3204,3.414,3205,3.414,3206,3.414,3207,3.414,3208,3.414,3209,3.414,3210,3.414,3211,3.414,3212,3.414,3213,3.414,3214,3.414,3215,3.842,3216,3.842,3217,3.842,3218,3.842,3219,3.842,3220,3.842,3221,3.842,3222,3.842,3223,3.842,3224,3.842,3225,3.842,3226,3.842,3227,3.842,3228,3.842,3229,3.842,3230,5.333,3231,3.842]],["title/components/TabViewComponent.html",[286,0.226,415,1.079]],["body/components/TabViewComponent.html",[3,0.099,4,0.05,5,0.05,10,0.166,11,0.22,12,1.505,14,1.014,20,0.39,22,1.341,24,0.124,25,1.244,26,0.007,28,0.999,29,0.846,32,1.172,38,1.172,39,1.025,42,0.74,46,0.471,62,0.05,63,0.491,66,1.216,68,1.558,71,1.239,76,3.114,82,0.004,83,0.004,93,1.464,101,1.029,104,1.471,151,0.661,173,1.526,183,2.237,286,0.349,287,0.89,288,1.177,289,0.907,290,0.907,291,1.268,293,0.907,294,1.937,295,1.937,296,1.093,298,3.199,300,0.89,301,1.093,303,1.114,306,1.396,310,0.907,311,1.315,312,1.315,313,0.907,314,1.606,315,0.907,316,0.89,317,2.235,318,0.89,319,1.644,320,0.907,321,0.89,322,0.907,323,0.907,324,2.057,325,0.89,326,0.858,327,0.89,328,0.874,329,0.89,330,0.907,331,0.89,332,0.89,333,1.315,334,0.874,335,1.335,336,0.89,337,1.437,338,0.782,339,0.874,340,1.548,341,1.555,342,1.746,343,0.89,344,0.907,345,0.907,346,0.89,347,0.907,348,0.89,349,1.315,350,0.89,351,1.315,352,0.874,353,1.073,354,1.315,355,0.89,356,0.907,357,0.907,358,0.907,359,0.89,360,0.907,361,0.89,362,0.907,363,0.89,364,0.907,365,0.89,366,0.874,367,0.89,368,0.874,369,0.874,370,0.858,371,0.907,372,0.89,373,1.291,374,0.89,375,0.874,376,0.858,377,0.907,378,0.89,379,0.858,380,0.907,381,0.89,382,0.842,383,0.811,384,0.858,385,0.827,386,0.811,387,0.874,388,0.858,389,1.437,390,1.548,391,0.874,392,0.858,393,0.874,394,0.842,395,1.244,396,0.827,397,0.907,398,0.842,399,0.89,400,0.907,401,0.89,402,0.827,403,0.89,404,0.907,405,0.89,406,0.907,407,1.315,408,0.89,409,0.89,410,0.907,411,0.907,412,0.89,413,1.951,414,0.907,415,1.667,416,0.907,417,0.89,418,0.89,419,0.907,420,0.89,421,0.907,422,0.89,423,1.315,424,0.907,425,0.874,426,0.89,427,0.89,428,0.907,429,0.811,430,0.768,431,0.907,432,0.858,433,0.874,434,0.874,435,0.874,436,0.874,437,0.89,438,0.907,439,0.874,440,0.858,441,0.89,442,0.874,443,0.874,444,0.907,445,0.907,449,2.026,452,1.824,464,2.323,482,1.762,488,1.558,650,5.794,653,2.505,658,5.794,667,6.356,685,3.971,687,7.581,688,3.445,690,6.356,707,7.038,708,2.282,738,2.737,739,2.737,742,7.7,785,4.213,791,4.924,793,6.749,800,1.93,1516,3.189,1979,3.394,1980,4.924,1981,4.924,3122,7.7,3125,5.794,3145,3.394,3161,5.316,3232,7.595,3233,6.521,3234,6.521,3235,6.521,3236,5.541,3237,5.541,3238,3.82,3239,5.541,3240,3.82,3241,3.82,3242,5.541,3243,3.82,3244,3.82,3245,3.82,3246,3.82,3247,5.541,3248,3.82,3249,5.541,3250,3.82,3251,3.82,3252,3.82,3253,3.82,3254,3.82,3255,3.82,3256,3.82,3257,5.541,3258,3.82,3259,3.82,3260,3.82,3261,3.82,3262,3.82,3263,5.541,3264,3.82,3265,3.82,3266,3.82,3267,5.541]],["title/interfaces/TabsState.html",[84,0.039,3268,4.114]],["body/interfaces/TabsState.html",[3,0.074,4,0.074,5,0.074,10,0.12,11,0.289,24,0.106,26,0.007,42,0.874,62,0.095,66,1.63,68,2.255,71,1.66,82,0.005,83,0.005,84,0.047,86,0.947,97,4.055,101,1.01,121,4.457,129,3.625,183,2.751,286,0.413,396,1.231,413,1.869,436,1.301,472,2.007,488,1.599,678,6.26,709,3.536,738,4.077,739,4.077,740,4.637,752,4.032,800,4.052,818,4.325,862,4.693,868,4.325,2309,4.986,2520,6.464,2593,4.325,3056,6.464,3058,6.464,3071,5.055,3086,4.077,3091,4.637,3130,8.32,3153,7.126,3268,7.126,3269,5.689,3270,8.935,3271,5.689,3272,5.689,3273,7.275,3274,5.689,3275,5.689,3276,7.275,3277,5.689,3278,5.689,3279,5.689,3280,7.275,3281,5.689,3282,5.689,3283,5.689,3284,5.689,3285,7.275,3286,5.689,3287,5.689,3288,7.275,3289,5.689,3290,5.689,3291,5.689]],["title/interfaces/Tariff.html",[84,0.039,1344,3.52]],["body/interfaces/Tariff.html",[3,0.081,4,0.081,5,0.081,10,0.132,11,0.307,20,0.528,24,0.14,26,0.007,29,0.982,62,0.081,82,0.006,83,0.006,84,0.052,86,1.042,97,4.061,100,1.882,101,1.229,1344,6.96,1595,6.653,1596,7.132,1601,5.951,1602,7.132,1603,5.951,1604,7.132,1790,4.293,1792,5.227,2093,4.919,3292,6.259,3293,8.749,3294,8.749]],["title/injectables/TariffsManagementService.html",[0,1.206,3295,4.114]],["body/injectables/TariffsManagementService.html",[0,1.537,1,1.79,2,1.666,3,0.054,4,0.054,5,0.054,7,1.835,8,1.835,9,2.169,10,0.088,11,0.234,12,1.55,14,1.079,15,3.827,16,2.139,20,0.227,22,1.346,24,0.119,25,1.831,26,0.007,28,1.139,29,0.824,32,1.465,33,2.635,35,4.186,37,2.985,38,1.059,39,0.927,42,0.901,45,0.971,46,0.514,47,1.317,48,1.4,49,1.981,58,1.934,59,2.044,60,1.705,61,1.666,62,0.054,63,0.536,66,1.682,71,1.728,73,1.9,82,0.004,83,0.004,101,1.182,106,3.094,107,3.177,146,2.665,148,2.737,150,1.79,151,0.721,152,1.835,153,1.835,154,1.883,155,1.835,156,1.217,159,1.883,160,1.883,164,4.384,165,2.239,166,2.239,176,3.875,178,3.89,179,3.785,180,3.686,183,1.429,184,3.515,185,4.001,188,3.875,189,3.785,190,4.001,418,2.134,1344,7.224,1546,3.168,1551,2.985,1595,4.483,1601,5.547,1603,5.547,1790,4.001,2008,4.446,2093,4.869,2952,3.702,3295,5.239,3296,8.711,3297,8.711,3298,6.844,3299,6.844,3300,6.844,3301,6.844,3302,6.844,3303,6.844,3304,4.166,3305,7.442,3306,4.166,3307,4.166,3308,3.702,3309,4.166,3310,4.166,3311,4.166,3312,4.166,3313,4.166,3314,4.166,3315,4.166,3316,5.896,3317,4.166,3318,4.166,3319,4.166,3320,4.166,3321,6.844,3322,5.239,3323,6.844,3324,3.702,3325,6.844,3326,4.166,3327,4.166,3328,4.166,3329,4.166,3330,4.166,3331,4.166,3332,4.166]],["title/components/TerminalCardComponent.html",[286,0.226,420,1.079]],["body/components/TerminalCardComponent.html",[3,0.105,4,0.058,5,0.058,10,0.094,14,1.136,22,0.975,24,0.09,26,0.007,28,0.866,32,0.805,42,0.834,46,0.552,62,0.058,63,0.576,66,0.835,82,0.005,83,0.005,93,1.573,104,1.562,151,0.775,173,1.677,286,0.348,287,1.044,288,1.318,289,1.063,290,1.063,291,1.419,293,1.063,294,1.949,295,1.949,296,1.224,300,1.044,301,1.224,303,1.247,310,1.063,311,1.473,312,1.473,313,1.063,314,1.725,315,1.063,316,1.044,317,2.271,318,1.044,319,1.746,320,1.063,321,1.044,322,1.063,323,1.063,324,2.128,325,1.044,326,1.006,327,1.044,328,1.025,329,1.044,330,1.063,331,1.044,332,1.044,333,1.473,334,1.025,335,1.457,336,1.044,337,1.544,338,0.917,339,1.025,340,1.689,341,1.651,342,1.84,343,1.044,344,1.063,345,1.063,346,1.044,347,1.063,348,1.044,349,1.473,350,1.044,351,1.473,352,1.025,353,1.201,354,1.473,355,1.044,356,1.063,357,1.063,358,1.063,359,1.044,360,1.063,361,1.044,362,1.063,363,1.044,364,1.063,365,1.044,366,1.025,367,1.044,368,1.025,369,1.025,370,1.006,371,1.063,372,1.044,373,1.446,374,1.044,375,1.025,376,1.006,377,1.063,378,1.044,379,1.006,380,1.063,381,1.044,382,0.987,383,0.951,384,1.006,385,0.969,386,0.951,387,1.025,388,1.006,389,1.569,390,1.689,391,1.025,392,1.006,393,1.025,394,0.987,395,1.393,396,0.969,397,1.063,398,0.987,399,1.044,400,1.063,401,1.044,402,0.969,403,1.044,404,1.063,405,1.044,406,1.063,407,1.473,408,1.044,409,1.044,410,1.063,411,1.063,412,1.044,413,1.446,414,1.063,415,1.044,416,1.063,417,1.044,418,1.044,419,1.063,420,1.79,421,2.168,422,1.044,423,1.473,424,1.063,425,1.025,426,1.044,427,1.044,428,1.063,429,0.951,430,0.9,431,1.063,432,1.006,433,1.025,434,1.025,435,1.025,436,1.025,437,1.044,438,1.063,439,1.025,440,1.006,441,1.044,442,1.025,443,1.025,444,1.063,445,1.063,452,2.042,464,2.601,654,2.25,710,1.416,721,3.21,722,3.21,1394,3.98,1395,5.057,1396,5.1,1397,5.512,1398,5.512,1399,3.046,1487,5.1,1497,3.21,1498,3.406,1501,6.324,3333,7.117,3334,7.682,3335,4.479,3336,4.479,3337,4.479,3338,4.479,3339,6.203,3340,6.203,3341,6.203]],["title/components/TextAreaInputComponent.html",[286,0.226,422,1.079]],["body/components/TextAreaInputComponent.html",[3,0.107,4,0.062,5,0.062,24,0.07,26,0.007,28,0.908,42,0.496,46,0.592,62,0.062,63,0.617,82,0.005,83,0.005,93,1.619,104,1.6,151,0.83,173,1.661,286,0.36,287,1.118,288,1.382,289,1.139,290,1.139,291,1.488,293,1.139,294,1.954,295,1.954,296,0.947,300,1.118,301,1.283,303,1.307,310,1.139,311,1.544,312,1.544,313,1.139,314,1.776,315,1.139,316,1.118,317,2.285,318,1.118,319,1.789,320,1.139,321,1.118,322,1.139,323,1.139,324,2.157,325,1.118,326,1.078,327,1.118,328,1.098,329,1.118,330,1.139,331,1.118,332,1.118,333,1.544,334,1.098,335,1.51,336,1.118,337,1.589,338,0.982,339,1.098,340,1.751,341,1.692,342,1.879,343,1.118,344,1.139,345,1.139,346,1.118,347,1.139,348,1.118,349,1.544,350,1.118,351,1.544,352,1.098,353,1.259,354,1.544,355,1.118,356,1.139,357,1.139,358,1.139,359,1.118,360,1.139,361,1.118,362,1.139,363,1.118,364,1.139,365,1.118,366,1.098,367,1.118,368,1.098,369,1.098,370,1.078,371,1.139,372,1.118,373,1.515,374,1.118,375,1.098,376,1.078,377,1.139,378,1.118,379,1.078,380,1.139,381,1.118,382,1.058,383,1.019,384,1.078,385,1.038,386,1.019,387,1.098,388,1.078,389,1.626,390,1.751,391,1.098,392,1.078,393,1.098,394,1.058,395,1.46,396,1.038,397,1.139,398,1.058,399,1.118,400,1.139,401,1.118,402,1.038,403,1.118,404,1.139,405,1.118,406,1.139,407,1.544,408,1.118,409,1.118,410,1.139,411,1.139,412,1.118,413,1.515,414,1.139,415,1.118,416,1.139,417,1.118,418,1.118,419,1.139,420,1.118,421,1.139,422,1.843,423,2.105,424,2.133,425,1.098,426,1.118,427,1.118,428,1.139,429,1.019,430,0.964,431,1.139,432,1.078,433,1.098,434,1.098,435,1.098,436,1.098,437,1.118,438,1.139,439,1.098,440,1.078,441,1.118,442,1.098,443,1.098,444,1.139,445,1.139,448,2.983,452,2.141,457,3.743,458,3.743,986,2.227,3342,4.264]],["title/components/TextInputComponent.html",[286,0.226,425,1.059]],["body/components/TextInputComponent.html",[3,0.09,4,0.04,5,0.04,10,0.064,14,0.858,20,0.427,22,1.447,24,0.135,25,1.438,26,0.007,28,1.018,29,0.647,32,1.364,38,1.521,39,1.33,42,0.831,46,0.377,62,0.04,63,0.393,66,1.065,68,1.318,71,0.891,82,0.003,83,0.003,93,1.492,100,1.438,104,1.337,151,0.987,173,1.388,249,3.068,272,2.58,286,0.279,287,0.712,288,0.996,289,0.725,290,0.725,291,1.073,293,0.725,294,1.916,295,1.916,296,0.925,300,0.712,301,0.925,303,0.942,306,1.117,310,0.725,311,1.113,312,1.113,313,0.725,314,1.438,315,0.725,316,0.712,317,2.177,318,0.712,319,1.495,320,0.725,321,0.712,322,0.725,323,0.725,324,1.946,325,0.712,326,0.686,327,0.712,328,0.699,329,0.712,330,0.725,331,0.712,332,1.769,333,1.113,334,0.699,335,1.168,336,0.712,337,1.287,338,0.625,339,0.699,340,1.355,341,1.414,342,1.607,343,0.712,344,0.725,345,0.725,346,0.712,347,0.725,348,0.712,349,1.113,350,0.712,351,1.113,352,0.699,353,0.908,354,1.113,355,0.712,356,0.725,357,0.725,358,0.725,359,0.712,360,0.725,361,0.712,362,0.725,363,0.712,364,0.725,365,0.712,366,0.699,367,0.712,368,0.699,369,0.699,370,0.686,371,0.725,372,0.712,373,1.093,374,0.712,375,0.699,376,0.686,377,0.725,378,0.712,379,0.686,380,0.725,381,0.712,382,0.673,383,0.649,384,0.686,385,0.661,386,0.649,387,0.699,388,0.686,389,1.258,390,1.355,391,0.699,392,0.686,393,0.699,394,0.673,395,1.053,396,0.661,397,0.725,398,0.673,399,0.712,400,0.725,401,0.712,402,0.661,403,0.712,404,0.725,405,0.712,406,0.725,407,1.113,408,0.712,409,0.712,410,0.725,411,0.725,412,0.712,413,1.093,414,0.725,415,0.712,416,0.725,417,0.712,418,0.712,419,0.725,420,0.712,421,0.725,422,0.712,423,2.009,424,0.725,425,1.464,426,0.712,427,0.712,428,0.725,429,0.649,430,0.614,431,0.725,432,0.686,433,0.699,434,0.699,435,0.699,436,0.699,437,0.712,438,0.725,439,0.699,440,0.686,441,0.712,442,0.699,443,0.699,444,0.725,445,0.725,448,1.899,449,1.714,450,2.133,451,3.285,452,2.961,455,3.409,456,2.18,457,2.699,458,2.699,460,2.801,461,1.984,463,4.155,464,1.966,465,2.8,466,3.409,467,3.206,469,2.12,470,1.879,472,2.161,478,2.606,479,3.558,480,2.714,481,1.825,482,2.111,483,2.49,485,2.323,487,2.323,488,1.942,494,0.966,496,2.078,502,3.043,503,1.982,504,3.043,505,1.982,506,3.043,507,1.982,514,3.704,515,4.09,516,3.704,531,1.899,532,1.899,533,2.189,653,2.12,654,1.804,710,0.966,752,3.911,807,4.652,808,3.36,809,3.36,810,2.8,811,5.071,812,3.882,813,4.731,814,6.188,815,4.652,818,3.565,819,5.689,822,3.441,831,3.565,832,5.224,834,2.078,835,3.36,838,2.49,840,2.49,842,4.155,845,2.323,846,2.323,847,2.323,850,3.189,851,2.323,852,1.499,853,1.457,854,1.457,856,4.652,857,2.49,858,2.49,859,2.49,860,2.49,861,2.49,863,2.49,870,2.323,873,2.189,986,4.287,2488,3.565,2537,5.163,2659,2.714,2660,2.714,2662,2.714,2664,2.714,2667,2.714,2668,2.714,2669,2.714,2671,2.714,2756,2.714,3342,8.207,3343,6.402,3344,4.689,3345,5.707,3346,5.707,3347,5.707,3348,5.707,3349,3.054,3350,3.054,3351,3.054,3352,3.054,3353,3.054,3354,3.054,3355,3.054,3356,3.054,3357,3.054,3358,4.689,3359,5.707,3360,3.054,3361,3.054,3362,3.054,3363,3.054,3364,3.054,3365,4.689,3366,4.689,3367,4.689]],["title/interfaces/ThemePreset.html",[84,0.039,637,3.149]],["body/interfaces/ThemePreset.html",[3,0.082,4,0.082,5,0.082,10,0.132,11,0.309,20,0.533,24,0.128,26,0.007,28,1.225,29,0.948,62,0.082,82,0.006,83,0.006,84,0.075,86,1.05,101,0.794,286,0.379,288,1.863,597,5.966,598,4.518,599,4.518,600,5.56,602,4.671,604,5.966,605,6.454,606,6.024,607,4.518,608,4.518,609,4.518,610,4.518,611,5.966,612,4.518,613,4.518,614,4.518,615,4.518,616,4.518,617,6.024,618,4.518,619,4.518,620,4.518,621,4.518,622,4.288,623,4.518,624,4.518,625,4.518,626,4.288,627,4.518,628,5.966,629,4.518,630,4.288,631,4.288,632,4.518,633,4.518,634,4.518,635,4.518,636,4.288,637,5.278,638,6.286]],["title/components/TimePickerInput.html",[286,0.226,426,1.079]],["body/components/TimePickerInput.html",[3,0.082,4,0.033,5,0.033,10,0.053,11,0.161,12,1.632,14,0.743,20,0.276,22,1.417,24,0.121,25,1.59,26,0.007,28,1.059,29,0.715,32,1.452,38,1.397,39,1.29,42,0.804,46,0.313,52,0.908,57,0.97,62,0.033,63,0.327,66,1.258,68,1.14,71,1.1,82,0.003,83,0.003,93,1.184,100,1.138,101,1.131,104,1.225,151,0.439,173,1.271,183,2.313,249,3.11,286,0.283,287,0.592,288,0.862,289,0.603,290,0.603,291,0.928,293,0.603,294,1.896,295,1.896,296,0.8,298,2.485,300,0.592,301,0.8,303,0.815,306,0.928,310,0.603,311,0.963,312,0.963,313,0.603,314,1.299,315,0.603,316,0.592,317,2.12,318,0.592,319,1.369,320,0.603,321,0.592,322,0.603,323,0.603,324,1.846,325,0.592,326,0.57,327,0.592,328,0.581,329,0.592,330,0.603,331,0.592,332,0.592,333,2.282,334,0.581,335,1.037,336,0.592,337,1.163,338,0.52,339,0.581,340,1.203,341,1.741,342,1.487,343,0.592,344,0.603,345,0.603,346,0.592,347,0.603,348,0.592,349,0.963,350,0.592,351,0.963,352,0.581,353,0.785,354,0.963,355,0.592,356,0.603,357,0.603,358,0.603,359,0.592,360,0.603,361,0.592,362,0.603,363,0.592,364,0.603,365,0.592,366,0.581,367,0.592,368,0.581,369,0.581,370,0.57,371,0.603,372,0.592,373,0.945,374,0.592,375,0.581,376,0.57,377,0.603,378,0.592,379,0.57,380,0.603,381,0.592,382,0.56,383,0.539,384,0.57,385,0.549,386,0.539,387,0.581,388,0.57,389,1.117,390,1.203,391,0.581,392,0.57,393,0.581,394,0.56,395,0.911,396,0.878,397,0.603,398,0.56,399,0.592,400,0.603,401,0.592,402,0.549,403,0.592,404,0.603,405,0.592,406,0.603,407,0.963,408,0.592,409,0.592,410,0.603,411,0.603,412,0.592,413,0.945,414,0.603,415,0.592,416,0.603,417,0.592,418,0.592,419,0.603,420,0.592,421,0.603,422,0.592,423,0.963,424,0.603,425,0.581,426,1.348,427,0.592,428,0.603,429,0.539,430,0.51,431,0.603,432,0.57,433,0.581,434,0.581,435,0.581,436,0.581,437,0.592,438,0.603,439,0.581,440,0.57,441,0.592,442,0.581,443,0.581,444,0.603,445,0.603,449,1.483,450,1.893,451,2.916,452,2.661,456,1.935,457,2.335,458,2.335,460,2.423,461,1.793,463,3.755,464,2.124,465,4.028,466,3.779,467,2.936,469,1.834,470,2.849,472,2.322,478,2.254,479,3.215,481,2.423,482,2.149,488,2.186,494,0.802,496,1.727,502,2.632,503,1.647,504,2.632,505,1.647,506,4.92,507,1.647,514,3.287,515,3.63,516,3.287,531,1.578,532,1.578,533,1.819,651,3.149,653,1.834,654,1.601,668,2.549,710,0.802,752,3.617,806,2.256,808,2.907,809,2.907,813,4.377,814,5.156,815,4.129,816,2.256,817,2.256,820,2.256,825,2.256,826,2.256,827,2.256,828,2.256,832,3.63,835,2.907,838,2.069,839,2.256,840,2.069,843,1.647,844,1.93,848,3.084,849,2.069,850,2.759,851,1.93,852,1.245,853,1.211,854,1.211,856,4.129,857,2.069,858,2.069,859,2.069,860,2.069,861,2.069,863,2.069,866,1.819,868,3.084,869,2.069,870,1.93,873,1.819,883,2.686,918,1.93,943,1.93,948,2.686,996,1.178,1003,1.178,1004,1.178,1006,1.178,1007,1.211,1021,3.604,1259,2.907,1261,1.647,1280,7.692,1446,2.069,2046,1.727,2072,3.026,2076,1.647,2093,2.112,2296,1.819,2428,8.043,2507,5.62,2511,2.069,2557,1.93,2559,2.256,2713,3.604,2715,2.256,2887,1.93,3368,9.052,3369,5.066,3370,5.066,3371,5.066,3372,5.141,3373,5.066,3374,6.325,3375,5.066,3376,7.079,3377,5.066,3378,5.786,3379,5.066,3380,2.538,3381,4.056,3382,8.657,3383,2.538,3384,2.538,3385,2.538,3386,4.056,3387,2.538,3388,2.538,3389,2.538,3390,2.538,3391,4.056,3392,2.538,3393,2.538,3394,2.538,3395,2.538,3396,2.538,3397,2.538,3398,2.538,3399,2.538,3400,6.744,3401,2.538,3402,2.538,3403,2.538,3404,2.538,3405,2.256,3406,2.538,3407,2.538,3408,2.538,3409,2.538,3410,2.538,3411,2.538,3412,2.256,3413,2.538,3414,2.538,3415,2.538,3416,2.538,3417,2.538,3418,2.538,3419,4.056,3420,4.056,3421,2.538,3422,2.538,3423,2.538,3424,2.538,3425,2.538,3426,2.538,3427,2.538,3428,2.538,3429,2.538,3430,2.538,3431,2.538,3432,6.181,3433,2.538,3434,2.538,3435,2.538,3436,2.538,3437,2.538,3438,2.538,3439,2.538,3440,2.538,3441,4.056,3442,2.538,3443,2.538,3444,2.538,3445,2.538,3446,4.056,3447,2.538,3448,2.538,3449,2.538,3450,4.056,3451,4.056,3452,2.538,3453,5.066,3454,2.538,3455,2.538,3456,2.538,3457,2.538,3458,4.056,3459,4.056,3460,2.538,3461,2.538]],["title/injectables/ToastService.html",[0,1.206,526,1.493]],["body/injectables/ToastService.html",[0,2.024,2,2.524,3,0.114,4,0.082,5,0.082,10,0.133,11,0.309,12,1.598,14,1.422,20,0.532,22,1.379,24,0.123,25,1.889,26,0.007,28,1.174,29,0.85,32,1.511,38,1.134,39,0.992,42,0.803,45,1.471,46,0.779,52,3.009,60,2.584,61,2.524,62,0.082,63,0.812,67,4.012,82,0.006,83,0.006,129,4.146,482,2.072,526,2.505,2055,2.93,2312,5.458,3462,9.009,3463,6.312,3464,8.775,3465,7.765,3466,9.608,3467,6.312,3468,7.765,3469,6.312,3470,7.765,3471,6.312,3472,7.765,3473,6.312,3474,8.41,3475,8.41]],["title/interfaces/TravelTime.html",[84,0.039,3476,3.774]],["body/interfaces/TravelTime.html",[3,0.086,4,0.086,5,0.086,10,0.139,11,0.318,20,0.52,24,0.138,26,0.007,29,0.969,62,0.086,82,0.006,83,0.006,84,0.055,86,1.104,97,4.142,100,1.93,101,1.218,1601,6.07,1603,6.07,1790,4.379,1792,5.331,2093,4.833,3476,7.566,3477,6.631,3478,6.631,3479,8.924,3480,8.924]],["title/injectables/TravelTimeManagementService.html",[0,1.206,3481,4.114]],["body/injectables/TravelTimeManagementService.html",[0,1.437,1,1.629,2,1.516,3,0.049,4,0.049,5,0.049,7,1.671,8,1.671,9,1.975,10,0.08,11,0.219,12,1.502,14,1.009,15,3.781,16,2.113,20,0.207,22,1.313,24,0.115,25,1.774,26,0.007,28,1.103,29,0.798,31,4.493,32,1.42,33,2.589,35,4.113,37,2.718,38,0.99,39,0.866,42,0.881,45,0.884,46,0.468,47,1.199,48,1.274,49,1.852,58,1.76,59,1.861,60,1.552,61,1.516,62,0.049,63,0.488,66,1.653,71,1.755,73,1.841,82,0.004,83,0.004,101,1.238,106,2.936,107,3.014,146,2.492,148,2.559,150,1.629,151,0.656,152,1.671,153,1.671,154,1.714,155,1.671,156,1.108,159,1.714,160,1.714,164,4.071,165,2.038,166,2.038,176,3.807,178,3.769,179,3.667,180,3.572,183,1.301,184,3.419,185,3.877,188,3.807,189,3.667,190,3.877,341,1.941,1417,2.883,1546,2.883,1551,2.718,1601,6.523,1603,6.523,1790,4.629,2093,4.615,3322,4.898,3324,3.37,3476,7.292,3481,4.898,3482,8.516,3483,8.516,3484,6.494,3485,6.494,3486,6.494,3487,6.494,3488,6.494,3489,6.494,3490,3.792,3491,3.792,3492,3.792,3493,3.792,3494,6.494,3495,3.792,3496,3.792,3497,3.792,3498,3.792,3499,3.792,3500,3.792,3501,3.792,3502,3.792,3503,5.512,3504,3.792,3505,3.792,3506,3.792,3507,8.651,3508,5.512,3509,7.129,3510,7.129,3511,3.792,3512,3.792,3513,3.792,3514,3.792,3515,3.792,3516,3.792]],["title/interfaces/TreeTableChangedData.html",[84,0.039,2040,2.766]],["body/interfaces/TreeTableChangedData.html",[3,0.058,4,0.058,5,0.058,10,0.094,11,0.246,12,1.351,20,0.455,24,0.09,26,0.007,29,0.626,42,0.884,46,0.552,62,0.08,63,0.575,66,1.156,68,2.158,71,1.814,82,0.005,83,0.005,84,0.052,86,0.745,100,1.724,286,0.303,291,1.756,294,0.882,295,0.882,296,0.882,301,0.882,303,0.899,306,1.635,328,1.023,398,0.986,429,0.95,430,1.62,449,1.635,450,2.315,451,3.566,452,3.028,455,3.702,461,1.386,470,2.039,472,2.519,478,2.485,479,3.443,482,1.986,488,2.267,494,1.413,499,2.902,602,3.951,654,1.413,685,3.204,708,2.671,710,1.413,752,2.955,842,4.614,987,1.97,997,3.204,998,2.404,1742,4.484,2017,3.566,2022,2.671,2033,4.64,2040,3.702,2051,4.248,2054,2.574,2055,2.075,2057,2.78,2065,4.418,2070,4.923,2072,4.816,2077,3.041,2209,2.574,2395,3.204,2479,3.4,2537,4.836,2541,3.4,2776,3.204,2841,3.645,2842,3.645,2843,5.796,2844,5.051,2845,3.645,2846,3.645,2847,3.645,2848,3.645,2849,3.645,2850,3.645,2851,3.645,2852,3.645,2853,3.645,2854,3.645,2855,3.645,2856,3.645,2857,3.204,2858,3.645,2859,3.645,2860,3.645,2861,3.645,2862,3.645,2863,3.645,2864,3.645,2865,3.645,2866,5.051,2867,5.051,2868,5.051,2869,5.051,2870,5.051,2871,3.645,2872,3.645,2873,5.051,2874,3.645,2875,3.645,2876,3.645,2877,3.645,2878,5.051,2879,3.645,2880,5.051,2881,3.645,2882,5.051,2883,3.645,2884,5.051,2885,3.645,2886,5.051,2887,5.406,2888,6.572,2889,3.645,2890,3.645,2891,3.645,2892,3.645,2893,3.645,2894,5.406,2895,5.051,2896,3.645,2897,5.796,2898,5.796,2899,3.645,2900,5.051,2901,3.645,2902,3.645,2903,3.645,2904,3.645,2905,3.645,2906,3.645,2907,3.645,2908,3.645,2909,3.645,2910,3.645,2911,5.051,2912,3.645,2913,3.645,2914,3.645,2915,3.645,2916,3.645,2917,3.645,2918,3.645,2919,3.645,2920,3.645,2921,5.051,2922,5.051,2923,3.645,2924,5.796,2925,3.645,2926,5.051,2927,3.645,2928,5.051,2929,5.051,2930,5.051]],["title/components/TreeTableCheckboxComponent.html",[286,0.226,429,0.983]],["body/components/TreeTableCheckboxComponent.html",[3,0.082,4,0.033,5,0.033,10,0.16,11,0.162,12,1.512,14,0.746,20,0.476,22,1.435,24,0.131,25,1.519,26,0.007,28,1.029,29,0.683,32,1.365,38,1.53,39,1.339,42,0.734,46,0.315,62,0.053,63,0.329,66,0.76,68,1.784,71,1.69,82,0.003,83,0.003,84,0.034,93,1.189,100,1.594,101,0.322,104,1.229,151,0.442,173,1.275,183,1.398,286,0.249,287,0.595,288,0.866,289,0.606,290,0.606,291,1.82,293,0.606,294,1.897,295,1.897,296,0.804,300,0.595,301,0.804,303,0.819,306,0.934,310,0.606,311,0.968,312,0.968,313,0.606,314,1.304,315,0.606,316,0.595,317,2.122,318,0.595,319,1.373,320,0.606,321,0.595,322,0.606,323,0.606,324,1.849,325,0.595,326,0.574,327,0.595,328,1.164,329,0.595,330,0.606,331,0.595,332,0.595,333,0.968,334,0.584,335,1.041,336,0.595,337,1.167,338,0.523,339,0.584,340,1.208,341,1.299,342,1.491,343,0.595,344,0.606,345,0.606,346,0.595,347,0.606,348,0.595,349,0.968,350,0.595,351,0.968,352,0.584,353,0.789,354,0.968,355,0.595,356,0.606,357,0.606,358,0.606,359,0.595,360,0.606,361,0.595,362,0.606,363,0.595,364,0.606,365,0.595,366,0.584,367,0.595,368,0.584,369,0.584,370,0.574,371,0.606,372,0.595,373,0.95,374,0.595,375,0.584,376,0.574,377,0.606,378,0.595,379,0.574,380,0.606,381,0.595,382,0.563,383,0.543,384,0.574,385,0.553,386,0.543,387,0.584,388,0.574,389,1.121,390,1.208,391,0.584,392,0.574,393,0.584,394,0.563,395,0.915,396,0.553,397,0.606,398,1.121,399,0.595,400,0.606,401,0.595,402,0.553,403,0.595,404,0.606,405,0.595,406,0.606,407,0.968,408,0.595,409,0.595,410,0.606,411,0.606,412,0.595,413,0.95,414,0.606,415,0.595,416,0.606,417,0.595,418,0.595,419,0.606,420,0.595,421,0.606,422,0.595,423,0.968,424,0.606,425,0.584,426,0.595,427,0.595,428,0.606,429,1.234,430,1.939,431,0.606,432,0.574,433,0.584,434,0.584,435,0.584,436,0.584,437,0.595,438,0.606,439,0.584,440,0.574,441,0.595,442,0.584,443,0.584,444,0.606,445,0.606,449,1.49,450,1.901,451,2.928,452,2.706,455,3.039,460,2.435,461,1.799,464,1.709,470,1.674,472,2.298,478,2.266,479,3.227,481,1.526,482,1.995,488,1.995,494,0.808,499,1.658,602,2.827,654,1.289,685,2.921,688,1.588,708,1.526,710,0.808,752,1.945,842,3.301,987,1.125,997,1.831,998,1.373,1513,2.123,1516,3.893,1742,3.636,2017,2.928,2022,1.526,2033,4.661,2040,1.526,2051,4.24,2054,1.47,2055,1.186,2057,5.692,2065,3.342,2070,3.342,2072,2.435,2077,1.737,2209,2.928,2329,4.415,2330,3.1,2395,4.547,2479,3.868,2488,3.1,2537,4.316,2541,1.942,2772,3.323,2776,1.831,2841,7.464,2842,2.082,2843,4.147,2844,4.147,2845,3.323,2846,3.323,2847,2.082,2848,3.323,2849,4.147,2850,4.147,2851,4.147,2852,5.172,2853,4.147,2854,4.147,2855,4.147,2856,4.147,2857,2.921,2858,4.147,2859,3.323,2860,4.147,2861,4.147,2862,4.147,2863,4.147,2864,4.147,2865,4.147,2866,3.323,2867,3.323,2868,3.323,2869,3.323,2870,3.323,2871,2.082,2872,3.323,2873,3.323,2874,2.082,2875,2.082,2876,2.082,2877,2.082,2878,3.323,2879,2.082,2880,3.323,2881,2.082,2882,3.323,2883,2.082,2884,3.323,2885,2.082,2886,3.323,2887,3.868,2888,5.513,2889,2.082,2890,2.082,2891,2.082,2892,2.082,2893,3.323,2894,4.825,2895,3.323,2896,2.082,2897,4.147,2898,4.147,2899,2.082,2900,3.323,2901,2.082,2902,2.082,2903,2.082,2904,3.323,2905,3.323,2906,2.082,2907,2.082,2908,2.082,2909,2.082,2910,3.323,2911,3.323,2912,2.082,2913,2.082,2914,4.733,2915,2.082,2916,2.082,2917,3.323,2918,2.082,2919,2.082,2920,2.082,2921,3.323,2922,3.323,2923,2.082,2924,4.147,2925,2.082,2926,3.323,2927,2.082,2928,3.323,2929,3.323,2930,3.323,3517,4.077,3518,4.077,3519,4.077,3520,5.087,3521,4.077,3522,4.077,3523,2.554,3524,2.554,3525,2.554,3526,2.554,3527,2.554,3528,2.554,3529,2.554,3530,2.554,3531,2.554,3532,2.554,3533,2.554,3534,2.554,3535,2.554,3536,2.554,3537,2.554,3538,2.554,3539,2.554,3540,2.554,3541,2.554,3542,2.554,3543,2.554,3544,2.554,3545,2.554,3546,2.554,3547,2.554,3548,2.554,3549,2.554,3550,2.554,3551,2.554,3552,5.806,3553,4.077]],["title/components/TruckAndDriverInformationFormComponent.html",[286,0.226,432,1.04]],["body/components/TruckAndDriverInformationFormComponent.html",[3,0.089,4,0.039,5,0.039,10,0.144,11,0.185,12,1.604,14,0.85,16,1.296,20,0.164,22,1.327,24,0.114,26,0.007,28,0.649,29,0.733,32,0.835,33,1.357,38,1.358,39,1.403,42,0.86,45,0.703,46,0.372,62,0.039,63,0.388,66,1.057,71,1.076,73,1.32,82,0.003,83,0.003,84,0.025,93,1.302,104,1.33,129,3.759,151,0.522,156,0.882,173,1.38,176,2.434,188,2.434,286,0.277,287,0.703,288,0.987,289,0.716,290,0.716,291,1.063,293,0.716,294,1.915,295,1.915,296,0.916,300,0.703,301,0.916,303,0.934,310,0.716,311,1.103,312,1.103,313,0.716,314,1.428,315,0.716,316,0.703,317,2.173,318,0.703,319,1.486,320,0.716,321,0.703,322,0.716,323,0.716,324,1.94,325,0.703,326,0.678,327,0.703,328,0.69,329,0.703,330,0.716,331,0.703,332,0.703,333,1.103,334,0.69,335,1.953,336,0.703,337,1.824,338,0.618,339,0.69,340,1.345,341,1.406,342,1.599,343,0.703,344,0.716,345,0.716,346,0.703,347,0.716,348,0.703,349,1.103,350,0.703,351,1.103,352,1.455,353,1.232,354,1.103,355,0.703,356,0.716,357,0.716,358,0.716,359,0.703,360,0.716,361,0.703,362,0.716,363,0.703,364,0.716,365,0.703,366,0.69,367,0.703,368,0.69,369,0.69,370,0.678,371,0.716,372,0.703,373,1.083,374,0.703,375,0.69,376,0.678,377,0.716,378,0.703,379,0.678,380,0.716,381,0.703,382,0.665,383,0.641,384,0.678,385,0.653,386,0.641,387,0.69,388,0.678,389,1.249,390,1.345,391,0.69,392,0.678,393,0.69,394,0.665,395,1.043,396,0.653,397,0.716,398,0.665,399,0.703,400,0.716,401,0.703,402,0.653,403,0.703,404,0.716,405,0.703,406,0.716,407,1.103,408,0.703,409,0.703,410,0.716,411,0.716,412,0.703,413,1.083,414,0.716,415,0.703,416,0.716,417,0.703,418,0.703,419,0.716,420,0.703,421,0.716,422,0.703,423,1.103,424,0.716,425,0.69,426,0.703,427,0.703,428,0.716,429,0.641,430,0.606,431,0.716,432,1.428,433,2.155,434,0.69,435,0.69,436,0.69,437,0.703,438,0.716,439,0.69,440,0.678,441,0.703,442,0.69,443,0.69,444,0.716,445,0.716,449,1.698,450,2.116,452,1.529,461,1.971,464,1.948,482,0.743,499,1.958,525,1.903,526,0.973,536,1.035,537,1.035,702,1.698,874,6.499,877,1.153,881,1.815,882,1.815,926,3.384,929,5.186,954,3.16,957,1.803,988,1.803,989,3.521,990,1.876,991,2.497,992,2.1,1123,4.607,1231,2.681,1235,2.162,1236,2.681,1237,2.162,1255,1.571,1256,1.622,1257,1.622,1268,3.045,1323,4.194,1390,2.162,1391,2.162,1396,4.059,1399,2.052,1516,3.661,1615,4.327,1640,2.162,1645,2.162,1646,2.162,1786,1.876,1815,3.329,1817,2.052,1820,3.16,1821,1.622,1822,1.958,1823,2.052,1824,1.876,1885,4.837,2093,2.419,2144,2.46,2146,2.46,2362,2.681,3167,6.499,3230,6.524,3554,5.033,3555,5.033,3556,6.103,3557,6.103,3558,5.033,3559,5.033,3560,5.652,3561,6.161,3562,2.681,3563,2.681,3564,5.033,3565,2.681,3566,2.681,3567,2.681,3568,2.681,3569,2.681,3570,2.681,3571,2.681,3572,2.681,3573,4.128,3574,2.681,3575,2.681,3576,2.681,3577,2.681,3578,4.128,3579,2.681,3580,2.681,3581,2.681,3582,2.681,3583,2.681,3584,2.681,3585,2.681,3586,2.681,3587,2.681,3588,2.681,3589,2.681,3590,2.681,3591,2.681,3592,2.681,3593,2.681,3594,4.645,3595,4.645,3596,4.645,3597,6.361,3598,6.361]],["title/interfaces/TruckComposedInfo.html",[84,0.039,1114,3.52]],["body/interfaces/TruckComposedInfo.html",[3,0.088,4,0.088,5,0.088,10,0.142,11,0.322,20,0.472,24,0.131,26,0.007,29,0.942,42,0.896,62,0.105,82,0.006,83,0.006,84,0.067,86,1.127,101,1.021,335,1.386,337,1.874,338,1.881,926,5.368,991,3.638,992,3.059,1067,4.85,1086,3.638,1098,4.85,1114,6.16,1118,6.112,1123,5.172,1139,5.146,1182,6.832,1187,4.214,1350,4.392,1790,3.321,3599,5.146,3600,5.517,3601,5.517]],["title/interfaces/TruckDriverInfo.html",[84,0.039,926,2.766]],["body/interfaces/TruckDriverInfo.html",[3,0.087,4,0.087,5,0.087,10,0.14,11,0.319,20,0.537,24,0.138,26,0.007,29,0.983,62,0.087,82,0.006,83,0.006,84,0.055,86,1.111,101,1.086,335,1.366,337,1.341,900,6.409,904,6.8,907,6.083,926,4.799,991,3.587,1067,4.782,1094,7.947,1098,6.409,1103,5.804,1156,7.947,1160,7.947,1350,4.331]],["title/interfaces/TruckInfo.html",[84,0.039,1123,2.665]],["body/interfaces/TruckInfo.html",[3,0.087,4,0.087,5,0.087,10,0.141,11,0.32,20,0.52,24,0.133,26,0.007,29,0.958,42,0.892,62,0.105,82,0.006,83,0.006,84,0.067,86,1.114,101,1.172,335,1.37,337,1.734,338,1.766,926,4.806,991,3.596,992,3.024,1067,4.794,1086,4.812,1098,6.414,1114,5.087,1118,4.55,1123,4.966,1139,5.087,1182,5.087,1187,3.943,1350,4.342,1790,4.392,3599,5.087,3600,7.297,3601,7.297]],["title/components/TruckInfoFormComponent.html",[286,0.226,434,1.059]],["body/components/TruckInfoFormComponent.html",[3,0.126,4,0.033,5,0.033,10,0.053,11,0.161,12,1.645,14,0.741,16,1.778,20,0.344,22,1.438,24,0.11,25,1.298,26,0.007,28,0.941,29,0.584,32,1.396,33,1.969,38,1.426,39,1.27,42,0.86,45,0.59,46,0.313,47,1.827,48,0.851,49,0.851,57,0.968,62,0.033,63,0.326,66,1.586,68,0.712,70,2.121,71,0.962,72,1.982,73,1.473,82,0.003,83,0.003,93,1.183,100,0.909,104,1.224,151,0.438,156,0.74,173,1.27,191,1.013,286,0.247,287,0.59,288,0.86,289,0.601,290,0.601,291,0.926,293,0.601,294,1.896,295,1.896,296,0.799,300,0.59,301,0.799,303,0.814,310,0.601,311,0.961,312,0.961,313,0.601,314,1.298,315,0.601,316,0.59,317,2.12,318,0.59,319,1.367,320,0.601,321,0.59,322,0.601,323,0.601,324,1.845,325,0.59,326,0.569,327,0.59,328,0.58,329,0.59,330,0.601,331,0.59,332,0.59,333,0.961,334,0.58,335,1.894,336,0.59,337,1.691,338,0.519,339,0.58,340,1.201,341,1.294,342,1.485,343,0.59,344,0.601,345,0.601,346,0.59,347,0.601,348,0.59,349,0.961,350,0.59,351,0.961,352,0.58,353,1.224,354,0.961,355,0.59,356,0.601,357,0.601,358,0.601,359,0.59,360,0.601,361,0.59,362,0.601,363,0.59,364,0.601,365,0.59,366,0.58,367,0.59,368,0.58,369,0.58,370,0.569,371,0.601,372,0.59,373,0.944,374,0.59,375,0.58,376,0.569,377,0.601,378,0.59,379,0.569,380,0.601,381,0.59,382,0.558,383,0.538,384,0.569,385,0.548,386,0.538,387,0.58,388,0.569,389,1.115,390,1.201,391,0.58,392,0.569,393,0.58,394,0.558,395,0.909,396,0.548,397,0.601,398,1.274,399,0.59,400,0.601,401,0.59,402,0.548,403,0.59,404,0.601,405,0.59,406,0.601,407,0.961,408,0.59,409,0.59,410,0.601,411,0.601,412,0.59,413,0.944,414,0.601,415,0.59,416,0.601,417,0.59,418,0.59,419,0.601,420,0.59,421,0.601,422,0.59,423,0.961,424,0.601,425,1.322,426,0.59,427,0.59,428,0.601,429,0.538,430,0.509,431,0.601,432,0.569,433,0.58,434,1.322,435,0.58,436,0.58,437,0.59,438,0.601,439,0.58,440,0.569,441,0.59,442,0.58,443,0.58,444,0.601,445,0.601,456,1.933,461,1.791,465,1.243,469,1.831,470,2.825,472,1.396,482,1.811,488,1.139,494,0.801,525,1.7,526,0.817,536,0.869,537,0.869,543,1.243,654,1.599,668,2.546,702,1.481,710,0.801,752,3.374,807,4.124,810,2.482,845,1.926,846,1.926,847,1.926,852,1.243,853,1.208,854,1.208,874,6.977,875,6.977,877,0.968,881,1.583,882,1.583,883,2.348,886,2.287,888,2.023,889,2.258,890,3.283,893,2.628,906,5.99,919,2.755,934,2.251,942,2.251,946,2.628,948,2.348,951,1.644,952,4.226,953,1.644,954,2.755,956,1.88,957,1.514,961,1.658,962,1.723,963,1.644,964,1.723,979,2.251,983,1.145,986,1.176,987,1.784,988,1.514,989,3.145,990,1.575,991,2.177,992,1.831,993,1.037,994,1.013,995,1.037,996,1.176,997,1.816,998,1.362,1003,1.176,1004,1.176,1005,1.176,1006,1.176,1007,1.208,1008,2.423,1010,3.128,1018,4.394,1020,2.229,1027,3.022,1030,2.071,1031,2.121,1032,1.644,1036,1.28,1056,1.408,1057,1.575,1084,2.065,1086,3.803,1098,1.816,1123,3.879,1124,5.124,1125,5.379,1244,1.926,1245,2.065,1258,1.644,1264,4.495,1318,5.988,1321,5.493,1323,3.622,1324,6.286,1374,1.723,1662,2.251,1664,2.251,1666,2.065,1790,1.243,1817,1.723,2037,2.251,2138,2.251,2361,2.065,3167,7.307,3600,2.065,3601,2.065,3602,5.059,3603,4.495,3604,5.059,3605,5.059,3606,5.779,3607,5.779,3608,5.779,3609,5.779,3610,4.05,3611,4.05,3612,4.05,3613,6.319,3614,2.533,3615,2.533,3616,2.533,3617,4.05,3618,2.533,3619,4.05,3620,2.533,3621,4.05,3622,2.251,3623,3.599,3624,3.301,3625,4.05,3626,4.05,3627,1.926,3628,4.05,3629,4.05,3630,4.05,3631,2.533,3632,2.533,3633,2.533,3634,2.533,3635,2.533,3636,2.533,3637,2.533,3638,2.533,3639,2.533,3640,2.533,3641,2.533,3642,2.533,3643,2.533,3644,2.533,3645,2.533,3646,2.533,3647,2.533,3648,4.05,3649,2.533,3650,2.533,3651,4.05,3652,2.251,3653,2.251,3654,2.251,3655,2.533,3656,2.533,3657,2.251,3658,2.533,3659,2.533,3660,2.533,3661,2.533,3662,2.533,3663,2.533,3664,2.533,3665,2.251,3666,2.533,3667,2.533,3668,2.533,3669,2.533,3670,2.533,3671,2.533,3672,2.533,3673,2.533,3674,2.533]],["title/interfaces/TruckNativenessInfo.html",[84,0.039,1124,3.52]],["body/interfaces/TruckNativenessInfo.html",[3,0.093,4,0.093,5,0.093,10,0.151,11,0.333,20,0.515,24,0.129,26,0.007,29,0.925,62,0.093,82,0.006,83,0.006,84,0.06,86,1.195,101,1.119,337,1.442,991,3.857,1067,5.142,1084,7.466,1124,6.376,1125,5.456,1350,4.657,3665,8.138,3675,9.158]],["title/interfaces/Turn.html",[84,0.039,1187,2.04]],["body/interfaces/Turn.html",[3,0.084,4,0.084,5,0.084,10,0.135,11,0.312,20,0.539,24,0.14,26,0.007,29,0.991,62,0.084,82,0.006,83,0.006,84,0.053,86,1.07,101,1.068,1110,6.006,1118,6.006,1187,3.459,1190,7.198,1192,7.198,1195,7.198,1197,7.198,1199,6.714,1201,7.198,1203,7.198,1205,7.198,1207,6.328,3676,5.24,3677,6.428]],["title/interfaces/TurnAccounting.html",[84,0.039,3678,3.52]],["body/interfaces/TurnAccounting.html",[3,0.089,4,0.089,5,0.089,10,0.145,11,0.325,20,0.533,24,0.136,26,0.007,29,0.974,62,0.089,82,0.006,83,0.006,84,0.057,86,1.146,92,4.085,101,1.1,341,1.85,1110,6.146,1228,5.617,3676,5.611,3678,6.222,3679,6.116,3680,6.883,3681,8.029,3682,8.029]],["title/injectables/TurnManagementService.html",[0,1.206,1224,3.149]],["body/injectables/TurnManagementService.html",[0,1.309,1,1.436,2,1.337,3,0.043,4,0.043,5,0.043,7,1.473,8,1.473,9,1.741,10,0.07,11,0.2,12,1.566,14,1.104,15,3.842,16,2.147,20,0.449,22,1.357,24,0.117,25,1.809,26,0.007,28,1.125,29,0.814,32,1.508,33,2.65,35,4.21,38,0.902,39,0.789,42,0.912,45,0.779,46,0.412,47,1.057,48,1.123,49,1.687,52,2.158,58,1.552,59,1.64,60,1.368,61,1.337,62,0.043,63,0.43,66,1.692,67,2.877,69,2.026,71,1.8,72,2.069,73,1.92,82,0.004,83,0.004,92,1.511,101,1.191,106,2.726,107,2.799,146,2.27,147,2.542,148,2.331,150,1.436,151,0.578,152,1.473,153,1.473,154,1.511,155,1.473,156,1.467,159,1.511,160,1.511,164,4.209,165,1.797,166,1.797,176,3.998,178,3.93,179,3.825,180,3.725,184,3.455,185,4.043,188,3.998,189,3.825,190,4.043,191,2.412,192,3.818,196,3.242,240,4.137,332,1.562,335,0.684,337,1.212,341,1.545,376,0.751,402,0.723,988,1.997,989,2.078,990,2.078,991,1.797,992,1.511,1036,1.689,1086,4.902,1110,6.093,1118,2.274,1123,4.743,1178,5.466,1187,3.884,1189,2.97,1190,2.725,1191,2.97,1192,2.725,1193,2.97,1194,2.97,1195,2.725,1196,2.97,1197,2.725,1198,2.97,1199,2.542,1200,2.97,1201,2.725,1202,2.97,1203,2.725,1204,2.97,1205,2.725,1206,2.97,1207,2.395,1208,2.97,1224,3.415,1228,5.569,1254,6.257,1425,2.542,1848,3.604,1851,3.471,2378,2.274,2379,2.274,2698,2.97,2958,2.725,2975,5.359,2984,5.359,3308,2.97,3676,7.118,3678,2.542,3681,2.97,3682,2.97,3683,5.021,3684,6.705,3685,5.021,3686,6.705,3687,6.031,3688,6.705,3689,6.705,3690,6.705,3691,6.031,3692,5.021,3693,5.021,3694,3.343,3695,3.343,3696,3.343,3697,5.021,3698,3.343,3699,3.343,3700,3.343,3701,3.343,3702,3.343,3703,3.343,3704,3.343,3705,3.343,3706,3.343,3707,5.021,3708,2.97,3709,5.021,3710,3.343,3711,3.343,3712,2.97,3713,5.021,3714,3.343,3715,3.343,3716,3.343,3717,3.343,3718,3.343,3719,3.343,3720,3.343,3721,3.343,3722,6.031,3723,6.031,3724,3.343,3725,3.343,3726,3.343,3727,5.021,3728,3.343,3729,3.343,3730,3.343,3731,3.343,3732,5.021,3733,3.343,3734,5.021,3735,2.542,3736,3.343]],["title/components/TurnsListFormComponent.html",[286,0.226,435,1.059]],["body/components/TurnsListFormComponent.html",[3,0.082,4,0.029,5,0.029,10,0.124,11,0.144,12,1.694,14,0.665,16,1.812,20,0.365,22,1.412,24,0.117,25,1.502,26,0.007,28,1.01,29,0.676,32,1.337,38,1.465,39,1.282,42,0.871,45,0.516,46,0.273,57,0.846,62,0.029,63,0.285,66,1.388,68,0.623,70,2.239,71,1.12,72,1.584,73,1.627,77,1.835,82,0.003,83,0.003,93,1.093,100,0.816,101,0.582,104,1.142,151,0.383,156,1.061,173,1.185,286,0.261,287,0.516,288,0.772,289,0.526,290,0.526,291,0.831,293,0.526,294,1.879,295,1.879,296,0.716,300,0.516,301,0.716,303,0.73,310,0.526,311,0.862,312,0.862,313,0.526,314,1.199,315,0.526,316,0.516,317,2.074,318,0.516,319,1.276,320,0.526,321,0.516,322,0.526,323,0.526,324,1.767,325,0.516,326,0.497,327,0.516,328,0.507,329,0.516,330,0.526,331,0.516,332,0.516,333,0.862,334,0.507,335,0.945,336,0.516,337,1.273,338,0.453,339,0.507,340,1.096,341,1.207,342,1.715,343,0.516,344,0.526,345,0.526,346,0.516,347,0.526,348,0.516,349,0.862,350,0.516,351,0.862,352,0.507,353,1.034,354,0.862,355,0.516,356,0.526,357,0.526,358,0.526,359,0.516,360,0.526,361,0.516,362,0.526,363,0.516,364,0.526,365,0.516,366,0.507,367,0.516,368,0.507,369,0.507,370,0.497,371,0.526,372,0.516,373,0.846,374,0.516,375,0.507,376,0.497,377,0.526,378,0.516,379,0.497,380,0.526,381,0.516,382,0.488,383,0.47,384,0.497,385,0.479,386,0.47,387,0.507,388,0.497,389,1.018,390,1.096,391,0.507,392,0.497,393,0.507,394,0.488,395,0.816,396,0.479,397,0.526,398,1.177,399,0.516,400,0.526,401,0.516,402,0.479,403,0.516,404,0.526,405,0.516,406,0.526,407,0.862,408,0.516,409,0.516,410,0.526,411,0.526,412,0.516,413,0.846,414,0.526,415,0.516,416,0.526,417,0.516,418,0.516,419,0.526,420,0.516,421,0.526,422,0.516,423,0.862,424,0.526,425,1.222,426,0.516,427,0.516,428,0.526,429,0.47,430,0.445,431,0.526,432,0.497,433,0.507,434,0.507,435,1.222,436,2.191,437,0.516,438,0.526,439,0.507,440,0.497,441,0.516,442,0.507,443,0.507,444,0.526,445,0.526,461,1.655,469,1.642,470,2.202,472,1.926,482,1.721,488,1.021,494,0.7,525,1.551,526,0.714,536,0.76,537,0.76,654,1.459,668,2.353,702,1.328,710,0.7,852,1.087,853,1.056,854,1.056,864,2.762,877,0.846,878,2.258,881,1.419,882,1.419,883,2.479,886,2.087,888,1.846,889,2.087,908,1.587,933,2.87,948,2.143,951,1.437,954,2.47,955,1.587,956,1.686,957,1.323,961,1.487,962,1.506,964,1.506,983,1.001,984,1.587,986,1.028,987,1.6,988,1.323,989,1.377,990,1.377,993,0.907,994,0.886,995,0.907,996,1.028,998,1.19,1003,1.028,1004,1.028,1005,1.028,1006,1.028,1008,1.523,1010,1.686,1018,2.762,1020,2.353,1028,1.487,1030,2.186,1031,2.239,1036,1.119,1086,3.405,1187,3.428,1218,6.463,1219,4.425,1224,1.506,1237,1.587,1240,2.762,1244,1.684,1245,1.805,1250,6.477,1253,3.308,1254,1.587,1255,1.153,1256,1.19,1257,1.19,1258,1.437,1261,1.437,1267,3.51,1268,3.169,1269,2.762,1321,3.763,1374,1.506,1479,4.102,1513,1.153,1516,3.074,1584,2.87,1666,1.805,1669,1.968,1671,1.968,1702,1.377,1806,1.805,1810,1.684,1817,1.506,2031,1.805,2055,1.028,2140,1.968,2203,4.308,2204,3.14,2226,3.51,2246,2.47,2263,1.275,2268,1.506,2305,2.47,2311,2.47,2312,3.466,2313,2.47,2314,3.633,2315,2.47,2316,1.506,2317,2.47,2329,5.31,2330,4.061,2357,1.968,2361,1.805,2364,1.805,2557,2.762,3432,1.805,3599,1.684,3622,1.968,3623,3.227,3624,2.961,3678,3.51,3679,1.968,3712,1.968,3737,4.617,3738,4.617,3739,4.617,3740,4.617,3741,4.617,3742,4.617,3743,4.617,3744,4.617,3745,4.617,3746,3.632,3747,3.632,3748,3.632,3749,3.632,3750,3.632,3751,5.341,3752,3.632,3753,3.632,3754,5.239,3755,5.239,3756,3.632,3757,2.215,3758,3.632,3759,2.215,3760,3.632,3761,3.632,3762,1.968,3763,3.632,3764,3.632,3765,2.215,3766,2.215,3767,2.215,3768,3.632,3769,3.632,3770,1.968,3771,3.227,3772,2.215,3773,2.215,3774,1.968,3775,1.968,3776,1.968,3777,1.968,3778,2.215,3779,2.215,3780,1.968,3781,2.215,3782,1.968,3783,3.632,3784,2.215,3785,3.227,3786,2.215,3787,2.215,3788,2.215,3789,2.215,3790,2.215,3791,2.215,3792,4.617,3793,3.632,3794,2.215,3795,2.215,3796,3.632,3797,2.215,3798,2.215,3799,2.215,3800,3.632,3801,2.215,3802,2.215,3803,2.215,3804,2.215,3805,2.215,3806,2.215,3807,5.341,3808,3.632,3809,3.632,3810,3.632,3811,3.632,3812,3.632,3813,3.632,3814,3.632,3815,3.632,3816,3.632,3817,3.632,3818,3.632,3819,3.632,3820,3.632,3821,3.632]],["title/components/TurnsTruckInfoBaseFormComponent.html",[286,0.226,437,1.079]],["body/components/TurnsTruckInfoBaseFormComponent.html",[3,0.126,4,0.028,5,0.028,10,0.046,11,0.143,12,1.635,14,0.658,16,1.339,20,0.249,22,1.433,24,0.105,25,1.027,26,0.007,28,0.817,29,0.462,31,3.728,32,1.131,38,1.46,39,1.293,42,0.869,45,0.509,46,0.27,57,0.835,62,0.028,63,0.281,66,1.581,69,0.734,70,0.916,71,1.007,73,1.066,82,0.003,83,0.003,93,1.085,104,1.133,151,0.378,156,1.05,173,1.176,183,1.569,284,1.781,286,0.223,287,0.509,288,0.972,289,0.519,290,0.519,291,0.822,293,0.519,294,1.877,295,1.877,296,0.709,300,0.509,301,0.709,303,0.722,310,0.519,311,0.853,312,0.853,313,0.519,314,1.19,315,0.519,316,0.509,317,2.069,318,0.509,319,1.267,320,0.519,321,0.509,322,0.519,323,0.519,324,1.759,325,0.509,326,0.491,327,0.509,328,0.5,329,0.509,330,0.519,331,0.509,332,0.509,333,0.853,334,0.5,335,1.473,336,0.509,337,1.948,338,1.422,339,0.5,340,1.086,341,1.198,342,1.74,343,0.509,344,0.519,345,0.519,346,0.509,347,0.519,348,0.509,349,0.853,350,0.509,351,0.853,352,0.5,353,1.345,354,0.853,355,0.509,356,0.519,357,0.519,358,0.519,359,0.509,360,0.519,361,0.509,362,0.519,363,0.509,364,0.519,365,0.509,366,0.5,367,0.509,368,0.5,369,0.5,370,0.491,371,0.519,372,0.509,373,0.837,374,0.509,375,0.5,376,0.807,377,0.519,378,0.509,379,1.027,380,0.519,381,0.509,382,0.482,383,0.464,384,0.491,385,0.473,386,0.464,387,0.5,388,0.491,389,1.008,390,1.086,391,0.5,392,0.491,393,0.5,394,1.168,395,1.19,396,0.99,397,0.519,398,1.168,399,0.509,400,0.519,401,0.509,402,0.99,403,0.509,404,0.519,405,0.509,406,0.519,407,0.853,408,0.509,409,0.509,410,0.519,411,0.519,412,0.509,413,0.837,414,0.519,415,0.509,416,0.519,417,0.509,418,0.509,419,0.519,420,0.509,421,0.519,422,0.509,423,0.853,424,0.519,425,1.212,426,0.509,427,0.509,428,0.519,429,0.464,430,0.439,431,0.519,432,0.491,433,0.5,434,0.5,435,0.5,436,0.5,437,1.235,438,2.287,439,0.5,440,0.491,441,0.509,442,0.5,443,0.5,444,0.519,445,0.519,452,2.072,456,1.747,461,1.642,464,1.918,465,1.072,469,1.624,470,3.017,472,0.991,482,1.639,488,1.953,494,0.691,525,1.537,526,0.705,536,0.75,537,0.75,668,2.334,683,1.486,702,1.313,769,1.305,772,1.358,810,2.244,834,1.486,843,1.418,849,1.781,852,1.072,853,1.042,854,1.042,862,2.311,866,1.566,877,0.835,881,1.404,882,1.404,883,2.459,886,2.068,888,2.341,889,2.07,900,4.51,908,1.566,914,1.781,920,1.942,923,1.486,924,1.662,926,3.165,927,1.942,928,1.781,930,1.942,939,1.942,945,1.781,947,1.662,948,2.123,952,2.732,954,2.443,956,1.667,961,1.47,967,1.942,983,0.988,986,1.014,987,1.583,988,1.305,989,2.843,990,1.358,991,1.931,992,1.624,993,0.894,994,0.874,995,0.894,996,1.014,998,1.175,1003,1.014,1004,1.014,1005,1.014,1006,1.014,1007,1.042,1008,1.506,1010,2.123,1018,2.731,1020,0.963,1030,0.894,1031,0.916,1057,1.358,1086,3.383,1110,4.281,1118,2.443,1123,3.049,1138,1.942,1139,1.662,1182,2.731,1187,3.532,1199,4.786,1207,3.278,1218,6.552,1219,4.486,1228,2.843,1233,3.497,1249,1.662,1250,6.524,1252,1.138,1253,1.566,1255,1.138,1256,1.175,1257,1.175,1258,1.418,1259,1.566,1260,1.662,1261,1.418,1268,2.459,1395,4.319,1399,1.486,1681,1.942,1683,1.942,1790,3.088,1810,1.662,1811,1.566,1814,1.781,1848,4.081,2043,1.942,2045,1.781,2048,1.662,2142,1.942,2216,2.928,2231,2.731,2233,1.942,2263,2.068,2264,1.418,2265,1.486,2271,1.486,2272,1.486,2276,1.418,2282,1.662,2283,1.662,2285,1.486,2339,3.478,2344,3.192,2358,2.731,2364,1.781,2367,2.731,2371,1.942,2375,1.486,2376,2.731,2377,1.566,2378,1.486,2379,1.486,2412,1.781,2420,1.662,3599,1.662,3603,4.064,3624,1.781,3627,1.662,3652,1.942,3653,1.942,3654,1.942,3657,1.942,3754,1.942,3755,5.592,3771,5.91,3774,1.942,3780,1.942,3782,1.942,3785,1.942,3822,4.574,3823,4.574,3824,5.298,3825,4.574,3826,4.574,3827,5.298,3828,6.294,3829,6.294,3830,6.294,3831,6.294,3832,6.294,3833,6.294,3834,2.185,3835,2.185,3836,2.185,3837,2.185,3838,3.592,3839,1.942,3840,1.942,3841,2.185,3842,2.185,3843,1.942,3844,2.185,3845,2.185,3846,2.185,3847,2.185,3848,2.185,3849,2.185,3850,2.185,3851,2.185,3852,2.185,3853,2.185,3854,2.185,3855,2.185,3856,2.185,3857,1.942,3858,2.185,3859,2.185,3860,2.185,3861,2.185,3862,2.185,3863,2.185,3864,2.185,3865,2.185,3866,2.185,3867,2.185,3868,2.185,3869,2.185,3870,2.185,3871,2.185,3872,2.185,3873,2.185,3874,2.185,3875,2.185,3876,2.185,3877,2.185,3878,2.185,3879,2.185,3880,2.185,3881,2.185,3882,2.185,3883,2.185,3884,2.185,3885,2.185,3886,2.185,3887,2.185,3888,2.185,3889,2.185,3890,2.185,3891,2.185,3892,2.185,3893,2.185,3894,2.185,3895,2.185,3896,2.185,3897,2.185,3898,2.185,3899,2.185,3900,2.185,3901,2.185,3902,2.185,3903,2.185,3904,2.185]],["title/injectables/UserAuthService.html",[0,1.206,150,1.989]],["body/injectables/UserAuthService.html",[0,1.571,1,1.847,2,1.719,3,0.056,4,0.056,5,0.056,7,1.894,8,1.894,10,0.09,11,0.24,12,1.759,14,1.104,15,3.842,16,2.117,20,0.478,22,1.413,24,0.11,25,1.563,26,0.007,28,0.972,29,0.703,32,1.48,33,2.598,35,3.824,38,1.428,39,1.249,42,0.945,45,1.002,46,0.53,47,1.359,48,1.444,49,1.444,52,1.538,54,3.82,55,3.82,60,1.76,61,1.719,62,0.056,63,0.553,64,6.706,65,5.357,66,1.578,67,3.6,68,1.958,69,2.339,71,1.668,72,2.068,73,2.012,82,0.004,83,0.004,89,3.504,90,3.504,92,2.725,93,1.234,106,3.147,146,2.725,150,2.59,151,1.043,152,3.996,153,3.996,155,1.894,156,1.256,159,1.943,160,1.943,176,2.59,180,3.592,184,3.881,188,2.59,190,2.958,249,4.429,266,3.82,305,2.924,326,1.563,353,0.832,373,1.622,472,1.186,488,1.695,552,3.82,663,5.738,696,4.914,721,3.081,722,3.081,730,3.504,752,3.6,768,3.82,834,2.924,992,1.943,1025,3.504,1136,3.081,1489,3.269,1932,6.706,1969,6.896,2763,2.79,2764,3.081,2894,3.269,3372,3.82,3905,8.059,3906,4.299,3907,7.547,3908,6.962,3909,6.962,3910,7.547,3911,7.547,3912,6.028,3913,4.299,3914,4.299,3915,4.299,3916,4.299,3917,4.299,3918,4.299,3919,4.299,3920,6.028,3921,4.299,3922,4.299,3923,6.028,3924,4.299,3925,6.028,3926,4.299,3927,4.299,3928,4.299,3929,4.299,3930,3.504,3931,3.82,3932,4.299,3933,3.82,3934,3.82,3935,6.028,3936,3.82,3937,4.299,3938,5.357,3939,3.82,3940,6.028,3941,6.028,3942,4.299,3943,4.299,3944,4.299,3945,4.299,3946,4.299,3947,4.299,3948,6.028,3949,4.299,3950,6.028,3951,4.299,3952,6.028,3953,4.299,3954,4.299,3955,4.299,3956,4.299,3957,4.299,3958,4.299,3959,4.299,3960,4.299,3961,4.299,3962,4.299,3963,4.299,3964,6.028,3965,4.299]],["title/components/UserInfoFormComponent.html",[286,0.226,439,1.059]],["body/components/UserInfoFormComponent.html",[3,0.126,4,0.028,5,0.028,10,0.046,11,0.142,12,1.727,14,0.655,16,1.98,20,0.378,22,1.432,24,0.105,25,1.024,26,0.007,28,1.033,29,0.461,32,1.459,33,2.34,38,1.329,39,1.192,42,0.859,45,0.507,46,0.268,47,1.671,48,0.731,49,0.731,57,0.831,62,0.028,63,0.28,66,1.625,68,1.642,69,1.775,70,2.784,71,1.406,72,0.746,73,1.674,82,0.003,83,0.003,92,2.64,93,1.639,100,0.804,101,0.451,104,1.131,121,3.082,151,1.507,156,0.636,173,1.174,183,2.379,261,1.412,283,1.3,286,0.258,287,0.507,288,0.761,289,0.517,290,0.517,291,0.819,293,0.517,294,1.876,295,1.876,296,0.706,300,0.507,301,0.706,303,0.719,310,0.517,311,0.85,312,0.85,313,0.517,314,1.187,315,0.517,316,0.507,317,2.068,318,0.507,319,1.264,320,0.517,321,1.231,322,0.517,323,1.083,324,1.756,325,0.507,326,0.489,327,0.507,328,0.498,329,0.507,330,0.517,331,0.507,332,0.507,333,0.85,334,0.498,335,0.934,336,0.507,337,1.062,338,0.445,339,0.498,340,1.083,341,1.196,342,1.385,343,0.507,344,0.517,345,0.517,346,0.507,347,0.517,348,0.507,349,0.85,350,0.507,351,0.85,352,0.498,353,1.391,354,0.85,355,0.507,356,0.517,357,0.517,358,0.517,359,0.507,360,0.517,361,0.507,362,0.517,363,0.507,364,0.517,365,0.507,366,0.498,367,0.834,368,0.498,369,0.498,370,0.489,371,0.517,372,0.507,373,1.063,374,0.507,375,0.498,376,0.489,377,0.517,378,0.834,379,1.187,380,0.517,381,0.507,382,0.48,383,0.462,384,0.489,385,0.471,386,0.462,387,0.498,388,0.489,389,1.005,390,1.083,391,0.498,392,0.489,393,0.498,394,0.48,395,1.312,396,0.471,397,0.517,398,1.165,399,1.231,400,0.517,401,0.507,402,0.471,403,0.507,404,0.517,405,0.507,406,0.517,407,0.85,408,0.507,409,0.507,410,0.517,411,0.517,412,0.507,413,0.834,414,0.517,415,0.507,416,0.517,417,0.507,418,0.507,419,0.517,420,0.507,421,0.517,422,0.507,423,0.85,424,0.517,425,1.209,426,0.507,427,0.507,428,0.517,429,0.462,430,0.437,431,0.517,432,0.489,433,0.819,434,0.498,435,0.498,436,0.498,437,0.507,438,0.517,439,1.209,440,0.489,441,0.507,442,0.498,443,0.819,444,0.517,445,0.517,447,1.934,449,1.309,450,1.704,452,0.716,456,1.742,461,1.638,465,3.257,467,1.662,469,1.618,470,2.672,472,1.458,482,1.907,488,1.486,494,0.688,522,2.724,525,1.532,526,0.702,536,0.746,537,0.746,543,1.756,636,1.48,651,2.835,653,1.618,654,1.442,668,2.328,702,1.309,710,0.688,769,4.143,771,3.181,772,2.225,773,3.181,852,1.068,853,1.038,854,1.038,855,1.48,864,2.722,866,1.559,877,0.831,878,2.225,879,5.581,880,3.468,881,1.399,882,1.399,883,2.453,886,2.062,888,1.824,889,2.065,890,2.96,893,2.323,896,4.018,897,3.181,910,1.934,911,3.181,921,1.934,922,1.934,923,1.48,924,2.722,928,1.774,933,2.225,935,1.934,937,1.934,938,3.181,940,1.934,941,1.934,943,2.722,944,3.181,945,1.774,947,1.655,948,2.117,950,3.181,952,3.489,956,1.662,960,1.655,961,1.465,963,1.412,968,1.934,976,1.934,983,0.984,984,1.559,986,1.01,987,2.328,992,0.984,993,0.891,994,0.87,995,0.891,996,1.01,998,1.17,999,1.934,1000,1.934,1001,1.774,1002,1.934,1003,1.01,1004,1.01,1005,1.01,1006,1.01,1008,2.634,1009,1.934,1010,1.662,1014,1.934,1015,2.722,1020,3.056,1028,2.163,1030,2.718,1031,2.634,1032,1.412,1037,1.934,1041,1.934,1042,1.252,1043,1.655,1044,1.934,1045,1.934,1046,1.934,1103,1.412,1219,4.483,1249,1.655,1258,1.412,1261,1.412,1322,4.695,1372,6.384,1377,1.934,1641,1.774,1644,1.934,1693,1.934,1811,1.559,1921,1.655,1997,1.934,2049,1.559,2263,1.252,2289,1.559,2290,1.48,2296,1.559,2322,2.323,2327,3.268,2353,1.934,2360,1.934,2420,1.655,2511,1.774,2527,1.774,2551,1.934,2590,1.934,2744,1.934,2759,7.449,2761,1.559,2762,1.655,2763,4.309,2764,1.559,2765,3.718,2766,2.918,2770,3.268,2771,4.761,2840,1.774,3075,1.774,3076,4.761,3077,1.774,3165,8.521,3412,1.934,3432,1.774,3627,1.655,3762,1.934,3775,1.934,3776,1.934,3777,1.934,3839,1.934,3843,1.934,3966,4.56,3967,4.56,3968,4.56,3969,4.695,3970,5.284,3971,5.284,3972,3.58,3973,5.284,3974,5.284,3975,5.284,3976,5.284,3977,5.284,3978,5.284,3979,4.018,3980,2.176,3981,3.58,3982,3.58,3983,2.176,3984,2.176,3985,2.176,3986,2.176,3987,2.176,3988,1.934,3989,2.176,3990,2.176,3991,2.176,3992,2.176,3993,2.176,3994,2.176,3995,2.176,3996,2.176,3997,2.176,3998,2.176,3999,2.176,4000,2.176,4001,2.176,4002,2.176,4003,2.176,4004,2.176,4005,2.176,4006,2.176,4007,6.281,4008,2.176,4009,2.176,4010,2.176,4011,2.176,4012,2.176,4013,2.176,4014,2.176,4015,6.281,4016,2.176,4017,3.58,4018,2.176,4019,2.176,4020,4.56,4021,2.176,4022,3.58,4023,3.58,4024,2.176,4025,2.176,4026,2.176,4027,2.176,4028,2.176,4029,3.58,4030,2.176,4031,2.176,4032,2.176,4033,2.176,4034,2.176,4035,2.176,4036,2.176,4037,2.176,4038,2.176,4039,2.176,4040,2.176,4041,2.176,4042,2.176,4043,2.176,4044,2.176,4045,2.176,4046,2.176,4047,2.176,4048,2.176,4049,2.176,4050,2.176,4051,2.176,4052,2.176,4053,2.176,4054,2.176,4055,2.176,4056,2.176,4057,6.639,4058,2.176,4059,2.176,4060,2.176,4061,2.176,4062,3.58,4063,2.176,4064,2.176]],["title/injectables/UserManagementService.html",[0,1.206,2761,3.317]],["body/injectables/UserManagementService.html",[0,1.262,1,1.369,2,1.274,3,0.041,4,0.041,5,0.041,7,1.404,8,1.404,9,1.659,10,0.067,11,0.193,12,1.545,14,0.887,15,3.875,16,2.165,20,0.404,22,1.373,24,0.121,25,1.862,26,0.007,28,1.158,29,0.838,32,1.535,33,2.683,35,4.262,38,0.87,39,0.761,42,0.919,45,0.742,46,0.393,47,1.007,48,1.968,49,1.627,52,2.518,58,1.479,59,1.563,60,1.304,61,1.274,62,0.041,63,0.41,66,1.698,67,3.357,69,2.365,71,1.805,72,2.414,73,1.964,82,0.004,83,0.004,85,2.167,91,2.167,92,2.189,93,0.652,100,1.664,101,1.152,104,0.938,106,2.648,107,2.719,146,2.189,148,2.248,150,1.369,151,1.013,152,1.404,153,1.404,154,1.44,155,1.404,156,0.931,159,1.44,160,1.44,164,3.984,165,1.713,166,1.713,176,3.929,178,1.52,179,3.576,180,3.81,183,1.093,184,3.533,185,4.135,188,3.929,189,3.685,190,4.135,191,2.814,196,3.783,230,3.682,233,6.586,235,6.586,237,2.597,238,3.682,239,3.294,241,5.636,243,6.586,314,0.715,896,4.454,992,1.44,1082,2.831,1103,5.151,1104,2.831,1108,2.831,1121,2.597,1122,2.597,1131,3.948,1132,2.597,1133,2.597,1136,2.283,1170,2.597,1171,2.597,1821,1.713,2761,3.47,2762,6.702,2763,5.907,2764,2.283,2769,6.966,2770,6.606,2958,2.597,3075,2.597,3076,2.597,3077,2.597,3078,2.831,3708,2.831,3905,7.832,3931,2.831,3936,2.831,3938,5.815,3939,2.831,3969,5.205,3979,2.423,4065,5.858,4066,5.858,4067,5.858,4068,5.858,4069,6.544,4070,6.544,4071,6.544,4072,5.858,4073,5.858,4074,5.858,4075,3.186,4076,3.186,4077,3.186,4078,3.186,4079,3.186,4080,3.186,4081,3.186,4082,3.186,4083,3.186,4084,3.186,4085,3.186,4086,3.186,4087,3.186,4088,3.186,4089,2.831,4090,3.186,4091,3.186,4092,3.186,4093,3.186,4094,4.843,4095,3.186,4096,4.843,4097,3.186,4098,3.186,4099,3.186,4100,7.038,4101,7.038,4102,3.186,4103,3.186,4104,3.186,4105,4.843,4106,3.186,4107,3.186,4108,3.186,4109,4.843,4110,4.843,4111,3.186,4112,3.186,4113,3.186,4114,3.186,4115,3.186,4116,3.186,4117,3.186,4118,3.186,4119,3.186,4120,3.186,4121,2.831,4122,3.186,4123,2.831,4124,3.186,4125,5.858,4126,3.186,4127,4.843,4128,3.186,4129,3.186,4130,3.186,4131,3.186,4132,3.186,4133,3.186]],["title/interfaces/UserSession.html",[84,0.039,3930,3.774]],["body/interfaces/UserSession.html",[3,0.097,4,0.097,5,0.097,10,0.157,11,0.341,20,0.467,24,0.109,26,0.007,62,0.097,82,0.006,83,0.006,84,0.062,86,1.241,184,3.783,1972,6.62,3930,6.987,4134,6.62,4135,7.45]],["title/interfaces/UserType.html",[84,0.039,3979,3.52]],["body/interfaces/UserType.html",[3,0.095,4,0.095,5,0.095,10,0.154,11,0.338,20,0.489,24,0.124,26,0.007,62,0.095,82,0.006,83,0.006,84,0.061,86,1.222,101,1.13,1787,5.578,3979,6.459,4121,8.195,4123,8.195,4134,6.519]],["title/interfaces/UsernamePassword.html",[84,0.039,91,3.149]],["body/interfaces/UsernamePassword.html",[3,0.094,4,0.094,5,0.094,10,0.152,11,0.335,20,0.524,24,0.123,26,0.007,62,0.11,82,0.006,83,0.006,84,0.07,85,4.928,86,1.207,87,6.437,88,6.437,89,5.906,90,5.906,91,5.736,92,4.153,93,1.881]],["title/components/UsersMenuAccessFormComponent.html",[286,0.226,440,1.04]],["body/components/UsersMenuAccessFormComponent.html",[3,0.082,4,0.033,5,0.033,10,0.053,11,0.16,12,1.642,14,0.737,16,1.729,20,0.137,22,1.358,24,0.107,26,0.007,28,0.562,29,0.406,32,1.131,33,1.681,38,1.448,39,1.287,42,0.886,45,0.586,46,0.31,47,0.794,48,0.844,49,1.352,52,2.058,57,0.96,58,1.166,59,1.233,62,0.033,63,0.323,66,1.252,68,1.769,69,1.352,70,1.687,71,1.596,72,1.38,73,1.565,77,2.033,78,1.911,82,0.003,83,0.003,84,0.021,93,1.178,100,1.292,104,1.219,151,0.696,156,0.734,173,1.265,183,1.38,191,1.609,236,4.689,240,3.311,241,3.059,261,1.631,286,0.246,287,0.586,288,0.855,289,0.597,290,0.597,291,0.92,293,0.597,294,1.895,295,1.895,296,0.794,298,2.469,300,0.586,301,0.794,303,0.809,306,0.919,310,0.597,311,0.955,312,0.955,313,0.597,314,1.292,315,0.597,316,0.586,317,2.117,318,0.586,319,1.362,320,0.597,321,0.586,322,0.597,323,0.597,324,1.84,325,0.586,326,0.564,327,0.586,328,0.575,329,0.586,330,0.597,331,0.586,332,0.586,333,0.955,334,0.575,335,1.03,336,0.586,337,1.156,338,0.514,339,0.575,340,1.194,341,1.288,342,1.48,343,0.586,344,0.597,345,0.597,346,0.586,347,0.597,348,0.586,349,0.955,350,0.586,351,0.955,352,0.575,353,1.114,354,0.955,355,0.586,356,0.597,357,0.597,358,0.597,359,0.586,360,0.597,361,0.586,362,0.597,363,0.586,364,0.597,365,0.586,366,0.575,367,0.586,368,0.575,369,0.575,370,0.564,371,0.597,372,0.586,373,0.938,374,0.586,375,0.575,376,0.564,377,0.597,378,0.586,379,0.564,380,0.597,381,0.586,382,0.554,383,0.534,384,0.564,385,0.544,386,0.534,387,0.575,388,0.564,389,1.109,390,1.194,391,0.575,392,0.564,393,0.575,394,0.554,395,0.904,396,0.544,397,0.597,398,1.268,399,0.586,400,0.597,401,0.586,402,0.544,403,0.586,404,0.597,405,0.586,406,0.597,407,0.955,408,0.586,409,0.586,410,0.597,411,0.597,412,0.586,413,0.938,414,0.597,415,0.586,416,0.597,417,0.586,418,0.586,419,0.597,420,0.586,421,0.597,422,0.586,423,0.955,424,0.597,425,1.316,426,0.586,427,0.586,428,0.597,429,0.534,430,0.809,431,0.597,432,0.564,433,0.575,434,0.575,435,0.575,436,0.575,437,0.586,438,0.597,439,0.575,440,1.292,441,1.643,442,2.163,443,2.168,444,0.597,445,0.597,449,1.471,450,1.88,456,1.922,461,1.783,469,1.819,470,1.324,472,1.736,482,1.417,488,1.415,494,0.794,525,1.69,526,0.811,536,0.862,537,0.862,543,3.088,602,3.497,651,3.128,654,1.591,668,2.534,702,1.471,710,0.794,800,2.542,852,1.233,853,1.199,854,1.199,877,0.96,881,1.572,882,1.572,883,2.336,886,2.275,889,2.248,890,3.265,923,1.709,924,1.911,948,2.336,951,1.631,952,3.006,953,1.631,956,1.868,960,1.911,961,1.647,963,1.631,983,1.136,985,1.801,986,1.166,987,1.773,992,1.136,993,1.029,994,1.005,995,1.029,996,1.166,998,1.351,1003,1.166,1004,1.166,1005,1.166,1006,1.166,1007,1.199,1010,1.868,1015,3.059,1020,2.217,1028,1.029,1030,1.647,1031,2.11,1032,1.631,1036,2.542,1042,3.311,1056,2.236,1103,1.631,1219,4.271,1652,2.233,1694,2.233,1742,3.383,1811,1.801,1814,2.048,1889,4.102,1896,2.048,1905,4.102,1921,1.911,2017,2.896,2033,2.896,2048,1.911,2049,1.801,2054,1.446,2055,1.166,2065,2.896,2070,2.316,2090,3.265,2091,2.611,2092,2.611,2093,2.62,2095,2.611,2143,1.911,2209,2.896,2263,1.446,2420,1.911,2501,2.048,2502,2.048,2758,6.16,2759,7.097,2760,7.619,2761,1.801,2762,1.911,2763,3.265,2764,1.801,2765,4.102,2766,3.28,2767,4.471,2768,5.111,2769,4.102,2770,3.606,2771,5.13,2772,4.689,2773,4.471,2774,5.111,2775,3.575,2776,1.801,2777,2.233,2778,3.575,2779,2.233,2780,2.233,2781,3.575,2782,3.575,2783,3.575,2784,5.111,2785,3.575,2786,3.575,2787,3.575,2788,2.233,2789,2.233,2790,3.575,2791,2.233,2792,4.471,2793,2.233,2794,2.233,2795,2.233,2796,2.233,2797,2.233,2798,3.575,2799,2.233,2800,2.233,2801,3.575,2802,3.575,2803,2.233,2804,2.233,2805,2.233,2806,2.233,2807,2.233,2808,2.233,2809,3.575,2810,2.233,2811,5.111,2812,2.233,2813,2.233,2814,4.471,2815,2.233,2816,2.233,2817,3.575,2818,2.233,2819,2.233,2820,2.233,2821,2.233,2822,2.233,2823,2.233,2824,2.233,2825,2.233,2826,2.233,2827,2.233,2828,2.233,2829,2.233,2830,2.233,2831,2.233,2832,2.233,2833,2.233,2834,5.111,2835,2.233,2836,2.233,2837,2.233,2838,2.233,2839,2.233,2840,2.048,3627,1.911,3770,2.233,3840,2.233,3988,2.233,4136,2.513,4137,4.023,4138,4.023]],["title/interfaces/Wallet.html",[84,0.039,338,0.948]],["body/interfaces/Wallet.html",[3,0.094,4,0.094,5,0.094,10,0.151,11,0.334,20,0.485,24,0.13,26,0.007,29,0.926,62,0.094,82,0.006,83,0.006,84,0.06,86,1.2,101,1.191,338,1.721,1111,7.475,4139,4.901,4140,7.205,4141,8.148,4142,9.17]],["title/interfaces/WalletDefaultAmount.html",[84,0.039,4143,3.774]],["body/interfaces/WalletDefaultAmount.html",[3,0.095,4,0.095,5,0.095,10,0.154,11,0.337,20,0.488,24,0.124,26,0.007,38,1.314,62,0.095,82,0.006,83,0.006,84,0.061,86,1.218,101,1.128,4139,4.976,4143,6.913,4144,5.563,4145,7.315,4146,7.006,4147,8.188]],["title/injectables/WalletManagementService.html",[0,1.206,4148,4.114]],["body/injectables/WalletManagementService.html",[0,1.4,1,1.574,2,1.464,3,0.048,4,0.048,5,0.048,7,1.614,8,1.614,9,1.907,10,0.077,11,0.214,12,1.483,14,0.984,15,3.877,16,2.167,22,1.368,24,0.109,25,1.677,26,0.007,28,1.043,29,0.754,32,1.517,33,2.686,35,4.266,38,1.26,39,0.845,42,0.94,45,0.853,46,0.452,47,1.158,48,1.23,49,1.23,52,2.509,60,1.499,61,1.464,62,0.048,63,0.471,66,1.714,67,3.345,69,2.356,71,1.796,72,2.405,73,1.967,82,0.004,83,0.004,92,2.429,101,1.138,106,2.877,107,2.954,135,3.254,146,2.429,148,2.494,150,1.574,151,0.634,152,1.614,153,1.614,154,1.656,155,1.614,156,1.07,159,1.656,160,1.656,176,4.014,178,4.027,179,3.918,180,3.816,184,3.539,185,4.142,188,4.014,189,3.918,190,4.142,191,2.804,192,4.84,196,3.769,335,0.75,337,0.736,338,1.435,341,1.1,991,1.969,992,1.656,1036,1.85,1086,4.014,1111,6.363,1123,3.664,1140,6.635,1178,2.986,1316,7.501,1425,2.785,3735,4.086,3857,5.656,4089,3.254,4139,5.986,4141,3.254,4143,2.986,4146,6.133,4147,3.254,4148,4.775,4149,8.8,4150,7.012,4151,7.012,4152,6.365,4153,7.012,4154,7.012,4155,6.365,4156,6.365,4157,6.365,4158,3.662,4159,3.662,4160,3.662,4161,3.662,4162,3.662,4163,3.662,4164,3.662,4165,3.662,4166,3.662,4167,3.662,4168,3.662,4169,3.662,4170,3.662,4171,2.986,4172,7.012,4173,3.662,4174,3.662,4175,5.374,4176,7.012,4177,3.662,4178,2.986,4179,5.716,4180,3.662,4181,5.374,4182,3.662,4183,3.662,4184,3.662,4185,5.374,4186,3.662,4187,2.986,4188,3.662,4189,5.374,4190,3.662,4191,3.662,4192,3.662,4193,3.662,4194,3.662,4195,3.662,4196,6.365,4197,6.365,4198,3.662,4199,3.662,4200,3.662,4201,6.365,4202,3.662,4203,3.662,4204,3.254,4205,3.662,4206,3.254,4207,3.662,4208,5.374,4209,5.374,4210,3.254,4211,3.662,4212,3.254,4213,3.662,4214,5.374,4215,3.662]],["title/interfaces/WalletPaymentHistory.html",[84,0.039,4178,3.774]],["body/interfaces/WalletPaymentHistory.html",[3,0.093,4,0.093,5,0.093,10,0.15,11,0.332,20,0.526,24,0.133,26,0.007,62,0.093,82,0.006,83,0.006,84,0.059,86,1.188,92,4.133,101,1.117,341,1.872,3735,6.951,4139,4.854,4144,5.426,4146,6.951,4178,6.814,4179,5.817,4216,7.136]],["title/interfaces/WalletPaymentRequest.html",[84,0.039,4187,3.774]],["body/interfaces/WalletPaymentRequest.html",[3,0.095,4,0.095,5,0.095,10,0.154,11,0.337,20,0.517,24,0.124,26,0.007,62,0.095,82,0.006,83,0.006,84,0.061,86,1.218,4139,4.976,4144,5.563,4179,5.964,4187,6.913,4217,7.315,4218,9.214,4219,9.214]],["title/interfaces/WalletTransaction.html",[84,0.039,4171,3.774]],["body/interfaces/WalletTransaction.html",[3,0.088,4,0.088,5,0.088,10,0.143,11,0.323,20,0.533,24,0.139,26,0.007,62,0.088,82,0.006,83,0.006,84,0.057,86,1.134,92,4.071,101,1.206,341,1.843,3735,6.847,4139,4.633,4144,5.18,4146,6.847,4171,6.629,4204,8.001,4206,8.001,4210,8.001,4212,8.001,4220,6.812]],["title/interfaces/WebProcess.html",[84,0.039,705,3.317]],["body/interfaces/WebProcess.html",[3,0.092,4,0.092,5,0.092,10,0.149,11,0.331,20,0.531,24,0.135,26,0.007,28,1.273,62,0.092,82,0.006,83,0.006,84,0.059,86,1.179,101,1.048,121,4.335,129,4.122,232,5.77,240,5.248,272,4.122,705,5.962,3157,6.29,4221,7.078]],["title/interfaces/announcementSubGroupInRelation.html",[84,0.039,228,3.149]],["body/interfaces/announcementSubGroupInRelation.html",[3,0.093,4,0.093,5,0.093,10,0.151,11,0.333,20,0.499,24,0.122,26,0.007,29,0.847,62,0.109,82,0.006,83,0.006,84,0.07,86,1.195,101,1.154,207,5.271,208,5.271,219,4.88,228,6.044,1187,3.161,1846,4.88,1847,4.657,1848,3.857,1851,4.13,1852,4.287,2333,5.142,2334,6.376]],["title/interfaces/dataFormat.html",[84,0.039,3561,3.774]],["body/interfaces/dataFormat.html",[3,0.067,4,0.067,5,0.067,10,0.108,11,0.271,12,1.544,16,1.174,20,0.416,24,0.099,26,0.007,33,1.5,39,1.483,42,0.959,45,1.196,46,0.633,62,0.067,63,0.66,66,1.423,71,1.45,73,1.778,82,0.005,83,0.005,84,0.043,86,0.855,129,4.266,156,1.5,176,3.279,188,3.279,286,0.332,294,1.012,295,1.012,296,1.012,301,1.012,303,1.031,335,1.843,337,1.849,352,1.556,353,0.994,432,1.152,433,1.934,449,1.876,450,2.542,452,2.239,461,1.59,499,3.33,525,1.724,526,1.655,536,1.76,537,1.76,702,1.876,874,3.902,877,1.961,881,2.005,882,2.005,926,4.064,929,5.546,954,3.491,988,3.066,989,4.744,990,3.19,991,3.657,992,3.075,1123,4.677,1255,2.673,1256,2.759,1257,2.759,1268,4.102,1323,4.368,1390,3.678,1391,3.678,1396,4.875,1399,3.491,1786,3.19,1815,3.678,1820,4.627,1821,2.759,1822,3.33,1823,3.491,1824,3.19,1885,5.173,3167,3.902,3230,4.183,3554,6.045,3555,4.56,3556,4.56,3557,4.56,3558,4.56,3559,4.56,3560,4.56,3561,6.892,3562,4.56,3563,4.56,3564,6.781,3565,4.56,3566,4.56,3567,4.56,3568,4.56,3569,4.56,3570,4.56,3571,4.56,3572,4.56,3573,6.045,3574,4.56,3575,4.56,3576,4.56,3577,4.56,3578,6.045,3579,4.56,3580,4.56,3581,4.56,3582,4.56,3583,4.56,3584,4.56,3585,4.56,3586,4.56,3587,4.56,3588,4.56,3589,4.56,3590,4.56,3591,4.56,3592,4.56,3593,4.56]],["title/dependencies.html",[4222,3.423,4223,4.954]],["body/dependencies.html",[26,0.007,46,0.855,57,2.647,82,0.006,83,0.006,305,4.713,306,2.533,494,2.19,646,6.157,709,5.107,845,5.269,846,5.269,847,5.269,1025,5.648,3405,6.157,3933,6.157,3934,6.157,4223,6.157,4224,9.543,4225,6.929,4226,8.215,4227,8.215,4228,6.929,4229,6.929,4230,6.929,4231,8.215,4232,6.929,4233,6.929,4234,8.215,4235,6.929,4236,6.929,4237,6.929,4238,6.929,4239,6.929,4240,6.929,4241,6.929,4242,6.929,4243,6.929,4244,6.929,4245,6.929,4246,6.929,4247,6.929,4248,6.929,4249,6.929,4250,6.929]],["title/miscellaneous/enumerations.html",[4251,2.62,4252,4.954]],["body/miscellaneous/enumerations.html",[10,0.129,26,0.007,39,1.54,82,0.006,83,0.006,104,1.763,286,0.372,319,1.795,341,1.698,342,1.914,376,1.374,800,3.092,875,4.654,877,3.619,1126,4.551,1219,4.07,1302,4.989,1526,4.654,2199,6.21,2322,5.795,2335,4.654,2857,4.386,3086,5.459,3162,5.438,3163,6.769,3179,5.438,3181,5.438,3183,7.713,3186,6.769,3190,5.438,3191,5.438,3192,5.438,3193,5.438,3194,5.438,3195,5.438,3196,5.438,3197,5.438,3198,5.438,3199,5.438,3200,5.438,3201,5.438,3202,5.438,3203,5.438,3204,5.438,3205,5.438,3206,5.438,3207,5.438,3208,5.438,3209,5.438,3210,5.438,3211,5.438,3212,5.438,3213,5.438,3214,5.438,4251,4.163,4252,5.438,4253,6.12,4254,7.618,4255,9.103,4256,7.618,4257,6.12,4258,6.12,4259,7.618,4260,6.12,4261,7.618,4262,6.12,4263,6.12,4264,6.12,4265,6.12,4266,6.12,4267,6.12,4268,6.12,4269,6.12,4270,6.12,4271,6.12,4272,6.12,4273,6.12,4274,6.12,4275,6.12,4276,6.12,4277,6.12,4278,6.12,4279,6.12,4280,8.929,4281,6.12,4282,6.12]],["title/miscellaneous/functions.html",[4251,2.62,4283,4.954]],["body/miscellaneous/functions.html",[10,0.147,20,0.479,24,0.128,25,1.975,26,0.007,28,1.269,29,0.889,32,1.58,47,2.781,50,7.346,52,3.147,80,6.223,82,0.006,83,0.006,283,4.184,525,2.777,526,2.666,752,3.34,769,4.184,850,5.623,851,6.286,1255,4.305,1276,5.709,1277,6.739,1285,6.223,1286,7.346,2276,4.545,4251,4.763,4283,6.223,4284,7.003,4285,8.267,4286,6.223,4287,7.003,4288,8.267,4289,7.003,4290,7.003]],["title/index.html",[10,0.081,4291,3.852,4292,3.852]],["body/index.html",[26,0.006,82,0.006,83,0.006,4293,7.635,4294,7.635,4295,7.635,4296,7.635,4297,7.635]],["title/modules.html",[844,4.826]],["body/modules.html",[26,0.006,82,0.006,83,0.006,844,5.84]],["title/overview.html",[4298,5.639]],["body/overview.html",[2,3.044,26,0.006,82,0.006,83,0.006,86,1.268,288,1.617,4298,6.765,4299,7.613,4300,7.613,4301,7.613]],["title/properties.html",[11,0.222,4222,3.423]],["body/properties.html",[11,0.304,26,0.007,82,0.006,83,0.006,4302,7.646,4303,7.646]],["title/miscellaneous/typealiases.html",[4251,2.62,4304,5.575]],["body/miscellaneous/typealiases.html",[10,0.159,24,0.11,26,0.006,82,0.006,83,0.006,813,5.617,1276,6.179,1277,7.056,4251,5.156,4286,6.735,4305,7.58]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":183,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"components/FullScreenBackgroundComponent.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"injectables/TariffsManagementService.html":{},"components/TimePickerInput.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["0').padstart(2",{"_index":3434,"title":{},"body":{"components/TimePickerInput.html":{}}}],["0,validationschema.id",{"_index":1625,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["0,validationschema.tariff",{"_index":1637,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["0,validationschema.tonaj",{"_index":1635,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["0,validationschema.totalnumber",{"_index":1634,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["0.0.0",{"_index":4303,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":4250,"title":{},"body":{"dependencies.html":{}}}],["00:00:00",{"_index":2422,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["00–23",{"_index":3417,"title":{},"body":{"components/TimePickerInput.html":{}}}],["00–59",{"_index":3420,"title":{},"body":{"components/TimePickerInput.html":{}}}],["0–59",{"_index":3439,"title":{},"body":{"components/TimePickerInput.html":{}}}],["1",{"_index":800,"title":{"interfaces/SelectionOption-1.html":{}},"body":{"components/DashboardComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1.0",{"_index":1773,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["10",{"_index":2857,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TabView.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.0.0",{"_index":4240,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":552,"title":{},"body":{"components/CaptchaInputComponent.html":{},"injectables/UserAuthService.html":{}}}],["10000000",{"_index":4198,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["10rem",{"_index":3838,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["11",{"_index":3197,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["12",{"_index":3199,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["13",{"_index":3205,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":3207,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["18rem",{"_index":3023,"title":{},"body":{"components/SidebarComponent.html":{}}}],["19",{"_index":3209,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["19.1.2",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["19.2.1",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["19.2.13",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":2143,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption-1.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["2.3.0",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":3455,"title":{},"body":{"components/TimePickerInput.html":{}}}],["200ms",{"_index":3452,"title":{},"body":{"components/TimePickerInput.html":{}}}],["20rem",{"_index":1044,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["22",{"_index":4300,"title":{},"body":{"overview.html":{}}}],["23",{"_index":3415,"title":{},"body":{"components/TimePickerInput.html":{}}}],["25",{"_index":4277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["27",{"_index":4275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["28",{"_index":4279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2])\\/(0[1",{"_index":1327,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["3",{"_index":2046,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionOption.html":{},"components/TimePickerInput.html":{}}}],["30",{"_index":3964,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["300",{"_index":2657,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["35",{"_index":3211,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":3193,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":4265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["401",{"_index":4267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["403",{"_index":4269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["404",{"_index":4271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":4273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["53",{"_index":3213,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["58",{"_index":4299,"title":{},"body":{"overview.html":{}}}],["59",{"_index":3419,"title":{},"body":{"components/TimePickerInput.html":{}}}],["6",{"_index":3195,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":3963,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["67",{"_index":4301,"title":{},"body":{"overview.html":{}}}],["7",{"_index":3200,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":4246,"title":{},"body":{"dependencies.html":{}}}],["7587ae60f0243cf7b6a15b4aa553d6d53c1ccf7401f6be1d5b8ad66ee7cf1d9d",{"_index":2575,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["8",{"_index":3202,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["8rem",{"_index":946,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckInfoFormComponent.html":{}}}],["9",{"_index":1302,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["9]{3",{"_index":1303,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9]{4",{"_index":1304,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9]|1[0",{"_index":1326,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9]|2[1",{"_index":1301,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9]|3[1",{"_index":1300,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9]|[12]\\d|3[01",{"_index":1328,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["9rem",{"_index":1622,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["_",{"_index":834,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{}}}],["_control",{"_index":459,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["accept",{"_index":2317,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["acceptbuttonprops",{"_index":2315,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["access",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["accessors",{"_index":469,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["accesstable",{"_index":2767,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["accordingly",{"_index":2549,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["accounting.mock",{"_index":3715,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["accounting.model",{"_index":3712,"title":{},"body":{"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{}}}],["accounting.model.ts",{"_index":3680,"title":{},"body":{"interfaces/TurnAccounting.html":{}}}],["accountingcols",{"_index":3737,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["accountingtypetitle",{"_index":3681,"title":{},"body":{"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{}}}],["activate",{"_index":910,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["activatedriversms",{"_index":891,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{}}}],["activatedriversms(driverid",{"_index":1081,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["activatefpcsms",{"_index":1403,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["activatefpcsms(fpcid",{"_index":1410,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["activateusersms",{"_index":3969,"title":{},"body":{"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{}}}],["activateusersms(userid",{"_index":4075,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["activation",{"_index":4062,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["active",{"_index":97,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/FPCInfo.html":{},"interfaces/LoaderType.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/TabItem.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"interfaces/TravelTime.html":{}}}],["active:boolean",{"_index":3160,"title":{},"body":{"interfaces/TabItem.html":{}}}],["activecolor",{"_index":621,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["activeindex",{"_index":3233,"title":{},"body":{"components/TabViewComponent.html":{}}}],["activetab",{"_index":3142,"title":{},"body":{"components/TabBarComponent.html":{}}}],["activeturn",{"_index":3746,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["activeturn(row",{"_index":3756,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["actual",{"_index":3800,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["actual_component",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["add",{"_index":3278,"title":{},"body":{"interfaces/TabsState.html":{}}}],["addon",{"_index":2493,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["addonwidth",{"_index":810,"title":{},"body":{"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["addpercentage",{"_index":3328,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["addpercentagetotariffs",{"_index":3298,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["addpercentagetotariffs(tariffs",{"_index":3304,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["address",{"_index":907,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/TruckDriverInfo.html":{}}}],["addtab",{"_index":3087,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["afterviewinit",{"_index":650,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["again",{"_index":2621,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["aliases",{"_index":4305,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allkeys",{"_index":2873,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["allloadannouncementplaces",{"_index":1475,"title":{},"body":{"components/HomePageComponent.html":{}}}],["alloptions",{"_index":2482,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["allow",{"_index":625,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["amount",{"_index":4146,"title":{},"body":{"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletTransaction.html":{}}}],["amount.mock",{"_index":4186,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["amount.model",{"_index":4184,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["amount.model.ts",{"_index":4145,"title":{},"body":{"interfaces/WalletDefaultAmount.html":{}}}],["amounttitle",{"_index":4147,"title":{},"body":{"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{}}}],["angular/common",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginPageComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":44,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["angular/compiler",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":494,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"components/SupportButtonComponent.html":{},"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["animateonscroll",{"_index":1474,"title":{},"body":{"components/HomePageComponent.html":{}}}],["announcedate",{"_index":1329,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["announcement",{"_index":173,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["announcementgroup",{"_index":94,"title":{"interfaces/AnnouncementGroup.html":{}},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementgroupandsubgroupform",{"_index":2207,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["announcementgroupformcomponent",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["announcementgroupid",{"_index":127,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementgroupinfo",{"_index":182,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementgroupinfo.announcementid",{"_index":202,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementgroupinfo.announcementtitle",{"_index":187,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementgroupsubgroupmanagementservice",{"_index":102,"title":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementgrouptitle",{"_index":2221,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementid",{"_index":98,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["announcementmanagement",{"_index":3196,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["announcementplace",{"_index":1512,"title":{},"body":{"components/HomePageComponent.html":{}}}],["announcementplace.description.includes(query",{"_index":1515,"title":{},"body":{"components/HomePageComponent.html":{}}}],["announcementplace.laptitle.includes(query",{"_index":1514,"title":{},"body":{"components/HomePageComponent.html":{}}}],["announcementservice",{"_index":2208,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementsgid",{"_index":207,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["announcementsgtitle",{"_index":208,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["announcementsubgroup",{"_index":167,"title":{"interfaces/AnnouncementSubGroup.html":{}},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["announcementsubgroup.mock",{"_index":2973,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["announcementsubgroup.model",{"_index":2440,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["announcementsubgroup.model.ts",{"_index":2334,"title":{},"body":{"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["announcementsubgroupformcomponent",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["announcementsubgroupid",{"_index":125,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["announcementsubgroupinfo",{"_index":206,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementsubgroupinfo.announcementsgid",{"_index":214,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementsubgroupinfo.announcementsgtitle",{"_index":209,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["announcementsubgroupinrelation",{"_index":228,"title":{"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/announcementSubGroupInRelation.html":{}},"body":{"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["announcementsubgroups",{"_index":219,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["announcementsubgroups[0].announcementsgid",{"_index":3005,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["announcementsubgrouptitle",{"_index":2222,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["announcementtitle",{"_index":99,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["announcetime",{"_index":1782,"title":{},"body":{"interfaces/LoadInfo.html":{}}}],["any)?.error?.message",{"_index":2095,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["api",{"_index":155,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/ApiGroupProcess.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["api_routes",{"_index":159,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["api_routes.softwareuserapi.authuser",{"_index":3923,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["api_routes.softwareuserapi.captcha",{"_index":571,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["api_routes.softwareuserapi.getuserofsession",{"_index":3965,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["api_routes.softwareuserapi.getvirtualwallet",{"_index":1217,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.softwareuserapi.getwebprocesses",{"_index":258,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["api_routes.softwareuserapi.sessionchecker",{"_index":3949,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["api_routes.softwareuserapi.usermanagement",{"_index":4125,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.activatesmsowner",{"_index":4103,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.editsoftwareuser",{"_index":4104,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.getsoftwareuserinfo",{"_index":4108,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.getsoftwareuserprofile",{"_index":4111,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.getusertypes",{"_index":4119,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.registeringsoftwareuser",{"_index":4106,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.resetsoftwareuserpassword",{"_index":4102,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.softwareuserapi.usermanagement.sendwebsitelink",{"_index":4099,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["api_routes.transportationapi.announcements",{"_index":216,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.announcements.groups",{"_index":197,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.announcements.groups.deleteannouncementgroup",{"_index":201,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.announcements.groups.editannouncementgroup",{"_index":200,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.announcements.groups.getannouncementgroups",{"_index":181,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.announcements.subgroups",{"_index":204,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["api_routes.transportationapi.driver.activatetruckdriversmsowner",{"_index":1168,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.gettruckdriverinfoforsoftwareuser",{"_index":1153,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.gettruckdriverinfofromlocalapi",{"_index":1145,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.gettruckdriverinfofromoutdoorapi",{"_index":1143,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.loadannouncementplaces",{"_index":1581,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["api_routes.transportationapi.driver.resettruckdriveruserpassword",{"_index":1169,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.sendwebsitelink",{"_index":1172,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.driver.truckdriverregisteringmobilenumber",{"_index":1164,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.fpc.activatefpcsmsowner",{"_index":1436,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.editfpc",{"_index":1435,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.fpcchangeactivestatus",{"_index":1438,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.fpcregistering",{"_index":1433,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.getfpc",{"_index":1430,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.getfpcs",{"_index":1429,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.fpc.resetfpcuserpassword",{"_index":1437,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.changedischargingplacestatus",{"_index":1568,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.changeloadingplacestatus",{"_index":1567,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.deleteladplace",{"_index":1566,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.getladplace",{"_index":1558,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.getladplaces",{"_index":1556,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.registerladplace",{"_index":1561,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.ladplaces.updateladplace",{"_index":1565,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["api_routes.transportationapi.loadcapacitor.getload",{"_index":1781,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["api_routes.transportationapi.loadertypes.changeloadertypestatus",{"_index":1884,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["api_routes.transportationapi.loadertypes.getloadertypeinfoforsoftwareuser",{"_index":1876,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["api_routes.transportationapi.loadertypes.getloadertypes",{"_index":1871,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["api_routes.transportationapi.producttypes.changeproductstatus",{"_index":2119,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["api_routes.transportationapi.producttypes.changeproducttypestatus",{"_index":2116,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["api_routes.transportationapi.producttypes.getproducts",{"_index":2113,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["api_routes.transportationapi.provinceandcities.changecitystatus",{"_index":2187,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["api_routes.transportationapi.provinceandcities.changeprovincestatus",{"_index":2183,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["api_routes.transportationapi.provinceandcities.getcities",{"_index":2177,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns",{"_index":2999,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns.deletesequentialturn",{"_index":2983,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns.editsequentialturn",{"_index":2982,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns.getsequentialturns",{"_index":2974,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns.registersequentialturn",{"_index":2980,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.sequentialturns.relationtoloadertypes",{"_index":2985,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["api_routes.transportationapi.tariffs.changetariffspercentage",{"_index":3327,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.tariffs.changetariffsstatus",{"_index":3331,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.tariffs.deletetariffs",{"_index":3329,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.tariffs.edittariffs",{"_index":3330,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.tariffs.gettariffs",{"_index":3318,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.tariffs.registertariff",{"_index":3332,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["api_routes.transportationapi.traveltime.changetraveltimestatus",{"_index":3516,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.traveltime.deletetraveltime",{"_index":3515,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.traveltime.edittraveltime",{"_index":3514,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.traveltime.gettraveltime",{"_index":3511,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.traveltime.gettraveltimes",{"_index":3506,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.traveltime.registertraveltime",{"_index":3513,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["api_routes.transportationapi.truck.changetrucknativeness",{"_index":1179,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.composedinfos",{"_index":1185,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.composedinfos.getcomposedtruckinfo",{"_index":1183,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.composedinfos.setcomposedtruckinfo",{"_index":1212,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.gettruckinfoforsoftwareuser",{"_index":1176,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.gettruckinfofromlocalapi",{"_index":1173,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.gettruckinfofromoutdoorapi",{"_index":1174,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.truck.gettrucknativeness",{"_index":1177,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["api_routes.transportationapi.turns.cancelturn",{"_index":3730,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.getaccounting",{"_index":3721,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.getlatestturns",{"_index":3717,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.getlatestturnsforsoftwareuser",{"_index":3719,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.reserveturnrequests",{"_index":3734,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.resuscitateturn",{"_index":3729,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.transportationapi.turns.turnregisterrequests",{"_index":3732,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getdefaultamounts",{"_index":4199,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getsmswallet",{"_index":4194,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.gettruckerassociationwallet",{"_index":4193,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.gettruckwallet",{"_index":4192,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getuserwallet",{"_index":4191,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getwalletbalance",{"_index":4195,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getwalletpaymentrecords",{"_index":4215,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletinfo.getwallettransactions",{"_index":4203,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["api_routes.walletandtrafficapi.walletrequests.paymentrequest",{"_index":4202,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["apicommunicationmanagementservice",{"_index":1,"title":{"injectables/APICommunicationManagementService.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["apicommunicator",{"_index":106,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["apigroupprocess",{"_index":230,"title":{"interfaces/ApiGroupProcess.html":{}},"body":{"interfaces/ApiGroupProcess.html":{},"injectables/ApiProcessesService.html":{},"injectables/UserManagementService.html":{}}}],["apigroups",{"_index":254,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["apigroups.map((group",{"_index":269,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["apiprocess",{"_index":238,"title":{"interfaces/ApiProcess.html":{}},"body":{"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/UserManagementService.html":{}}}],["apiprocessesservice",{"_index":246,"title":{"injectables/ApiProcessesService.html":{}},"body":{"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{}}}],["apiresponse",{"_index":47,"title":{"interfaces/ApiResponse.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"miscellaneous/functions.html":{}}}],["apiurl",{"_index":180,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["apiusernamepassword",{"_index":85,"title":{"interfaces/APIUsernamePassword.html":{}},"body":{"interfaces/APIUsernamePassword.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{},"interfaces/UsernamePassword.html":{}}}],["app",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["app.component.html",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/forms/announcement",{"_index":3182,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/factories",{"_index":3168,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/forget",{"_index":1392,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{}}}],["app/components/forms/lad",{"_index":3176,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/load",{"_index":3172,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/loader",{"_index":3173,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/login",{"_index":1975,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["app/components/forms/product",{"_index":3175,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/province",{"_index":3174,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/sequential",{"_index":3185,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/tariffs",{"_index":3180,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/travel",{"_index":3178,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/truck",{"_index":3166,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/turns",{"_index":3188,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/forms/user",{"_index":3164,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/shared/dialog/new",{"_index":1000,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["app/components/shared/footer/footer.component",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/form",{"_index":1389,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["app/components/shared/full",{"_index":1386,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["app/components/shared/header/header.component",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/inputs/binary",{"_index":4002,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["app/components/shared/inputs/captcha",{"_index":1939,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["app/components/shared/inputs/date",{"_index":2425,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["app/components/shared/inputs/password",{"_index":1937,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["app/components/shared/inputs/search",{"_index":2263,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/components/shared/inputs/select",{"_index":4001,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["app/components/shared/inputs/text",{"_index":1258,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["app/components/shared/inputs/time",{"_index":2427,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["app/components/shared/main",{"_index":3187,"title":{},"body":{"interfaces/TabView.html":{}}}],["app/components/shared/sidebar/sidebar.component",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/sub",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/support",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/tab",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["app/components/shared/terminal",{"_index":1500,"title":{},"body":{"components/HomePageComponent.html":{}}}],["app/components/trees/tree",{"_index":2147,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["app/constants/api",{"_index":160,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["app/constants/error",{"_index":1127,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["app/constants/routes",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"components/SupportButtonComponent.html":{},"components/TerminalCardComponent.html":{},"injectables/UserAuthService.html":{}}}],["app/constants/tab",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{},"interfaces/TabItem.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{}}}],["app/constants/titles",{"_index":1366,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{}}}],["app/constants/validation",{"_index":853,"title":{},"body":{"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/data/mock/api",{"_index":4097,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["app/data/mock/captcha",{"_index":569,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["app/data/mock/cargo",{"_index":1579,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["app/data/mock/fpc",{"_index":1428,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["app/data/mock/lad",{"_index":1554,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["app/data/mock/load",{"_index":1780,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["app/data/mock/page",{"_index":264,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["app/data/mock/product",{"_index":2112,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["app/data/mock/province",{"_index":2175,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["app/data/mock/short",{"_index":165,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/mock/software",{"_index":3939,"title":{},"body":{"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/mock/tariff.mock",{"_index":3317,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["app/data/mock/travel",{"_index":3504,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["app/data/mock/user",{"_index":3936,"title":{},"body":{"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/mock/username",{"_index":1132,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/model/api",{"_index":48,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["app/data/model/captcha",{"_index":566,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["app/data/model/fpc",{"_index":1426,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["app/data/model/header",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["app/data/model/lad",{"_index":1552,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["app/data/model/load",{"_index":1497,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/TerminalCardComponent.html":{}}}],["app/data/model/login",{"_index":3929,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["app/data/model/menu",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{}}}],["app/data/model/page",{"_index":262,"title":{},"body":{"injectables/ApiProcessesService.html":{},"interfaces/SidebarState.html":{}}}],["app/data/model/product",{"_index":2059,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["app/data/model/province",{"_index":2148,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["app/data/model/ptp",{"_index":1697,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["app/data/model/short",{"_index":59,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/data/model/software",{"_index":2764,"title":{},"body":{"interfaces/SelectedNodes.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/data/model/tabs.model",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabsState.html":{}}}],["app/data/model/tariff.model",{"_index":3315,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["app/data/model/travel",{"_index":3501,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["app/data/model/user",{"_index":3931,"title":{},"body":{"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/model/username",{"_index":1121,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["app/data/model/web",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{}}}],["app/services/announcement_group_subgroup_management/announcement",{"_index":2266,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["app/services/announcement_group_subgroup_management/mock/announcement",{"_index":162,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["app/services/announcement_group_subgroup_management/model/announcement",{"_index":157,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["app/services/announcement_group_subgroup_management/model/relation",{"_index":2267,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["app/services/api",{"_index":265,"title":{},"body":{"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{}}}],["app/services/captcha",{"_index":534,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["app/services/cryptography",{"_index":1940,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["app/services/driver",{"_index":989,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["app/services/load",{"_index":1700,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["app/services/loadannouncementplaces/load",{"_index":1504,"title":{},"body":{"components/HomePageComponent.html":{}}}],["app/services/loader",{"_index":1820,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["app/services/loading",{"_index":993,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/services/product",{"_index":2061,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["app/services/province",{"_index":2151,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["app/services/sequential",{"_index":2376,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["app/services/toast",{"_index":536,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SupportButtonComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["app/services/turn",{"_index":1253,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["app/services/user",{"_index":261,"title":{},"body":{"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SupportButtonComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["app/services/wallet",{"_index":1138,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["app/store/sidebar/sidebar.actions",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarState.html":{}}}],["app/store/sidebar/sidebar.selectors",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{}}}],["app/store/tabs/tabs.actions",{"_index":3088,"title":{},"body":{"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{}}}],["app/store/tabs/tabs.selectors",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabBarComponent.html":{}}}],["app/utils/api",{"_index":1256,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["app/utils/http",{"_index":51,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["app_routes",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"components/SupportButtonComponent.html":{},"components/TerminalCardComponent.html":{},"injectables/UserAuthService.html":{}}}],["app_routes.auth.forget_password",{"_index":1925,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["app_routes.auth.login",{"_index":3338,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["appcomponent",{"_index":287,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["apptitles",{"_index":1365,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoginFormComponent.html":{}}}],["apptitles.appbrokentitle",{"_index":1375,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["apptitles.apponlinetitle",{"_index":1496,"title":{},"body":{"components/HomePageComponent.html":{}}}],["apptitles.footertitle",{"_index":1364,"title":{},"body":{"components/FooterComponent.html":{}}}],["area",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["async",{"_index":16,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["asynchronous",{"_index":2518,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["asynchronously",{"_index":2625,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["asyncpipe",{"_index":1888,"title":{},"body":{"components/LoadingComponent.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{}}}],["asyncpipe,ngtemplateoutlet",{"_index":3034,"title":{},"body":{"components/SidebarComponent.html":{}}}],["asyncpipe,progressspinnermodule",{"_index":1897,"title":{},"body":{"components/LoadingComponent.html":{}}}],["asyncsearchfn",{"_index":2641,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["auth",{"_index":152,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["auth.data?.issessionlive",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth.service",{"_index":154,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["auth.service.ts",{"_index":3906,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:112",{"_index":3915,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:19",{"_index":3924,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:20",{"_index":3928,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:22",{"_index":3926,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:23",{"_index":3922,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:24",{"_index":3927,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:26",{"_index":3918,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:63",{"_index":3919,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:68",{"_index":3916,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:95",{"_index":3913,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:99",{"_index":3921,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.success",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authority",{"_index":4218,"title":{},"body":{"interfaces/WalletPaymentRequest.html":{}}}],["auto",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["autocomplete",{"_index":2285,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["autocompletemodule",{"_index":2470,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["autocompleteselectevent",{"_index":2567,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["autotriggersearch",{"_index":2642,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["avoid",{"_index":2585,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["await",{"_index":73,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["backend",{"_index":2290,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/UserInfoFormComponent.html":{}}}],["background",{"_index":622,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"components/FullScreenBackgroundComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["background'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["background.component",{"_index":1388,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["background.component.html",{"_index":1442,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.scss",{"_index":1443,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.ts",{"_index":1440,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.ts:11",{"_index":1454,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.ts:12",{"_index":1451,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.ts:13",{"_index":1449,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background.component.ts:14",{"_index":1452,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["background/full",{"_index":1387,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/LoginPageComponent.html":{}}}],["background_form_login.webp",{"_index":1453,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["backgroundposition",{"_index":1444,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["backgroundsize",{"_index":1445,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["backgroundsize:string",{"_index":1455,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["badrequest",{"_index":4264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["balance",{"_index":4141,"title":{},"body":{"interfaces/Wallet.html":{},"injectables/WalletManagementService.html":{}}}],["bar",{"_index":3124,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar'},{'name",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["bar.component",{"_index":3037,"title":{},"body":{"components/SidebarComponent.html":{}}}],["bar.component.html",{"_index":3126,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.scss",{"_index":3127,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts",{"_index":3123,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3139,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3138,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3141,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3140,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:23",{"_index":3133,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:30",{"_index":3135,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:34",{"_index":3137,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar/tab",{"_index":3036,"title":{},"body":{"components/SidebarComponent.html":{},"components/TabBarComponent.html":{}}}],["barcode",{"_index":1592,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["base",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["based",{"_index":866,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["basetonnag",{"_index":3293,"title":{},"body":{"interfaces/Tariff.html":{}}}],["before",{"_index":2524,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["behavior",{"_index":2593,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{}}}],["behaviorsubject",{"_index":1910,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1908,"title":{},"body":{"injectables/LoadingService.html":{}}}],["between",{"_index":2693,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["billofladingnumber",{"_index":1197,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["binary",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["binaryradioinputcomponent",{"_index":321,"title":{"components/BinaryRadioInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["blur",{"_index":1446,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{}}}],["bodyvalue",{"_index":35,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["bodyvalue.goodid",{"_index":3326,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["bodyvalue.sourcecityid",{"_index":3322,"title":{},"body":{"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["bodyvalue.targetcityid",{"_index":3324,"title":{},"body":{"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["boolean",{"_index":100,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"interfaces/FPCInfo.html":{},"interfaces/LADPlace.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoadingService.html":{},"interfaces/LoginFormData.html":{},"interfaces/PTPInfo.html":{},"components/PasswordInputComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SupportButtonComponent.html":{},"interfaces/TabItem.html":{},"interfaces/Tariff.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TravelTime.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["bottom",{"_index":819,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{}}}],["bound",{"_index":2509,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["box",{"_index":2533,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["bpt",{"_index":4295,"title":{},"body":{"index.html":{}}}],["browser",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["buildtreemap",{"_index":3517,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["buildtreemap(nodes",{"_index":2904,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["built",{"_index":4294,"title":{},"body":{"index.html":{}}}],["button",{"_index":2686,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SupportButtonComponent.html":{}}}],["button'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["button.component",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{}}}],["button.component.html",{"_index":3102,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.scss",{"_index":3103,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts",{"_index":3099,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3114,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:28",{"_index":3109,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:35",{"_index":3111,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:39",{"_index":3112,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:44",{"_index":3113,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button.component.ts:49",{"_index":3110,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["button/support",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{},"components/SupportButtonComponent.html":{}}}],["buttondisabled",{"_index":3345,"title":{},"body":{"components/TextInputComponent.html":{}}}],["buttonicon",{"_index":3346,"title":{},"body":{"components/TextInputComponent.html":{}}}],["buttonicon.trim",{"_index":3366,"title":{},"body":{"components/TextInputComponent.html":{}}}],["buttonmodule",{"_index":654,"title":{},"body":{"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"components/SupportButtonComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["buttonmodule,searchinputcomponent",{"_index":2847,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["cache",{"_index":2544,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["cached",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TabViewComponent.html":{}}}],["cached.hostview.destroyed",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cachedproducts",{"_index":2018,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["cachedprovincesandcites",{"_index":2125,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["cachedresults",{"_index":2473,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["cachekeylength",{"_index":2019,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["caching",{"_index":2503,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["cachingenabled",{"_index":2020,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["cachingmode",{"_index":2483,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["calculationreference",{"_index":3294,"title":{},"body":{"interfaces/Tariff.html":{}}}],["calendar",{"_index":823,"title":{},"body":{"components/DatePickerInput.html":{}}}],["call",{"_index":1024,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["called",{"_index":4012,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["calling",{"_index":2620,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["cancelturn",{"_index":3683,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["cancelturn(turnid",{"_index":3693,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["capacitor",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["capacitorform",{"_index":1585,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["capacitorservice",{"_index":1586,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["captcha",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["captcha.data",{"_index":542,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captcha.data.imagedata",{"_index":548,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captcha.error?.message",{"_index":544,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captcha.success",{"_index":541,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchachallenge",{"_index":508,"title":{"interfaces/CaptchaChallenge.html":{}},"body":{"interfaces/CaptchaChallenge.html":{},"injectables/CaptchaService.html":{}}}],["captchacomponent",{"_index":1914,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["captchainputcomponent",{"_index":325,"title":{"components/CaptchaInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["captchainputcontrol",{"_index":520,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors",{"_index":554,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors['minlength",{"_index":556,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors['minlength'].requiredlength",{"_index":557,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors['required",{"_index":555,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors[\\'minlength",{"_index":559,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors[\\'minlength\\'].requiredlength",{"_index":560,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.errors[\\'required",{"_index":558,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchainputcontrol.touched",{"_index":553,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["captchaservice",{"_index":524,"title":{"injectables/CaptchaService.html":{}},"body":{"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{}}}],["card",{"_index":1395,"title":{},"body":{"components/FormCardComponent.html":{},"components/TerminalCardComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["card'},{'name",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["card.component",{"_index":1391,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["card.component.html",{"_index":1397,"title":{},"body":{"components/FormCardComponent.html":{},"components/TerminalCardComponent.html":{}}}],["card.component.scss",{"_index":1398,"title":{},"body":{"components/FormCardComponent.html":{},"components/TerminalCardComponent.html":{}}}],["card.component.ts",{"_index":1394,"title":{},"body":{"components/FormCardComponent.html":{},"components/TerminalCardComponent.html":{}}}],["card.component.ts:14",{"_index":3335,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["card.component.ts:16",{"_index":3336,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["card/form",{"_index":1390,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/LoginPageComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["card/terminal",{"_index":1501,"title":{},"body":{"components/HomePageComponent.html":{},"components/TerminalCardComponent.html":{}}}],["cardmodule",{"_index":1396,"title":{},"body":{"components/FormCardComponent.html":{},"components/SubMenuComponent.html":{},"components/TerminalCardComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["case",{"_index":2078,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["catch",{"_index":78,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/DriverInfoFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["center",{"_index":1448,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["centers",{"_index":3170,"title":{},"body":{"interfaces/TabView.html":{}}}],["challenge.mock",{"_index":570,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["challenge.model",{"_index":567,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["challenge.model.ts",{"_index":510,"title":{},"body":{"interfaces/CaptchaChallenge.html":{}}}],["change",{"_index":2041,"title":{},"body":{"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchInputComponent.html":{}}}],["change.children",{"_index":2074,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["change.parent",{"_index":2073,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["changecitystatus",{"_index":2165,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["changecitystatus(citycode",{"_index":2168,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["changedischargingplacestatus",{"_index":1530,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["changedischargingplacestatus(ladplaceid",{"_index":1537,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["changeintervalid",{"_index":3369,"title":{},"body":{"components/TimePickerInput.html":{}}}],["changeloadertypestatus",{"_index":1855,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["changeloadertypestatus(loadertypeid",{"_index":1859,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["changeloadingplacestatus",{"_index":1531,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["changeloadingplacestatus(ladplaceid",{"_index":1539,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["changenativeness",{"_index":3606,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["changeproductstatus",{"_index":2103,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["changeproductstatus(productid",{"_index":2106,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["changeproducttypestatus",{"_index":2104,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["changeproducttypestatus(producttypeid",{"_index":2108,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["changeprovincestatus",{"_index":2166,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["changeprovincestatus(provinceid",{"_index":2170,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["changes",{"_index":481,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["changes['disabled",{"_index":503,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["changes['staticdata",{"_index":2720,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["changes['staticdata'].firstchange",{"_index":2721,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["changes['tree",{"_index":2871,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["changesoftwareuserwebprocessaccess",{"_index":4126,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["changesoftwareuserwebprocessgroupaccess",{"_index":4130,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["changetariffsstatus",{"_index":3299,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["changetariffsstatus(tariffs",{"_index":3307,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["changetraveltimestatus",{"_index":3484,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["changetraveltimestatus(loadertypeid",{"_index":3490,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["changetrucknativeness",{"_index":1068,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["changetrucknativeness(truckid",{"_index":1083,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["changeuserwebprocessaccess",{"_index":4065,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["changeuserwebprocessaccess(userid",{"_index":4076,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["changeuserwebprocessgroupaccess",{"_index":4066,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["changeuserwebprocessgroupaccess(userid",{"_index":4078,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["characterprefix",{"_index":2504,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["characters",{"_index":2523,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["check",{"_index":921,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["checkandtoasterror",{"_index":1255,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{},"miscellaneous/functions.html":{}}}],["checkandtoasterror(driverresponse",{"_index":3577,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["checkandtoasterror(loadertyperesponse",{"_index":3572,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["checkandtoasterror(res",{"_index":2276,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"miscellaneous/functions.html":{}}}],["checkandtoasterror(rescomposed",{"_index":3870,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["checkandtoasterror(response",{"_index":1267,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["checkandtoasterror(restruckinfo",{"_index":3782,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["checkandtoasterror(resturnsinfo",{"_index":3789,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["checkandtoasterror(truckresponse",{"_index":3567,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["checkbox",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["checkbox'},{'name",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["checkbox.component",{"_index":2058,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["checkbox.component.html",{"_index":2845,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":2846,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":2842,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:116",{"_index":3540,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:121",{"_index":3546,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:144",{"_index":3537,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:154",{"_index":3539,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:161",{"_index":3543,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:168",{"_index":3538,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:36",{"_index":3551,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:38",{"_index":3534,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:39",{"_index":3529,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:40",{"_index":3523,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:41",{"_index":3524,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:42",{"_index":3530,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:43",{"_index":3526,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:44",{"_index":3532,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:45",{"_index":3533,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:46",{"_index":3527,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:47",{"_index":3531,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:48",{"_index":3528,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:49",{"_index":3525,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:51",{"_index":3536,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:52",{"_index":3535,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:54",{"_index":3550,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:55",{"_index":3549,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:56",{"_index":3547,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:57",{"_index":3548,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:59",{"_index":3542,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:65",{"_index":3541,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox.component.ts:73",{"_index":3544,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["checkbox/tree",{"_index":2057,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["checkboxinputcomponent",{"_index":327,"title":{"components/CheckboxInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["checkboxmodule",{"_index":577,"title":{},"body":{"components/CheckboxInputComponent.html":{},"components/LoaderTypeFormComponent.html":{}}}],["checked",{"_index":1742,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/PTPInfo.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["child",{"_index":2077,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["child.data?.[filed]?.tolowercase().includes(q",{"_index":2927,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["child.data?.[this.childfield",{"_index":2901,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["child.styleclass",{"_index":2928,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["childfield",{"_index":2851,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["childkey",{"_index":2900,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["childmatch",{"_index":2926,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["childnode.checked",{"_index":2831,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["childnode.partialselected",{"_index":2832,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["children",{"_index":2070,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["children.length",{"_index":2075,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["children.map",{"_index":2086,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["children[0",{"_index":2079,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["chooses",{"_index":2692,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["circle",{"_index":2308,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["cities",{"_index":596,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"injectables/ProvinceAndCityManagementService.html":{}}}],["city",{"_index":386,"title":{"interfaces/City.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["city.mock",{"_index":2176,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["city.model",{"_index":2149,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["city.model.ts",{"_index":589,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{}}}],["cityactive",{"_index":590,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["citycode",{"_index":591,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["cityid",{"_index":2189,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["cityinfo",{"_index":2188,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["cityinfo.cityactive",{"_index":2191,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["cityinfo.citycode",{"_index":2190,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["citytitle",{"_index":592,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{}}}],["class",{"_index":63,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["clean",{"_index":3776,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["cleanup",{"_index":1259,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TimePickerInput.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["clear",{"_index":2602,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["clearcached",{"_index":2478,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["cleared",{"_index":2282,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["clearinterval(this.changeintervalid",{"_index":3456,"title":{},"body":{"components/TimePickerInput.html":{}}}],["clears",{"_index":2543,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["clickbutton",{"_index":3347,"title":{},"body":{"components/TextInputComponent.html":{}}}],["clicks",{"_index":2685,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["client",{"_index":2497,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["clipboard",{"_index":917,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["closable",{"_index":2309,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SubMenuComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabsState.html":{}}}],["closable:boolean",{"_index":3158,"title":{},"body":{"interfaces/TabItem.html":{}}}],["closeonescape",{"_index":2310,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["closesidebar",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{}}}],["closetab",{"_index":3143,"title":{},"body":{"components/TabBarComponent.html":{}}}],["closetabsub",{"_index":657,"title":{},"body":{"components/DashboardComponent.html":{}}}],["code",{"_index":284,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/LoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["col",{"_index":2329,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["col.header",{"_index":4137,"title":{},"body":{"components/UsersMenuAccessFormComponent.html":{}}}],["color",{"_index":617,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["colorscheme",{"_index":597,"title":{"interfaces/ColorScheme.html":{}},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["cols",{"_index":2209,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["columns",{"_index":2330,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["combining",{"_index":634,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["command",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/MenuItemData.html":{}}}],["commonmodule",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoginPageComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"components/TabViewComponent.html":{},"components/TimePickerInput.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["commonmodule,loginformcomponent,fullscreenbackgroundcomponent,formcardcomponent",{"_index":1976,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["communicatewithapi_get",{"_index":17,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["communicatewithapi_get(url",{"_index":19,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["communicatewithapi_post",{"_index":18,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["communicatewithapi_post(url",{"_index":34,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["communication",{"_index":7,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["compare",{"_index":2584,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["comparefn",{"_index":2748,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["comparefn(o1",{"_index":2750,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["complete",{"_index":631,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["complete'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["complete.component",{"_index":2265,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["complete.component.html",{"_index":2471,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.scss",{"_index":2472,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts",{"_index":2469,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:101",{"_index":2540,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:104",{"_index":2538,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:109",{"_index":2550,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:117",{"_index":2546,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:126",{"_index":2572,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:138",{"_index":2558,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:151",{"_index":2553,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:168",{"_index":2562,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:235",{"_index":2568,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:242",{"_index":2571,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:249",{"_index":2542,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:36",{"_index":2573,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:39",{"_index":2576,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:42",{"_index":2579,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:43",{"_index":2578,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:44",{"_index":2577,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:46",{"_index":2574,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:51",{"_index":2532,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:54",{"_index":2534,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:57",{"_index":2510,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:60",{"_index":2512,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:63",{"_index":2513,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:66",{"_index":2505,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:69",{"_index":2491,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:72",{"_index":2508,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:75",{"_index":2500,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:78",{"_index":2526,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:81",{"_index":2531,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:84",{"_index":2521,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:87",{"_index":2495,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:90",{"_index":2535,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete.component.ts:96",{"_index":2517,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["complete/search",{"_index":2264,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["component",{"_index":286,"title":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{},"miscellaneous/enumerations.html":{}}}],["component:mainviewcomponent",{"_index":3215,"title":{},"body":{"interfaces/TabView.html":{}}}],["component:tabcomponentkey",{"_index":3159,"title":{},"body":{"interfaces/TabItem.html":{}}}],["component_template",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["componentcache",{"_index":658,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["componentname",{"_index":629,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["componentref",{"_index":707,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["components",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SemanticTokens.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"overview.html":{}}}],["components/shared/inputs/search",{"_index":1502,"title":{},"body":{"components/HomePageComponent.html":{}}}],["components/shared/loading/loading.component",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["componenttokens",{"_index":628,"title":{"interfaces/ComponentTokens.html":{}},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["componenttoload",{"_index":3093,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["componenttoload:tabcomponentkey",{"_index":3090,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["compref",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["compref.destroy",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["compref.instance.views",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["config",{"_index":3864,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["confirmactivation",{"_index":3747,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["confirmactivation(rowdata",{"_index":3758,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["confirmation",{"_index":2304,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["confirmationservice",{"_index":2203,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["confirmdeactivation",{"_index":3748,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["confirmdeactivation(rowdata",{"_index":3761,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["confirmdialogmodule",{"_index":2204,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["console.error('api",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(captcha.error?.details",{"_index":545,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["console.log(process.title",{"_index":3089,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["console.log(response",{"_index":2100,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["console.log(this.truckinfo",{"_index":3581,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["console.log(this.userauth.getsessionid",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["const",{"_index":71,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["constants",{"_index":3858,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["function Object() { [native code] }",{"_index":522,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/SidebarComponent.html":{},"components/SupportButtonComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["constructor(auth",{"_index":3108,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["constructor(captchaservice",{"_index":523,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["constructor(fb",{"_index":1373,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["constructor(lap",{"_index":1482,"title":{},"body":{"components/HomePageComponent.html":{}}}],["constructor(private",{"_index":538,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(store",{"_index":1460,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["consts",{"_index":179,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["container",{"_index":659,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contextual",{"_index":608,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["continue",{"_index":2887,"title":{},"body":{"interfaces/SelectionKey.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["control",{"_index":465,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["control(value",{"_index":500,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["control.get(\"code\")?.value",{"_index":1842,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get(\"cost\")?.value",{"_index":1772,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["control.get(\"id\")?.value",{"_index":1841,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get(\"title\")?.value",{"_index":1843,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get(\"tptpdid\")?.value",{"_index":1770,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["control.get(\"tptptitle\")?.value",{"_index":1771,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["control.get(\"type\")?.value",{"_index":1844,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get('id')?.value",{"_index":1830,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get('status",{"_index":1833,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get('status')?.setvalue(!status",{"_index":1834,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.get('status')?.value",{"_index":1831,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["control.setvalue",{"_index":2384,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["control.setvalue(max",{"_index":3445,"title":{},"body":{"components/TimePickerInput.html":{}}}],["control.setvalue(min",{"_index":3444,"title":{},"body":{"components/TimePickerInput.html":{}}}],["control.setvalue(string(val).padstart(2",{"_index":3460,"title":{},"body":{"components/TimePickerInput.html":{}}}],["control.setvalue(val",{"_index":3435,"title":{},"body":{"components/TimePickerInput.html":{}}}],["control.touched",{"_index":3367,"title":{},"body":{"components/TextInputComponent.html":{}}}],["control.valuechanges.pipe(takeuntil(this.destroy$)).subscribe((value",{"_index":3440,"title":{},"body":{"components/TimePickerInput.html":{}}}],["controller",{"_index":2233,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["controller.setvalue",{"_index":2283,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["controls",{"_index":1021,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TimePickerInput.html":{}}}],["controlsubscription",{"_index":2634,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["convert",{"_index":2294,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["convertapigroupstopagegroups",{"_index":250,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["convertapigroupstopagegroups(apigroups",{"_index":252,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["converttotreenode",{"_index":2024,"title":{},"body":{"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{}}}],["converttotreenode(productstype",{"_index":2030,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["converttotreenode(provinces",{"_index":2132,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["cookie",{"_index":3934,"title":{},"body":{"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":3907,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["copy",{"_index":915,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["copy/emergency",{"_index":1221,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"interfaces/TabView.html":{}}}],["copytoclipboard",{"_index":892,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/SupportButtonComponent.html":{}}}],["copytoclipboard(text",{"_index":913,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{}}}],["core",{"_index":2691,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["cost",{"_index":1740,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/PTPInfo.html":{}}}],["cover",{"_index":1450,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["createloadergroup",{"_index":1799,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["createloadergroup(item",{"_index":1805,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["createptpgroup",{"_index":1588,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["createptpgroup(item",{"_index":1612,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["createreducer",{"_index":3056,"title":{},"body":{"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{}}}],["credentials",{"_index":932,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["crypto",{"_index":646,"title":{},"body":{"injectables/CryptographyService.html":{},"dependencies.html":{}}}],["cryptography",{"_index":1915,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["cryptographyservice",{"_index":640,"title":{"injectables/CryptographyService.html":{}},"body":{"injectables/CryptographyService.html":{},"components/LoginFormComponent.html":{}}}],["css",{"_index":2492,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["current",{"_index":2541,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["current?.checked",{"_index":2883,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["current?.partialchecked",{"_index":2885,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["currentbalance",{"_index":4210,"title":{},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletTransaction.html":{}}}],["currentkey",{"_index":2610,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["currentsearchterm",{"_index":1476,"title":{},"body":{"components/HomePageComponent.html":{}}}],["customization",{"_index":626,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"components/SearchInputComponent.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["danger",{"_index":2316,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["dark",{"_index":614,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["dashboard",{"_index":652,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["dashboard.component.html",{"_index":655,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":656,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":329,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["data",{"_index":69,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/TabView.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["data.active",{"_index":195,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["data.amount",{"_index":4201,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.amounttitle.trim",{"_index":4200,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.announcementid",{"_index":193,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["data.announcementsgid",{"_index":210,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["data.announcementsgtitle?.trim",{"_index":211,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["data.announcementsubgroups.map((subdata",{"_index":3003,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.announcementsubgroups?.map((subdata",{"_index":221,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["data.announcementtitle?.trim",{"_index":194,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["data.currentbalance",{"_index":4211,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.dateshamsi?.trim",{"_index":3726,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["data.flatmap((group",{"_index":2396,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["data.flatmap(group",{"_index":2297,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["data.loadertypes.map((subdata",{"_index":2989,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.model",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserAuthService.html":{}}}],["data.model.ts",{"_index":1468,"title":{},"body":{"interfaces/HeaderData.html":{},"interfaces/LoginFormData.html":{}}}],["data.reminder",{"_index":4213,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.seqturnid",{"_index":2977,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.seqturnkeyword",{"_index":2979,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.seqturnkeyword?.trim",{"_index":2998,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.seqturntitle?.trim",{"_index":2978,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["data.sequentialturnid?.trim",{"_index":3725,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["data.shamsidate.trim",{"_index":4208,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.time.trim",{"_index":4209,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.time?.trim",{"_index":3727,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["data.transactioncolor.trim",{"_index":4207,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.transactiontitle.trim",{"_index":4205,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.turnid",{"_index":3724,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["data.username.trim",{"_index":4214,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["data.username?.trim",{"_index":3728,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["data:image/png;base64",{"_index":547,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["dataformat",{"_index":3561,"title":{"interfaces/dataFormat.html":{}},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["date",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["date(date.now",{"_index":3962,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["date.now",{"_index":3629,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["dateoflastchanged",{"_index":1205,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["datepicker",{"_index":847,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{},"dependencies.html":{}}}],["datepickerinput",{"_index":331,"title":{"components/DatePickerInput.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["datepickerposition",{"_index":811,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{}}}],["dateshamsi",{"_index":3682,"title":{},"body":{"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{}}}],["deactivate",{"_index":3277,"title":{},"body":{"interfaces/TabsState.html":{}}}],["deactiveturn",{"_index":3749,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["deactiveturn(row",{"_index":3763,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["debouncetime",{"_index":2709,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["debouncetimems",{"_index":2643,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["decide",{"_index":4032,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["decorators",{"_index":688,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SidebarComponent.html":{},"components/TabViewComponent.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["decrease",{"_index":3461,"title":{},"body":{"components/TimePickerInput.html":{}}}],["decrement",{"_index":3374,"title":{},"body":{"components/TimePickerInput.html":{}}}],["decrement(control",{"_index":3381,"title":{},"body":{"components/TimePickerInput.html":{}}}],["default",{"_index":38,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{}}}],["defined",{"_index":22,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SemanticTokens.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["defines",{"_index":615,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["definition",{"_index":2273,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["delete",{"_index":2303,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["deleteannouncementgroup",{"_index":108,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleteannouncementgroup(id",{"_index":119,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleteannouncementsubgroup",{"_index":109,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleteannouncementsubgroup(id",{"_index":122,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleteladplace",{"_index":1532,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["deleteladplace(ladplaceid",{"_index":1541,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["deleterelationannouncement",{"_index":2213,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["deleterelationannouncement(row",{"_index":2223,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["deleterelationofannouncementgroupandsubgroup",{"_index":110,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleterelationofannouncementgroupandsubgroup(announcementgroupid",{"_index":124,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["deleterelationofsequentialturntoannouncementsubgroup",{"_index":2934,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deleterelationofsequentialturntoannouncementsubgroup(sequentialturnid",{"_index":2945,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deleterelationofsequentialturntoloadertype",{"_index":2935,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deleterelationofsequentialturntoloadertype(sequentialturnid",{"_index":2947,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deleterelationsequentialtoloader",{"_index":2340,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["deleterelationsequentialtoloader(row",{"_index":2348,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["deleterelationtoannouncementsubgroupdeleting",{"_index":3007,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deleterelationtoloadertype",{"_index":2994,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deletesequentialturn",{"_index":2936,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deletesequentialturn(id",{"_index":2949,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["deletetariffs",{"_index":3300,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["deletetariffs(tariffs",{"_index":3309,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["deletetraveltime",{"_index":3485,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["deletetraveltime(loaderid",{"_index":3492,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["dependencies",{"_index":4223,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":2271,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["depending",{"_index":2627,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["description",{"_index":240,"title":{},"body":{"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/LoadAnnouncementPlace.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/SelectedNodes.html":{},"injectables/TurnManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/WebProcess.html":{}}}],["descriptions",{"_index":1229,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["destroy",{"_index":883,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["detail",{"_index":3466,"title":{},"body":{"injectables/ToastService.html":{}}}],["details",{"_index":285,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/DashboardComponent.html":{}}}],["detect",{"_index":2547,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["devtools",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["dialog",{"_index":933,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SupportButtonComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dialog'},{'name",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["dialog.component",{"_index":1002,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dialog.component.html",{"_index":1987,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1988,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1986,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":1992,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":1990,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1989,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1991,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialog/new",{"_index":1001,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dialogmodule",{"_index":880,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/SupportButtonComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dialogmodule,buttonmodule",{"_index":1993,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["dialogservice",{"_index":879,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dialogturnaccounting",{"_index":3738,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["directive",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["directives",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disable",{"_index":2502,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disabled",{"_index":466,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["disablepromises",{"_index":2777,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disablepromises.push",{"_index":2782,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disablerefresh",{"_index":517,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["disableresults",{"_index":2788,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disableresults.find",{"_index":2791,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["disablesearchbutton",{"_index":2644,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["dischargingactive",{"_index":1520,"title":{},"body":{"interfaces/LADPlace.html":{}}}],["dischargingplace",{"_index":1337,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["dischargingplaceid",{"_index":1607,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["dischargingplacetitle",{"_index":1608,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["display",{"_index":855,"title":{},"body":{"components/DatePickerInput.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["displayedloadannouncementplaces",{"_index":1477,"title":{},"body":{"components/HomePageComponent.html":{}}}],["displaying",{"_index":2269,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["distinctuntilchanged",{"_index":2710,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["dom",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["drawermodule",{"_index":3011,"title":{},"body":{"components/SidebarComponent.html":{}}}],["driver",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["driver's",{"_index":931,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driver?.driverid",{"_index":3875,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["driver?.namefamily",{"_index":3877,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["driver?.nationalcode",{"_index":3876,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["driver_truckmanagement",{"_index":3214,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["driver_truckmanagementservice",{"_index":988,"title":{"injectables/Driver_TruckManagementService.html":{}},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["driver_truckmanager",{"_index":3555,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["driverdataforhtml",{"_index":3556,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["driverform",{"_index":884,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverid",{"_index":900,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/TruckDriverInfo.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["driverinfo",{"_index":929,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["driverinfo.address",{"_index":1055,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.driverid",{"_index":1048,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.drivinglicenseno",{"_index":1053,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.fathername",{"_index":1052,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.mobilenumber",{"_index":1051,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.namefamily",{"_index":1050,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.nationalcode",{"_index":1049,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfo.smartcardno",{"_index":1054,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["driverinfoformcomponent",{"_index":334,"title":{"components/DriverInfoFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["drivername",{"_index":3828,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["drivernationalid",{"_index":3829,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["driverresponse",{"_index":3575,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["driverresponse.data",{"_index":3579,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["drivertruckmanager",{"_index":885,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["drivertruckwalletformcomponent",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["drivinglicenseno",{"_index":1160,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckDriverInfo.html":{}}}],["dropdown",{"_index":2590,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["dynamic",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1286,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"miscellaneous/functions.html":{}}}],["e.email",{"_index":1288,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.g",{"_index":3438,"title":{},"body":{"components/TimePickerInput.html":{}}}],["e.maxlength",{"_index":1294,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.maxlength.requiredlength",{"_index":1292,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.maxlength?.requiredlength",{"_index":1290,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.min",{"_index":1296,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.minlength",{"_index":1293,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.minlength.requiredlength",{"_index":1291,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.minlength?.requiredlength",{"_index":1289,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.pattern",{"_index":1295,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["e.required",{"_index":1287,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["editable",{"_index":4280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["editannouncementgroup",{"_index":111,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["editannouncementgroup(id",{"_index":128,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["editannouncementsubgroup",{"_index":112,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["editannouncementsubgroup(id",{"_index":132,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["editfpc",{"_index":1404,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["editfpc(rawfpcinfo",{"_index":1411,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["editor",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["editorregister",{"_index":1589,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["editsequentialturn",{"_index":2937,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["editsequentialturn(id",{"_index":2951,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["editsoftwareuser",{"_index":4067,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["editsoftwareuser(userinfo",{"_index":4080,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["edittariffs",{"_index":3301,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["edittariffs(tariff",{"_index":3310,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["edittraveltime",{"_index":3486,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["edittraveltime(loadertypeid",{"_index":3495,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["element",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["email",{"_index":1278,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["emailaddress",{"_index":1351,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["emergency",{"_index":1222,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["emergencyturnform",{"_index":1223,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["emergencyturnregister",{"_index":3684,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["emergencyturnregister(truckid",{"_index":3695,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["emergencyturnsformcomponent",{"_index":339,"title":{"components/EmergencyTurnsFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["emit",{"_index":2704,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["emitevent",{"_index":506,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["emits",{"_index":2539,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["empty",{"_index":3284,"title":{},"body":{"interfaces/TabsState.html":{}}}],["en",{"_index":2859,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["enable",{"_index":2501,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["enable/disable",{"_index":3430,"title":{},"body":{"components/TimePickerInput.html":{}}}],["enablecaching",{"_index":2645,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["enabled",{"_index":2609,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["enabled/disabled",{"_index":865,"title":{},"body":{"components/DatePickerInput.html":{}}}],["enabledautosearch",{"_index":2860,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["enabledsearch",{"_index":2852,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["enablepromises",{"_index":2794,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["enablepromises.push",{"_index":2798,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["enableresults",{"_index":2799,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["enableresults.find",{"_index":2802,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["endregion",{"_index":188,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["enforce",{"_index":3411,"title":{},"body":{"components/TimePickerInput.html":{}}}],["enforcetimerange",{"_index":3375,"title":{},"body":{"components/TimePickerInput.html":{}}}],["enforcetimerange(control",{"_index":3384,"title":{},"body":{"components/TimePickerInput.html":{}}}],["enum",{"_index":3189,"title":{},"body":{"interfaces/TabView.html":{}}}],["enumerations",{"_index":4252,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":54,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/UserAuthService.html":{}}}],["environment.disableapi",{"_index":65,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/UserAuthService.html":{}}}],["environment.production",{"_index":64,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/UserAuthService.html":{}}}],["environments/environment",{"_index":55,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/UserAuthService.html":{}}}],["err",{"_index":2810,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["error",{"_index":52,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"miscellaneous/functions.html":{}}}],["error(title",{"_index":3465,"title":{},"body":{"injectables/ToastService.html":{}}}],["error_messages",{"_index":2381,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["errorcodes",{"_index":1126,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"miscellaneous/enumerations.html":{}}}],["errorcodes.norecordfound",{"_index":2101,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["errorcodes.notfoundinlocalapi",{"_index":1150,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["errors",{"_index":856,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["errorsvalidation",{"_index":850,"title":{"interfaces/ErrorsValidation.html":{}},"body":{"components/DatePickerInput.html":{},"interfaces/ErrorsValidation.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"miscellaneous/functions.html":{}}}],["event",{"_index":485,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["event.preventdefault",{"_index":497,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["event.query.trimstart",{"_index":2601,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":498,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["event.target",{"_index":2738,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["eventemitter",{"_index":2537,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["events",{"_index":2564,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["eventtarget",{"_index":2552,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["existing",{"_index":4029,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["exists",{"_index":3072,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["expires",{"_index":3961,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}}}],["expose",{"_index":3410,"title":{},"body":{"components/TimePickerInput.html":{}}}],["exposed",{"_index":2697,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["extract",{"_index":4035,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["factories",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["factoriesandfreightformcomponent",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["factoriesandfreightmanagement",{"_index":3194,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":2727,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["fallbacktoallwhenqueryshort",{"_index":2646,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["false",{"_index":472,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarState.html":{},"components/SupportButtonComponent.html":{},"interfaces/TabsState.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["fathername",{"_index":904,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/TruckDriverInfo.html":{}}}],["fb",{"_index":886,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["fetch",{"_index":2289,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["fetchuserbyphone",{"_index":3966,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["field",{"_index":2772,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["fields",{"_index":4040,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}}}],["filter",{"_index":2617,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["filterannouncementplaces",{"_index":1478,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filtered",{"_index":2520,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/TabsState.html":{}}}],["filtered.length",{"_index":3283,"title":{},"body":{"interfaces/TabsState.html":{}}}],["filtered[filtered.length",{"_index":3288,"title":{},"body":{"interfaces/TabsState.html":{}}}],["filtering",{"_index":2499,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["filters",{"_index":3518,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["filters(query",{"_index":2917,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["filtertree",{"_index":3519,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["filtertree(query",{"_index":2910,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["final",{"_index":2705,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["finally",{"_index":1030,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["first",{"_index":3409,"title":{},"body":{"components/TimePickerInput.html":{}}}],["firstdisableerror",{"_index":2790,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firstdisableerror.reason",{"_index":2793,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firstenableerror",{"_index":2801,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firstenableerror.reason",{"_index":2806,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firstenablesuccess",{"_index":2803,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firstenablesuccess?.value?.data?.message",{"_index":2807,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["firsterror",{"_index":2088,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["firsterror.reason",{"_index":2094,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["firsterrormessage",{"_index":814,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["firstvaluefrom",{"_index":56,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":81,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["fixed",{"_index":2588,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["flag",{"_index":2556,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["flat",{"_index":2270,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["flattenannouncementrelations",{"_index":2214,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["flattenannouncementrelations(data",{"_index":2227,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["flattensequentialrelations",{"_index":2341,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["flattensequentialrelations(data",{"_index":2351,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["focus",{"_index":869,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{}}}],["focusbackground",{"_index":623,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["focuscolor",{"_index":624,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["focusedcached",{"_index":2474,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["footer",{"_index":1359,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["footer.component.html",{"_index":1360,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1361,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":346,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["footertitle",{"_index":1362,"title":{},"body":{"components/FooterComponent.html":{}}}],["forbidden",{"_index":4268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["force",{"_index":2699,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["forcerefresh",{"_index":2689,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["forget",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["forgetpasswordform",{"_index":1369,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["forgetpasswordformcomponent",{"_index":348,"title":{"components/ForgetPasswordFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["forgetpasswordpagecomponent",{"_index":350,"title":{"components/ForgetPasswordPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["forgetpasswordtitle",{"_index":1370,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["form",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["form'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component",{"_index":1251,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/TabView.html":{}}}],["form.component.html",{"_index":881,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["form.component.scss",{"_index":882,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["form.component.ts",{"_index":877,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{},"miscellaneous/enumerations.html":{}}}],["form.component.ts:101",{"_index":1936,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{}}}],["form.component.ts:102",{"_index":1809,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["form.component.ts:104",{"_index":1616,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:105",{"_index":2374,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:106",{"_index":3839,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:108",{"_index":1621,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:110",{"_index":958,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:111",{"_index":3615,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:113",{"_index":1808,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["form.component.ts:114",{"_index":2355,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:117",{"_index":1819,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["form.component.ts:120",{"_index":3980,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:122",{"_index":3614,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:123",{"_index":3757,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:127",{"_index":2359,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:129",{"_index":2137,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["form.component.ts:130",{"_index":930,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:138",{"_index":2357,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:140",{"_index":3620,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:142",{"_index":3984,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:145",{"_index":2366,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:146",{"_index":2135,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["form.component.ts:149",{"_index":1614,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:150",{"_index":3622,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:151",{"_index":2365,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:154",{"_index":2142,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:155",{"_index":909,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:157",{"_index":2037,"title":{},"body":{"components/ProductFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:159",{"_index":1617,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:160",{"_index":2353,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:165",{"_index":3767,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:166",{"_index":3834,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:167",{"_index":2138,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:169",{"_index":3759,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:170",{"_index":1648,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:171",{"_index":3835,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:172",{"_index":2035,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:174",{"_index":1650,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:175",{"_index":3633,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:176",{"_index":3837,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:178",{"_index":1652,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:179",{"_index":3634,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:180",{"_index":2044,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["form.component.ts:181",{"_index":1654,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{}}}],["form.component.ts:183",{"_index":934,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:185",{"_index":1656,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:186",{"_index":3762,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:187",{"_index":3637,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:188",{"_index":1658,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:19",{"_index":2194,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{}}}],["form.component.ts:191",{"_index":3638,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:192",{"_index":1660,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:193",{"_index":2038,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["form.component.ts:195",{"_index":1662,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:197",{"_index":3842,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:199",{"_index":1664,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:201",{"_index":3843,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:203",{"_index":1666,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:205",{"_index":3844,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:208",{"_index":3773,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:209",{"_index":914,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:21",{"_index":1243,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{}}}],["form.component.ts:212",{"_index":1669,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:213",{"_index":3846,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:215",{"_index":2350,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:216",{"_index":1671,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:217",{"_index":939,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:219",{"_index":1673,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:22",{"_index":1376,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{}}}],["form.component.ts:221",{"_index":3849,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:223",{"_index":1675,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:224",{"_index":3986,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:225",{"_index":3851,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:226",{"_index":1677,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:227",{"_index":4136,"title":{},"body":{"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:229",{"_index":927,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:23",{"_index":1238,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{}}}],["form.component.ts:230",{"_index":1679,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:231",{"_index":2360,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:233",{"_index":1681,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:237",{"_index":1683,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:24",{"_index":1241,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{}}}],["form.component.ts:240",{"_index":1685,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:241",{"_index":3856,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:243",{"_index":3985,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:244",{"_index":1687,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:245",{"_index":920,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:247",{"_index":1689,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:25",{"_index":1231,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:250",{"_index":1691,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:253",{"_index":1693,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:257",{"_index":1694,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:258",{"_index":966,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:26",{"_index":1239,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["form.component.ts:260",{"_index":1696,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:263",{"_index":968,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:268",{"_index":970,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:27",{"_index":1236,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:272",{"_index":3983,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:273",{"_index":972,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:278",{"_index":974,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:28",{"_index":2146,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:283",{"_index":976,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:288",{"_index":978,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:29",{"_index":1235,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:290",{"_index":3989,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:293",{"_index":980,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:295",{"_index":3991,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:298",{"_index":982,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["form.component.ts:30",{"_index":1640,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:300",{"_index":3992,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:305",{"_index":3994,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:31",{"_index":1646,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:310",{"_index":3996,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:315",{"_index":3998,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:32",{"_index":2144,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:320",{"_index":4000,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:33",{"_index":1623,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:34",{"_index":1645,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:35",{"_index":1237,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:36",{"_index":1817,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:37",{"_index":1374,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:38",{"_index":957,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:39",{"_index":964,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:40",{"_index":955,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:41",{"_index":962,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:42",{"_index":949,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{}}}],["form.component.ts:43",{"_index":951,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:44",{"_index":953,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:45",{"_index":963,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:46",{"_index":2049,"title":{},"body":{"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:47",{"_index":960,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:48",{"_index":947,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/ProductFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:49",{"_index":3627,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:50",{"_index":923,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:51",{"_index":3840,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:52",{"_index":1811,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:53",{"_index":1921,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:54",{"_index":3987,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["form.component.ts:55",{"_index":924,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:56",{"_index":2421,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["form.component.ts:57",{"_index":3631,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:58",{"_index":1814,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:59",{"_index":908,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:60",{"_index":2045,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:61",{"_index":2052,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:62",{"_index":2047,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:63",{"_index":2048,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:64",{"_index":2053,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:65",{"_index":3618,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:66",{"_index":2043,"title":{},"body":{"components/ProductFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:67",{"_index":1230,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["form.component.ts:68",{"_index":3770,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:69",{"_index":1810,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:70",{"_index":2361,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:71",{"_index":2362,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["form.component.ts:72",{"_index":2363,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:74",{"_index":2420,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["form.component.ts:75",{"_index":2140,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:76",{"_index":1245,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:77",{"_index":2364,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form.component.ts:78",{"_index":1922,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:79",{"_index":1247,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{}}}],["form.component.ts:80",{"_index":3766,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:81",{"_index":942,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:83",{"_index":1249,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:86",{"_index":1929,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["form.component.ts:87",{"_index":2031,"title":{},"body":{"components/ProductFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:89",{"_index":1641,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["form.component.ts:90",{"_index":1931,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:91",{"_index":1618,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["form.component.ts:92",{"_index":1806,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["form.component.ts:93",{"_index":2370,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form.component.ts:94",{"_index":1933,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:95",{"_index":3616,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["form.component.ts:97",{"_index":3765,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["form.component.ts:98",{"_index":1934,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:99",{"_index":2372,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["form/announcement",{"_index":3183,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["form/driver",{"_index":876,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/emergency",{"_index":1220,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/factories",{"_index":3171,"title":{},"body":{"interfaces/TabView.html":{}}}],["form/forget",{"_index":1368,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{}}}],["form/lad",{"_index":3177,"title":{},"body":{"interfaces/TabView.html":{}}}],["form/load",{"_index":1583,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/loader",{"_index":1795,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/login",{"_index":1913,"title":{},"body":{"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{}}}],["form/product",{"_index":2016,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{},"interfaces/TabView.html":{}}}],["form/province",{"_index":2124,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TabView.html":{}}}],["form/real",{"_index":2192,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/relation",{"_index":2200,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/TabView.html":{}}}],["form/resuscitate",{"_index":2416,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{},"interfaces/TabView.html":{}}}],["form/sequential",{"_index":3186,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["form/tariffs",{"_index":3181,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["form/travel",{"_index":3179,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["form/truck",{"_index":3167,"title":{},"body":{"interfaces/TabView.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["form/turns",{"_index":1250,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/TabView.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["form/user",{"_index":3165,"title":{},"body":{"interfaces/TabView.html":{},"components/UserInfoFormComponent.html":{}}}],["form/users",{"_index":2760,"title":{},"body":{"interfaces/SelectedNodes.html":{},"interfaces/TabView.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["formarray",{"_index":1642,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{}}}],["format",{"_index":2296,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["formbuilder",{"_index":983,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["formcardcomponent",{"_index":352,"title":{"components/FormCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["formcontrol",{"_index":470,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["formcontrol('00",{"_index":3400,"title":{},"body":{"components/TimePickerInput.html":{}}}],["formcontrol(false",{"_index":579,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["formcontrol(null",{"_index":2749,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["formcontrol(true",{"_index":489,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["formgroup",{"_index":952,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["formmode",{"_index":4255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forms",{"_index":4003,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["formsmodule",{"_index":453,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/SearchInputComponent.html":{}}}],["formvalue",{"_index":1945,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formvalue?.captcha",{"_index":1953,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formvalue?.rememberme",{"_index":1951,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formvalue?.sessionid",{"_index":1952,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["found",{"_index":2591,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["fpcaddress",{"_index":1352,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["fpcchangeactivestatus",{"_index":1405,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpcchangeactivestatus(fpcid",{"_index":1414,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpcid",{"_index":1353,"title":{},"body":{"interfaces/FPCInfo.html":{},"injectables/FpcManagementService.html":{}}}],["fpcinfo",{"_index":1348,"title":{"interfaces/FPCInfo.html":{}},"body":{"interfaces/FPCInfo.html":{},"injectables/FpcManagementService.html":{}}}],["fpcinfo.fpcid",{"_index":1431,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpcmanagementservice",{"_index":1400,"title":{"injectables/FpcManagementService.html":{}},"body":{"injectables/FpcManagementService.html":{}}}],["fpcmanagermobilenumber",{"_index":1354,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["fpcmanagernamefamily",{"_index":1355,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["fpcnametosearch",{"_index":1422,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpcregistering",{"_index":1406,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpcregistering(rawfpcinfo",{"_index":1416,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["fpctel",{"_index":1356,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["fpctitle",{"_index":1357,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["freight",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["fresh",{"_index":2624,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["freshdata",{"_index":2732,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["fulfilled",{"_index":2804,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["full",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["fullname",{"_index":902,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{}}}],["fullscreenbackgroundcomponent",{"_index":355,"title":{"components/FullScreenBackgroundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["function",{"_index":1284,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["functions",{"_index":4283,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g.id",{"_index":3067,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["getaddress",{"_index":981,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{}}}],["getannouncedate",{"_index":1649,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getannouncementgroupid",{"_index":2255,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["getannouncementgroups",{"_index":113,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getannouncementgroups(title",{"_index":134,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getannouncementgrouptitle",{"_index":2257,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["getannouncementsubgroupid",{"_index":2259,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["getannouncementsubgroups",{"_index":205,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getannouncementsubgrouptitle",{"_index":2261,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["getannouncementsupgroups",{"_index":114,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getannouncementsupgroups(title",{"_index":136,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getapiprocesses",{"_index":251,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["getbarcode",{"_index":1647,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getcaptcha",{"_index":563,"title":{},"body":{"injectables/CaptchaService.html":{},"components/LoginFormComponent.html":{}}}],["getcaptchainformation",{"_index":518,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["getcheckedcontrol",{"_index":1800,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["getcheckedcontrol(index",{"_index":1807,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["getcomposedtruckinfoforturnissues",{"_index":1186,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getcomposedtruckinfowithlastactiveturn",{"_index":1069,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getcomposedtruckinfowithlastactiveturn(truckid",{"_index":1087,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getcomposedtruckinfowithlastturn",{"_index":1070,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getcomposedtruckinfowithlastturn(truckid",{"_index":1089,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getcontrol",{"_index":491,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["getdate",{"_index":2423,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["getdefaulterrormessage",{"_index":851,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"miscellaneous/functions.html":{}}}],["getdefaulterrormessage(name",{"_index":1285,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"miscellaneous/functions.html":{}}}],["getdefaulterrormessage(rule.name",{"_index":861,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["getdescription",{"_index":1695,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getdescriptions",{"_index":1248,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["getdischargingplaceid",{"_index":1678,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getdischargingplacetitle",{"_index":1680,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getdriverid",{"_index":967,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getdriverinfoforsoftwareuser",{"_index":1071,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getdriverinfofromapi",{"_index":1072,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getdriverinfofromapi(nationalcode",{"_index":1092,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getdrivername",{"_index":3845,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getdrivernationalid",{"_index":3847,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getfathername",{"_index":975,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getfirsterrormessage",{"_index":838,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["getfpcinfo",{"_index":1407,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["getfpcinfo(fpcid",{"_index":1418,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["getfpcsinfo",{"_index":1408,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["getfpcsinfo(fpcnametosearch",{"_index":1420,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["getfullname",{"_index":971,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getgoodid",{"_index":1655,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getgoodtitle",{"_index":1657,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getid",{"_index":3990,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getisdisabled",{"_index":840,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["getladplace",{"_index":1533,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["getladplace(id",{"_index":1543,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["getladplaces",{"_index":1534,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["getladplaces(title",{"_index":1545,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["getlatestturns",{"_index":3685,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["getlatestturns(truckid",{"_index":3697,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["getlatestturnsforsoftwareuser",{"_index":3686,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["getlicensenumber",{"_index":977,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getlicenseplate",{"_index":3774,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getlicenseplatenumber",{"_index":3635,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["getload",{"_index":1775,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["getload(loadid",{"_index":1776,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["getloadannouncementgroupid",{"_index":1659,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadannouncementgrouptitle",{"_index":1661,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadannouncementplaces",{"_index":1575,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["getloadannouncementsubgroupid",{"_index":1663,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadannouncementsubgrouptitle",{"_index":1665,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadertype",{"_index":3639,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["getloadertypeid",{"_index":2371,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getloadertypeinfoforsoftwareuser",{"_index":1856,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["getloadertypesinfo",{"_index":1857,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["getloadertypesinfo(searchstring",{"_index":1862,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["getloadertypetitle",{"_index":2373,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["getloadingplaceid",{"_index":1674,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadingplacetitle",{"_index":1676,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadstatusid",{"_index":1651,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloadstatustitle",{"_index":1653,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getloginlink",{"_index":3334,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["getmobile",{"_index":973,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getname",{"_index":3993,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getnationalid",{"_index":969,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getnativeness",{"_index":3640,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["getotaghdarturnnumber",{"_index":3850,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getpassword",{"_index":1930,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["getphone",{"_index":1377,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["getproductsinfo",{"_index":2105,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["getproductsinfo(producttypetitle",{"_index":2110,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["getprovincesandcitiesinfo",{"_index":2167,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["getprovincesandcitiesinfo(provinceandcityname",{"_index":2172,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["getrecipient",{"_index":1690,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getrelationofannouncementgroupandsubgroup",{"_index":115,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getrelationofannouncementgroupandsubgroup(id",{"_index":138,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["getrelationofsequentialturntoannouncementsubgroups",{"_index":2938,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getrelationofsequentialturntoannouncementsubgroups(id",{"_index":2953,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getrelationofsequentialturntoloadertypes",{"_index":2939,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getrelationofsequentialturntoloadertypes(id",{"_index":2955,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getrelationtoloadertypes",{"_index":2986,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getrememberme",{"_index":1935,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["getsearchnationalid",{"_index":965,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["getsearchphone",{"_index":3988,"title":{},"body":{"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["getsearchsmartcard",{"_index":3632,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["getsearchtitle",{"_index":1818,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["getsequentialid",{"_index":2368,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["getsequentialtitle",{"_index":2369,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["getsequentialturn",{"_index":3852,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getsequentialturnid",{"_index":1246,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["getsequentialturns",{"_index":2940,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getsequentialturns(title",{"_index":2957,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getsequentialturnwithloadertype",{"_index":2941,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getsequentialturnwithloadertype(loadertypeid",{"_index":2959,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["getserialnumber",{"_index":3636,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["getsessionid",{"_index":1932,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/UserAuthService.html":{}}}],["getsmart",{"_index":3841,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getsmartcard",{"_index":979,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["getsmartcode",{"_index":3772,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["getsmsactive",{"_index":3997,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getsmswalletinfo",{"_index":4150,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getsoftwareuser",{"_index":3970,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getsoftwareuserinfo",{"_index":4068,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getsoftwareuserinfo(mobilenumber",{"_index":4082,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getsoftwareuserprofile",{"_index":4069,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getsourcecityid",{"_index":1667,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getsourcecitytitle",{"_index":1668,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettargetcityid",{"_index":1670,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettargetcitytitle",{"_index":1672,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettariffs",{"_index":3302,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["gettariffs(loadertypeid",{"_index":3312,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["gettarrif",{"_index":1692,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["getter",{"_index":4057,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getters",{"_index":1057,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["gettime",{"_index":2424,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["getting",{"_index":4291,"title":{"index.html":{}},"body":{}}],["gettonaj",{"_index":1688,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettotalnumber",{"_index":1686,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettransportcompanyid",{"_index":1682,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettransportcompanytitle",{"_index":1684,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["gettraveltime",{"_index":3487,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["gettraveltime(loadertypeid",{"_index":3497,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["gettraveltimes",{"_index":3488,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["gettraveltimes(loadertypeid",{"_index":3498,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["gettruckerassociationwalletinfo",{"_index":4151,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["gettruckid",{"_index":1244,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["gettruckinfoforsoftwareuser",{"_index":1073,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["gettruckinfofromapi",{"_index":1074,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["gettruckinfofromapi(smartcardno",{"_index":1096,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["gettruckinfofromform",{"_index":3607,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["gettrucknativeness",{"_index":1075,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["gettrucknativeness(truckid",{"_index":1099,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["gettrucknativenessexpireddate",{"_index":3641,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["gettrucknativenessinfofromform",{"_index":3608,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["gettruckwalletinfo",{"_index":4152,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["gettruckwalletinfo(truckid",{"_index":4160,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getturnaccounting",{"_index":3687,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["getturnaccounting(turnid",{"_index":3699,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["getturndescription",{"_index":3854,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getturnid",{"_index":3848,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getturnstats",{"_index":3853,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getuseraccessmenu",{"_index":2834,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["getuseractive",{"_index":3999,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getusername",{"_index":1928,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["getuserofsession",{"_index":3909,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["getuserofsession(sessionid",{"_index":3914,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["getusertype",{"_index":3995,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["getusertypes",{"_index":4070,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getuserwalletinfo",{"_index":4153,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getvirtualwallet",{"_index":1076,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["getwalletbalance",{"_index":3857,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["getwalletbalance(walletid",{"_index":4161,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwalletcode",{"_index":3855,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["getwalletdefaultamounts",{"_index":4154,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwalletpaymentrecords",{"_index":4155,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwalletpaymentrecords(walletid",{"_index":4164,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwallettransactions",{"_index":4156,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwallettransactions(walletid",{"_index":4166,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["getwebprocessgroups_webprocesses",{"_index":4071,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getwebprocessgroups_webprocesses(mobilenumber",{"_index":4085,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["given",{"_index":916,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["good",{"_index":1331,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["goodid",{"_index":1595,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{}}}],["goodtitle",{"_index":1596,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{}}}],["group",{"_index":104,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["group'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["group.announcementid",{"_index":2299,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.announcementsubgroups.map((sub",{"_index":2446,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["group.announcementsubgroups.map(sub",{"_index":2298,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.announcementtitle",{"_index":2300,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.component",{"_index":3184,"title":{},"body":{"interfaces/TabView.html":{}}}],["group.component.html",{"_index":2205,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.component.scss",{"_index":2206,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.component.ts",{"_index":2202,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["group.component.ts:100",{"_index":2237,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:111",{"_index":2239,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:116",{"_index":2230,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:123",{"_index":2228,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:135",{"_index":2235,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:163",{"_index":2225,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:174",{"_index":2240,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:44",{"_index":2248,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:45",{"_index":2250,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:46",{"_index":2254,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:47",{"_index":2247,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:48",{"_index":2244,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:51",{"_index":2249,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:52",{"_index":2241,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:53",{"_index":2245,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:54",{"_index":2251,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:57",{"_index":2242,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:65",{"_index":2252,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:71",{"_index":2253,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:78",{"_index":2256,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:82",{"_index":2258,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:86",{"_index":2260,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:90",{"_index":2262,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.component.ts:95",{"_index":2232,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["group.loadertypes.map((sub",{"_index":2397,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["group.mock",{"_index":163,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{}}}],["group.model",{"_index":158,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/SidebarState.html":{}}}],["group.model.ts",{"_index":96,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"interfaces/PageGroup.html":{}}}],["group.pgiconname!.trim",{"_index":273,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["group.pgid",{"_index":270,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["group.pgtitle!.trim",{"_index":271,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["group.seqturnid",{"_index":2398,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["group.seqturntitle",{"_index":2399,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["group.webprocesses!.map((proc",{"_index":275,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["group/relation",{"_index":2201,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/TabView.html":{}}}],["group/subgroup",{"_index":215,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["groups",{"_index":177,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/DashboardComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/SidebarState.html":{},"interfaces/TabView.html":{}}}],["groups.find((g",{"_index":3066,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["groups/relation",{"_index":2439,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{},"interfaces/TabView.html":{}}}],["groups[0]?.id",{"_index":3069,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["handle",{"_index":2076,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{}}}],["handlecitychange",{"_index":2128,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["handlecitychange(productid",{"_index":2134,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["handleclick",{"_index":3343,"title":{},"body":{"components/TextInputComponent.html":{}}}],["handlehttperror",{"_index":50,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(error",{"_index":80,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"miscellaneous/functions.html":{}}}],["handleproductchange",{"_index":2025,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["handleproductchange(productid",{"_index":2034,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["handleproducttypechange",{"_index":2026,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["handleproducttypechange(producttypeid",{"_index":2036,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["handleprovincechange",{"_index":2129,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["handleprovincechange(provinceid",{"_index":2136,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["handler",{"_index":53,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["handler.ts",{"_index":4288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlers",{"_index":2274,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["handles",{"_index":2563,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["handlesearch",{"_index":1480,"title":{},"body":{"components/HomePageComponent.html":{}}}],["handlesearch(result",{"_index":1486,"title":{},"body":{"components/HomePageComponent.html":{}}}],["handling",{"_index":3941,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["haschanged",{"_index":2886,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["hascheckedchild",{"_index":2897,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["hash",{"_index":2589,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["hasuncheckedchild",{"_index":2898,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["header",{"_index":1042,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/HeaderComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["header'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["header.component.html",{"_index":1457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":359,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["headerdata",{"_index":660,"title":{"interfaces/HeaderData.html":{}},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{}}}],["headerdata.title",{"_index":1466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headertitle",{"_index":1479,"title":{},"body":{"components/HomePageComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["helpers",{"_index":2595,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["hidden",{"_index":2929,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["hidepassword",{"_index":1999,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["highlight",{"_index":599,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["history.mock",{"_index":4182,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["history.model",{"_index":4180,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["history.model.ts",{"_index":4216,"title":{},"body":{"interfaces/WalletPaymentHistory.html":{}}}],["home",{"_index":1472,"title":{},"body":{"components/HomePageComponent.html":{}}}],["home'},{'name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["homepagecomponent",{"_index":361,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["hooks",{"_index":2594,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["hostlistener",{"_index":3031,"title":{},"body":{"components/SidebarComponent.html":{}}}],["hostlistener('window:resize",{"_index":3028,"title":{},"body":{"components/SidebarComponent.html":{}}}],["hostlisteners",{"_index":3019,"title":{},"body":{"components/SidebarComponent.html":{}}}],["hour",{"_index":3370,"title":{},"body":{"components/TimePickerInput.html":{}}}],["hours",{"_index":3416,"title":{},"body":{"components/TimePickerInput.html":{}}}],["hovercolor",{"_index":620,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["hrefforgetpassword",{"_index":1916,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["html",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["htmlinputelement",{"_index":832,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["htmlinputelement).value",{"_index":2739,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["http",{"_index":13,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["httpclient",{"_index":43,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["icon",{"_index":272,"title":{},"body":{"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"interfaces/MenuItemData.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/WebProcess.html":{}}}],["icon/label",{"_index":2494,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["icon:string",{"_index":1470,"title":{},"body":{"interfaces/HeaderData.html":{}}}],["id",{"_index":121,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/PageGroup.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabsState.html":{},"components/UserInfoFormComponent.html":{},"interfaces/WebProcess.html":{}}}],["id)?.active",{"_index":3287,"title":{},"body":{"interfaces/TabsState.html":{}}}],["id:number",{"_index":3157,"title":{},"body":{"interfaces/TabItem.html":{},"interfaces/WebProcess.html":{}}}],["idcounter",{"_index":3273,"title":{},"body":{"interfaces/TabsState.html":{}}}],["if(!this.issuccessful(response",{"_index":2157,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["imagedata",{"_index":511,"title":{},"body":{"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{}}}],["imageurl",{"_index":1447,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["immediately",{"_index":2559,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{}}}],["implements",{"_index":449,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/HomePageComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/ApiGroupProcess.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["imports",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["inactive",{"_index":2082,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["includes(query.tolowercase",{"_index":2606,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["increase",{"_index":3457,"title":{},"body":{"components/TimePickerInput.html":{}}}],["increment",{"_index":3376,"title":{},"body":{"components/TimePickerInput.html":{}}}],["increment(control",{"_index":3386,"title":{},"body":{"components/TimePickerInput.html":{}}}],["increment/decrement",{"_index":3447,"title":{},"body":{"components/TimePickerInput.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":601,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SemanticTokens.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}}}],["info(title",{"_index":3468,"title":{},"body":{"injectables/ToastService.html":{}}}],["info.mock",{"_index":1136,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["info.model",{"_index":992,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/SelectedNodes.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["info.model.ts",{"_index":1350,"title":{},"body":{"interfaces/FPCInfo.html":{},"interfaces/LoadInfo.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["info.trucknativenessexpiredate",{"_index":3660,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["info.trucknativenesstypetitle",{"_index":3659,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["information",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["init",{"_index":1261,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TimePickerInput.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["initialize",{"_index":2551,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["initializeloadannouncementplaces",{"_index":1481,"title":{},"body":{"components/HomePageComponent.html":{}}}],["initializetree",{"_index":3520,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["initialstate",{"_index":3058,"title":{},"body":{"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{}}}],["inject",{"_index":45,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["inject(announcementgroupsubgroupmanagementservice",{"_index":2243,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["inject(apicommunicationmanagementservice",{"_index":146,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["inject(apiprocessesservice",{"_index":681,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inject(confirmationservice",{"_index":2246,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["inject(cookieservice",{"_index":3925,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["inject(cryptographyservice",{"_index":1924,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["inject(dialogservice",{"_index":950,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["inject(driver_truckmanagementservice",{"_index":954,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["inject(formbuilder",{"_index":956,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["inject(httpclient",{"_index":40,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["inject(loadcapacitormanagementservice",{"_index":1639,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["inject(loadertypesservice",{"_index":1815,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["inject(loadingservice",{"_index":961,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["inject(messageservice",{"_index":3472,"title":{},"body":{"injectables/ToastService.html":{}}}],["inject(producttypesservice",{"_index":2050,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["inject(provinceandcitymanagementservice",{"_index":2145,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["inject(router",{"_index":696,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"injectables/UserAuthService.html":{}}}],["inject(sequentialturnmanagementservice",{"_index":2367,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["inject(store",{"_index":698,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{}}}],["inject(toastservice",{"_index":702,"title":{},"body":{"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["inject(turnmanagementservice",{"_index":1240,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["inject(userauthservice",{"_index":148,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["inject(usermanagementservice",{"_index":2766,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{},"overview.html":{}}}],["injection",{"_index":2272,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["input",{"_index":452,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["input'},{'name",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["input.blur",{"_index":870,"title":{},"body":{"components/DatePickerInput.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["input.component",{"_index":987,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"components/SupportButtonComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["input.component.component",{"_index":2426,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["input.component.component.ts",{"_index":806,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:101",{"_index":3388,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:108",{"_index":3389,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:114",{"_index":3394,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:123",{"_index":3393,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:130",{"_index":3392,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:141",{"_index":3385,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:165",{"_index":3399,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:167",{"_index":3396,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:184",{"_index":3397,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:192",{"_index":3387,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:203",{"_index":3383,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:214",{"_index":3398,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:45",{"_index":3380,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:46",{"_index":817,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:47",{"_index":828,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:48",{"_index":826,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:49",{"_index":827,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:50",{"_index":821,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:51",{"_index":824,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:52",{"_index":825,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:53",{"_index":816,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:54",{"_index":820,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:57",{"_index":839,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{}}}],["input.component.component.ts:60",{"_index":3401,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:63",{"_index":3402,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:66",{"_index":841,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:71",{"_index":830,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:72",{"_index":3403,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:76",{"_index":829,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:77",{"_index":3390,"title":{},"body":{"components/TimePickerInput.html":{}}}],["input.component.component.ts:83",{"_index":837,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:92",{"_index":836,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.component.ts:99",{"_index":833,"title":{},"body":{"components/DatePickerInput.html":{}}}],["input.component.html",{"_index":457,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["input.component.scss",{"_index":458,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["input.component.ts",{"_index":448,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:100",{"_index":3360,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:104",{"_index":3353,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:113",{"_index":2690,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:12",{"_index":580,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:13",{"_index":583,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:14",{"_index":584,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:15",{"_index":581,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:158",{"_index":2696,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:16",{"_index":582,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:166",{"_index":2702,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:174",{"_index":2680,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:18",{"_index":586,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["input.component.ts:182",{"_index":2683,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:19",{"_index":490,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["input.component.ts:20",{"_index":477,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["input.component.ts:21",{"_index":473,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["input.component.ts:22",{"_index":585,"title":{},"body":{"components/CheckboxInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:23",{"_index":476,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:24",{"_index":474,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:25",{"_index":528,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:26",{"_index":486,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:27",{"_index":530,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:28",{"_index":527,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:29",{"_index":2002,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:30",{"_index":2001,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.ts:31",{"_index":2752,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["input.component.ts:32",{"_index":2003,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.ts:34",{"_index":471,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/PasswordInputComponent.html":{}}}],["input.component.ts:35",{"_index":2754,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["input.component.ts:37",{"_index":2707,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:38",{"_index":492,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["input.component.ts:39",{"_index":529,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:41",{"_index":3349,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:42",{"_index":483,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:43",{"_index":2671,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:44",{"_index":3351,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:45",{"_index":2756,"title":{},"body":{"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:46",{"_index":480,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:47",{"_index":3350,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:48",{"_index":2667,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:49",{"_index":2664,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:50",{"_index":2662,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:51",{"_index":2668,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:52",{"_index":487,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:53",{"_index":2654,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{}}}],["input.component.ts:54",{"_index":2669,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:55",{"_index":2659,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:56",{"_index":3352,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:58",{"_index":3362,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:59",{"_index":2755,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["input.component.ts:60",{"_index":2670,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:61",{"_index":2655,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:62",{"_index":2666,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:63",{"_index":2663,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:64",{"_index":2665,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:65",{"_index":2656,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:66",{"_index":2660,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:67",{"_index":2658,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:68",{"_index":2661,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:70",{"_index":3355,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:72",{"_index":2672,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:73",{"_index":2673,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:74",{"_index":3354,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:77",{"_index":2706,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:78",{"_index":2708,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:80",{"_index":3361,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:83",{"_index":2676,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:88",{"_index":3357,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:93",{"_index":2675,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:94",{"_index":3356,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:97",{"_index":2674,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input/binary",{"_index":447,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["input/captcha",{"_index":513,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/LoginFormComponent.html":{},"components/SupportButtonComponent.html":{}}}],["input/checkbox",{"_index":576,"title":{},"body":{"components/CheckboxInputComponent.html":{},"components/LoginFormComponent.html":{}}}],["input/date",{"_index":805,"title":{},"body":{"components/DatePickerInput.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["input/password",{"_index":1938,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{}}}],["input/search",{"_index":998,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/HomePageComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["input/select",{"_index":2744,"title":{},"body":{"components/SelectInputComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["input/text",{"_index":986,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SupportButtonComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["input/time",{"_index":2428,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{},"components/TimePickerInput.html":{}}}],["inputelement",{"_index":2596,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["inputelement?.blur",{"_index":2597,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["inputgroup",{"_index":2746,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["inputgroupaddon",{"_index":2747,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["inputgroupaddonmodule",{"_index":514,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["inputgroupmodule",{"_index":516,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["inputid",{"_index":578,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["inputs",{"_index":464,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["inputs/captcha",{"_index":3117,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["inputs/text",{"_index":3118,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["inputvalues",{"_index":1046,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["inside",{"_index":2536,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["insidetabtype",{"_index":3230,"title":{},"body":{"interfaces/TabView.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["instead",{"_index":2515,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["interaction",{"_index":2560,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["interface",{"_index":84,"title":{"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"interfaces/CaptchaChallenge.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"interfaces/HeaderData.html":{},"interfaces/LADPlace.html":{},"interfaces/LoadAnnouncementPlace.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"interfaces/LoaderTypeInRelation.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"interfaces/Province.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"interfaces/ShortResponse.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"interfaces/ThemePreset.html":{},"interfaces/TravelTime.html":{},"interfaces/TreeTableChangedData.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}},"body":{"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"interfaces/CaptchaChallenge.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"interfaces/HeaderData.html":{},"interfaces/LADPlace.html":{},"interfaces/LoadAnnouncementPlace.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"interfaces/LoaderTypeInRelation.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"interfaces/ShortResponse.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"interfaces/ThemePreset.html":{},"interfaces/TravelTime.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}}}],["interfaces",{"_index":86,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"interfaces/CaptchaChallenge.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"interfaces/HeaderData.html":{},"interfaces/LADPlace.html":{},"interfaces/LoadAnnouncementPlace.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"interfaces/LoaderTypeInRelation.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"interfaces/Province.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"interfaces/ShortResponse.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"interfaces/ThemePreset.html":{},"interfaces/TravelTime.html":{},"interfaces/TreeTableChangedData.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"overview.html":{}}}],["internal",{"_index":2713,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{}}}],["internalservererror",{"_index":4272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["interval",{"_index":3448,"title":{},"body":{"components/TimePickerInput.html":{}}}],["inversecolor",{"_index":619,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["ischarprefixmatch",{"_index":2614,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["isdisabled",{"_index":815,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["isfocusmode",{"_index":2616,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["ishidden",{"_index":2843,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["isinternalupdate",{"_index":3371,"title":{},"body":{"components/TimePickerInput.html":{}}}],["isloading",{"_index":1905,"title":{},"body":{"injectables/LoadingService.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["isloggedin",{"_index":3910,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["ismobile",{"_index":3014,"title":{},"body":{"components/SidebarComponent.html":{}}}],["isnan(num",{"_index":3443,"title":{},"body":{"components/TimePickerInput.html":{}}}],["isnan(val",{"_index":3459,"title":{},"body":{"components/TimePickerInput.html":{}}}],["isopen",{"_index":3015,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarState.html":{}}}],["isparent",{"_index":2890,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["issessionlive",{"_index":3953,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["issuccess",{"_index":1379,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["issuccessful",{"_index":893,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["issuccessful(res",{"_index":3981,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["issuccessful(response",{"_index":919,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["item",{"_index":1615,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SidebarMenuComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{}}}],["item.active",{"_index":1838,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["item.checked",{"_index":1743,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["item.cost",{"_index":1741,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["item.label",{"_index":3052,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["item.loadertypeid",{"_index":1835,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["item.loadertypeorganizationid",{"_index":1836,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["item.loadertypetitle",{"_index":1837,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["item.model",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{}}}],["item.model.ts",{"_index":1983,"title":{},"body":{"interfaces/MenuItemData.html":{}}}],["item.model.ts:4",{"_index":1984,"title":{},"body":{"interfaces/MenuItemData.html":{}}}],["item.title",{"_index":3597,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{}}}],["item.tptpdid",{"_index":1737,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["item.tptptitle",{"_index":1739,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["item.value",{"_index":3598,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{}}}],["item[this.optionlabel",{"_index":2604,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["itemmatchesquery",{"_index":2647,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["items",{"_index":3048,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["items:menuitemdata",{"_index":3051,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["jalali",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["js/sha256",{"_index":647,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["key",{"_index":602,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["key.includes",{"_index":2781,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["key.length",{"_index":2891,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["keyboardevent",{"_index":3359,"title":{},"body":{"components/TextInputComponent.html":{}}}],["keydown",{"_index":3348,"title":{},"body":{"components/TextInputComponent.html":{}}}],["keyof",{"_index":1347,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["keyword",{"_index":1314,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["label",{"_index":467,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"interfaces/MenuItemData.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["label.trim",{"_index":3365,"title":{},"body":{"components/TextInputComponent.html":{}}}],["labels",{"_index":2530,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["lad",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["ladplace",{"_index":1517,"title":{"interfaces/LADPlace.html":{}},"body":{"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{}}}],["ladplaceaddress",{"_index":1521,"title":{},"body":{"interfaces/LADPlace.html":{}}}],["ladplaceid",{"_index":1522,"title":{},"body":{"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{}}}],["ladplaceinfo",{"_index":1548,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["ladplaceinfo.ladplaceid",{"_index":1559,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["ladplaceinfo.ladplacetitle",{"_index":1557,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["ladplacemanagementservice",{"_index":1526,"title":{"injectables/LADPlaceManagementService.html":{}},"body":{"injectables/LADPlaceManagementService.html":{},"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["ladplacesformcomponent",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["ladplacetel",{"_index":1523,"title":{},"body":{"interfaces/LADPlace.html":{}}}],["ladplacetitle",{"_index":1524,"title":{},"body":{"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{}}}],["lap",{"_index":1485,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lapiconname",{"_index":1570,"title":{},"body":{"interfaces/LoadAnnouncementPlace.html":{}}}],["laptitle",{"_index":1571,"title":{},"body":{"interfaces/LoadAnnouncementPlace.html":{}}}],["lapurl",{"_index":1572,"title":{},"body":{"interfaces/LoadAnnouncementPlace.html":{}}}],["lastcachedkey",{"_index":2635,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["lastclosedtabid",{"_index":3270,"title":{},"body":{"interfaces/TabsState.html":{}}}],["lastsearchkey",{"_index":2475,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["lastselectionkeys",{"_index":2864,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["lax",{"_index":3960,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["lazy",{"_index":2545,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["lazysearch",{"_index":2484,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["legend",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["level",{"_index":627,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["licensenumber",{"_index":905,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{}}}],["licenseplate",{"_index":3755,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["licenseplatenumber",{"_index":1321,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["lifecycle",{"_index":864,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["light",{"_index":613,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["limit",{"_index":3436,"title":{},"body":{"components/TimePickerInput.html":{}}}],["link",{"_index":937,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["list",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["listen",{"_index":1260,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["literal",{"_index":283,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SemanticTokens.html":{},"components/UserInfoFormComponent.html":{},"miscellaneous/functions.html":{}}}],["load",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["load.address",{"_index":1734,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.announcedate",{"_index":1711,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.description",{"_index":1735,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.dischargingplaceid",{"_index":1726,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.dischargingplacetitle",{"_index":1727,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.goodid",{"_index":1714,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.goodtitle",{"_index":1715,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadannouncementgroupid",{"_index":1716,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadannouncementgrouptitle",{"_index":1717,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadannouncementsubgroupid",{"_index":1718,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadannouncementsubgrouptitle",{"_index":1719,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadingplaceid",{"_index":1724,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadingplacetitle",{"_index":1725,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadstatusid",{"_index":1712,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.loadstatustitle",{"_index":1713,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.recipient",{"_index":1732,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.sourcecityid",{"_index":1720,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.sourcecitytitle",{"_index":1721,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.targetcityid",{"_index":1722,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.targetcitytitle",{"_index":1723,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.tarrif",{"_index":1733,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.tonaj",{"_index":1731,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.totalnumber",{"_index":1730,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.transportcompanyid",{"_index":1728,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["load.transportcompanytitle",{"_index":1729,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["loadannouncementgroup",{"_index":1332,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["loadannouncementgroupid",{"_index":1597,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadannouncementgrouptitle",{"_index":1598,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadannouncementplace",{"_index":1487,"title":{"interfaces/LoadAnnouncementPlace.html":{}},"body":{"components/HomePageComponent.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/TerminalCardComponent.html":{}}}],["loadannouncementplacesservice",{"_index":1483,"title":{"injectables/LoadAnnouncementPlacesService.html":{}},"body":{"components/HomePageComponent.html":{},"injectables/LoadAnnouncementPlacesService.html":{}}}],["loadannouncementsubgroup",{"_index":1333,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["loadannouncementsubgroupid",{"_index":1599,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadannouncementsubgrouptitle",{"_index":1600,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadcapacitorform",{"_index":1590,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["loadcapacitorformcomponent",{"_index":366,"title":{"components/LoadCapacitorFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loadcapacitormanagement",{"_index":3210,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["loadcapacitormanagementservice",{"_index":1699,"title":{"injectables/LoadCapacitorManagementService.html":{}},"body":{"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{}}}],["loadcomponent",{"_index":3236,"title":{},"body":{"components/TabViewComponent.html":{}}}],["loadcomponent(index",{"_index":3239,"title":{},"body":{"components/TabViewComponent.html":{}}}],["loaddriverinfofromapi",{"_index":887,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["loadedtable",{"_index":2815,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loadedtable.map((x",{"_index":2816,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loader",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loaderid",{"_index":3494,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["loadermanagement",{"_index":3204,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["loadersformarray",{"_index":1797,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["loadertype",{"_index":1323,"title":{"interfaces/LoaderType.html":{}},"body":{"interfaces/ErrorsValidation.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/TabView.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertype.active",{"_index":1883,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.loadertypefixstatusid",{"_index":1881,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.loadertypefixstatustitle?.trim",{"_index":1882,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.loadertypeid",{"_index":1878,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.loadertypeorganizationid",{"_index":1880,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.loadertypetitle?.trim",{"_index":1879,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertype.mock",{"_index":2971,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["loadertype.model",{"_index":2380,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["loadertype.model.ts",{"_index":1849,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{}}}],["loadertypedataforhtml",{"_index":3557,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertypefixstatusid",{"_index":1788,"title":{},"body":{"interfaces/LoaderType.html":{},"injectables/LoaderTypesService.html":{}}}],["loadertypefixstatustitle",{"_index":1789,"title":{},"body":{"interfaces/LoaderType.html":{},"injectables/LoaderTypesService.html":{}}}],["loadertypeformcomponent",{"_index":369,"title":{"components/LoaderTypeFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loadertypeid",{"_index":1790,"title":{},"body":{"interfaces/LoaderType.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["loadertypeinfo",{"_index":1885,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertypeinfo.loadertypeid",{"_index":1886,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["loadertypeinrelation",{"_index":1845,"title":{"interfaces/LoaderTypeInRelation.html":{}},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{}}}],["loadertypemanagement",{"_index":3198,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["loadertypemanager",{"_index":3558,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertypeorganizationid",{"_index":1791,"title":{},"body":{"interfaces/LoaderType.html":{},"injectables/LoaderTypesService.html":{}}}],["loadertyperesponse",{"_index":3570,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertyperesponse.data",{"_index":3574,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertypes",{"_index":1853,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["loadertypeservice",{"_index":1798,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["loadertypesinfo",{"_index":1872,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertypesinfo.loadertypetitle",{"_index":1873,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["loadertypesservice",{"_index":1822,"title":{"injectables/LoaderTypesService.html":{}},"body":{"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["loadertypetitle",{"_index":1792,"title":{},"body":{"interfaces/LoaderType.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/Tariff.html":{},"interfaces/TravelTime.html":{}}}],["loadformsinformation",{"_index":3602,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["loadid",{"_index":1777,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{}}}],["loadinfo",{"_index":1620,"title":{"interfaces/LoadInfo.html":{}},"body":{"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{}}}],["loading",{"_index":888,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["loading$!:observable",{"_index":1898,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loading.component.html",{"_index":1890,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":1891,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingactive",{"_index":1525,"title":{},"body":{"interfaces/LADPlace.html":{}}}],["loadingcomponent",{"_index":300,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loadingplace",{"_index":1336,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["loadingplaceid",{"_index":1605,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadingplacetitle",{"_index":1606,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadingservice",{"_index":889,"title":{"injectables/LoadingService.html":{}},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loadingsubject",{"_index":1901,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadloaderstype",{"_index":1801,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["loadnativenessform",{"_index":3609,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["loadrelationofannouncement",{"_index":2215,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["loadrelationofannouncement(announcementid",{"_index":2229,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["loadrelationofsequentialtoloader",{"_index":2342,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["loadrelationofsequentialtoloader(sequentialid",{"_index":2352,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["loadrelationofsequentialturns(sequentialid",{"_index":2459,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["loadstatus",{"_index":1330,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["loadstatusid",{"_index":1593,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadstatustitle",{"_index":1594,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["loadtruckinfofromapi",{"_index":3610,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["loadtruckinfofromapi(smartcard",{"_index":3617,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["loadturnslist",{"_index":3750,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["loadturnslist(smartcode",{"_index":3764,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["loadusertypes",{"_index":3971,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["loadwebprocessgroups_webprocessestable",{"_index":2811,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["localapiurl",{"_index":1144,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["logic",{"_index":2557,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{},"components/TurnsListFormComponent.html":{}}}],["login",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["login(loginformdata",{"_index":3917,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loginform",{"_index":1917,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":372,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loginformdata",{"_index":1969,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"injectables/UserAuthService.html":{}}}],["loginpagecomponent",{"_index":374,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["loginresult",{"_index":1947,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginresult.error",{"_index":1955,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginresult.error?.message",{"_index":1957,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginresult.success",{"_index":1954,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logintitle",{"_index":1918,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["logout",{"_index":3911,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loops",{"_index":3408,"title":{},"body":{"components/TimePickerInput.html":{}}}],["main",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mainviewcomponent",{"_index":375,"title":{"components/MainViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["manage",{"_index":2592,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["management",{"_index":1219,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/TabView.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["management.service",{"_index":156,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["management.service.ts",{"_index":9,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["management.service.ts:102",{"_index":4081,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:108",{"_index":1117,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{}}}],["management.service.ts:113",{"_index":4162,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:116",{"_index":3311,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["management.service.ts:117",{"_index":1542,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management.service.ts:118",{"_index":120,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:121",{"_index":1104,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/UserManagementService.html":{}}}],["management.service.ts:124",{"_index":3496,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:126",{"_index":2950,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:13",{"_index":41,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{}}}],["management.service.ts:130",{"_index":1424,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management.service.ts:137",{"_index":3308,"title":{},"body":{"injectables/TariffsManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["management.service.ts:139",{"_index":4163,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:14",{"_index":1778,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["management.service.ts:142",{"_index":1540,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management.service.ts:147",{"_index":137,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:149",{"_index":1082,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/UserManagementService.html":{}}}],["management.service.ts:15",{"_index":37,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:153",{"_index":2956,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:154",{"_index":3493,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:158",{"_index":3314,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["management.service.ts:16",{"_index":1551,"title":{},"body":{"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:161",{"_index":3694,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:163",{"_index":1415,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management.service.ts:168",{"_index":1538,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management.service.ts:170",{"_index":4169,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:172",{"_index":1106,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:177",{"_index":4083,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:18",{"_index":1546,"title":{},"body":{"injectables/LADPlaceManagementService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:182",{"_index":3491,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:186",{"_index":143,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:187",{"_index":3702,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:19",{"_index":149,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:191",{"_index":4167,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:196",{"_index":2964,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:20",{"_index":147,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["management.service.ts:206",{"_index":1108,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/UserManagementService.html":{}}}],["management.service.ts:21",{"_index":1425,"title":{},"body":{"injectables/FpcManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["management.service.ts:215",{"_index":133,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:218",{"_index":3696,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:22",{"_index":4170,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:220",{"_index":4084,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:227",{"_index":2948,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:23",{"_index":1421,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management.service.ts:232",{"_index":1097,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:233",{"_index":4165,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:24",{"_index":135,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["management.service.ts:245",{"_index":123,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:247",{"_index":4077,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:25",{"_index":2958,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{}}}],["management.service.ts:255",{"_index":3705,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:258",{"_index":2960,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:26",{"_index":4093,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:268",{"_index":1095,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:270",{"_index":4079,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:275",{"_index":139,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:28",{"_index":4091,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:287",{"_index":1100,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:290",{"_index":3703,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:297",{"_index":4086,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:301",{"_index":2954,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:309",{"_index":1085,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:318",{"_index":145,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:33",{"_index":1120,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:34",{"_index":1119,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:340",{"_index":1088,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:345",{"_index":2962,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:350",{"_index":126,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:371",{"_index":1090,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:378",{"_index":2946,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["management.service.ts:38",{"_index":1093,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:405",{"_index":1115,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:41",{"_index":1544,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management.service.ts:43",{"_index":23,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["management.service.ts:432",{"_index":1112,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:44",{"_index":1419,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management.service.ts:466",{"_index":1101,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:50",{"_index":4089,"title":{},"body":{"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["management.service.ts:55",{"_index":3698,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management.service.ts:56",{"_index":2171,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["management.service.ts:62",{"_index":141,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:64",{"_index":1417,"title":{},"body":{"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:72",{"_index":3306,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["management.service.ts:74",{"_index":4159,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:79",{"_index":1091,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management.service.ts:82",{"_index":3708,"title":{},"body":{"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{}}}],["management.service.ts:84",{"_index":2169,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["management.service.ts:86",{"_index":1412,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management.service.ts:89",{"_index":131,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["management.service.ts:93",{"_index":4158,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["management.service.ts:94",{"_index":3500,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["management.service.ts:95",{"_index":2952,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{}}}],["management.service.ts:96",{"_index":1550,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management.service.ts:98",{"_index":3700,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["management/apicommunication",{"_index":8,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["management/driver",{"_index":990,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["management/fpc",{"_index":1402,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["management/lad",{"_index":1529,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["management/load",{"_index":1701,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{}}}],["management/mock/truck",{"_index":1130,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management/mock/wallet.mock",{"_index":1141,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["management/model/relation",{"_index":1847,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["management/model/sequential",{"_index":2378,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SequentialTurn.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["management/model/truck",{"_index":991,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["management/model/turn",{"_index":3679,"title":{},"body":{"interfaces/TurnAccounting.html":{},"components/TurnsListFormComponent.html":{}}}],["management/model/turn.model",{"_index":3599,"title":{},"body":{"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["management/model/turn.model.ts",{"_index":3677,"title":{},"body":{"interfaces/Turn.html":{}}}],["management/model/wallet",{"_index":4144,"title":{},"body":{"interfaces/WalletDefaultAmount.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{}}}],["management/model/wallet.model",{"_index":1139,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["management/model/wallet.model.ts",{"_index":4140,"title":{},"body":{"interfaces/Wallet.html":{}}}],["management/province",{"_index":2152,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["management/sequential",{"_index":2377,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["management/tariffs",{"_index":3297,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["management/travel",{"_index":3483,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["management/turn",{"_index":1254,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{}}}],["management/user",{"_index":2762,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["management/wallet",{"_index":4149,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["managername",{"_index":1315,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["manages",{"_index":875,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/TabView.html":{},"components/TruckInfoFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["manually",{"_index":2687,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["map",{"_index":685,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/SelectionKey.html":{},"components/TabViewComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["mappedresponse",{"_index":75,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["mark",{"_index":2554,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["marking",{"_index":871,"title":{},"body":{"components/DatePickerInput.html":{}}}],["matchedchild",{"_index":2924,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["matching",{"_index":83,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.random",{"_index":1380,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["max",{"_index":3382,"title":{},"body":{"components/TimePickerInput.html":{}}}],["maxlength",{"_index":1279,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["meaning",{"_index":609,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["menu",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["menu'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["menu.component",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{}}}],["menu.component.html",{"_index":3046,"title":{},"body":{"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{}}}],["menu.component.scss",{"_index":3047,"title":{},"body":{"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{}}}],["menu.component.ts",{"_index":3044,"title":{},"body":{"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{}}}],["menu.component.ts:12",{"_index":3049,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["menu.component.ts:15",{"_index":3085,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["menu.component.ts:17",{"_index":3081,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["menu.component.ts:20",{"_index":3083,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["menu/sidebar",{"_index":3035,"title":{},"body":{"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{}}}],["menu/sub",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{}}}],["menuitemdata",{"_index":693,"title":{"interfaces/MenuItemData.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/MenuItemData.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{}}}],["menuitems",{"_index":661,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{}}}],["message",{"_index":77,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/ApiResponse.html":{},"injectables/CryptographyService.html":{},"components/DatePickerInput.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/ShortResponse.html":{},"components/TurnsListFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["messagemodule",{"_index":515,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["messages",{"_index":1128,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["messages.ts",{"_index":4254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["messageservice",{"_index":3464,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["method",{"_index":2698,"title":{},"body":{"components/SearchInputComponent.html":{},"injectables/TurnManagementService.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["min",{"_index":1280,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/TimePickerInput.html":{}}}],["minimum",{"_index":2522,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["minlength",{"_index":1281,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["minsearchlength",{"_index":2648,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["minutes",{"_index":3372,"title":{},"body":{"components/TimePickerInput.html":{},"injectables/UserAuthService.html":{}}}],["miscellaneous",{"_index":4251,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mobile",{"_index":903,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{}}}],["mobilenumber",{"_index":1103,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TruckDriverInfo.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["mock",{"_index":3940,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["mock/loader",{"_index":1869,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["mock/relation",{"_index":175,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["mock/sequential",{"_index":2968,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["mock/turn",{"_index":3714,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["mock/turn.mock",{"_index":3710,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["mock/wallet",{"_index":4176,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["mock/wallet.mock",{"_index":4183,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["mockannouncementgroups",{"_index":161,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["mockannouncementsubgroups",{"_index":169,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["mockapigroupprocess",{"_index":4096,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["mockapigroupprocesses",{"_index":263,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["mockapiusernamepassword",{"_index":1131,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["mockcaptcha",{"_index":568,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["mockcargoterminals",{"_index":1578,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["mockfpcsinfo",{"_index":1427,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["mockfpcsinfo[0",{"_index":1432,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["mockladplaces",{"_index":1553,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["mockladplaces[0",{"_index":1560,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["mockladplaces[0].ladplaceid",{"_index":1563,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["mockloadertypes",{"_index":1868,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["mockloadinfo",{"_index":1779,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["mockproducttypes",{"_index":2111,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["mockprovinceandcities",{"_index":2174,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["mockrelationofannouncementgroupandsubgroups",{"_index":174,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["mockrelationofsequentialturntoannouncementsubgroups",{"_index":2972,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["mockrelationofsequentialturntoloadertypes",{"_index":2970,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["mocksequentialturns",{"_index":2967,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["mockshortresponse",{"_index":164,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{}}}],["mocksoftwareuserinfo",{"_index":3938,"title":{},"body":{"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["mocktariffs",{"_index":3316,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["mocktraveltimes",{"_index":3503,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["mocktraveltimes[0",{"_index":3512,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["mocktruckcomposedinfo",{"_index":1134,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["mocktruckdriverinfo",{"_index":1129,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["mocktruckinfo",{"_index":1135,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["mocktrucknativenessinfo",{"_index":1137,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["mockturnaccounting",{"_index":3713,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["mockturns",{"_index":3709,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["mockturns[0",{"_index":3720,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["mockusersession",{"_index":3935,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["mockusertypes",{"_index":4094,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["mockvalue",{"_index":21,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["mockwallet",{"_index":1140,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["mockwalletdefaultamounts",{"_index":4185,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["mockwalletpaymenthistories",{"_index":4181,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["mockwalletpaymentrequest",{"_index":4189,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["mockwallettransactions",{"_index":4175,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["modal",{"_index":1045,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["mode",{"_index":2507,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{}}}],["model",{"_index":1698,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["model.ts",{"_index":1995,"title":{},"body":{"interfaces/PTPInfo.html":{}}}],["model/relation",{"_index":172,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["model/sequential",{"_index":2966,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["model/turn",{"_index":3711,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["model/turn.model",{"_index":3716,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["model/wallet",{"_index":4172,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["model/wallet.model",{"_index":4174,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["models",{"_index":3859,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["modules",{"_index":844,"title":{"modules.html":{}},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{},"modules.html":{}}}],["moneywallet",{"_index":1182,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["moneywalletcode",{"_index":4142,"title":{},"body":{"interfaces/Wallet.html":{}}}],["moneywalletid",{"_index":1111,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Wallet.html":{},"injectables/WalletManagementService.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SemanticTokens.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/WebProcess.html":{},"miscellaneous/functions.html":{}}}],["namefamily",{"_index":1156,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckDriverInfo.html":{}}}],["national",{"_index":959,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["nationalcode",{"_index":1094,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckDriverInfo.html":{}}}],["nationalid",{"_index":901,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{}}}],["nativeness",{"_index":1125,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["navigator.clipboard.writetext(text",{"_index":1040,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{}}}],["needtochange",{"_index":4127,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["needtochange.paccess",{"_index":4129,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["needtochange.pgaccess",{"_index":4132,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["needtochange.pgid",{"_index":4131,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["needtochange.pid",{"_index":4128,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["nested",{"_index":2295,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["new",{"_index":488,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoadingService.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["newchecked",{"_index":2882,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["newkeys",{"_index":3545,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["newkeys[key",{"_index":2877,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["newpartial",{"_index":2884,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["newpassworddialogcomponent",{"_index":378,"title":{"components/NewPasswordDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["newtab",{"_index":3276,"title":{},"body":{"interfaces/TabsState.html":{}}}],["ng",{"_index":845,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":667,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["ngclass",{"_index":455,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TabBarComponent.html":{},"components/TextInputComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["ngonchanges",{"_index":460,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["ngonchanges(changes",{"_index":478,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["ngondestroy",{"_index":668,"title":{},"body":{"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["ngoninit",{"_index":461,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["ngpersiandatepickermodule",{"_index":807,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["ngrx/store",{"_index":709,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarState.html":{},"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabsState.html":{},"dependencies.html":{}}}],["ngstyle",{"_index":1441,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["ngtemplateoutlet",{"_index":3010,"title":{},"body":{"components/SidebarComponent.html":{}}}],["ngx",{"_index":3933,"title":{},"body":{"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["node",{"_index":2888,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.children?.foreach((child",{"_index":2925,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.children?.length",{"_index":2908,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.children?.map((child",{"_index":2899,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.data?.[filed]?.tolowercase().includes(q",{"_index":2923,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.data?.[this.parentfield",{"_index":2896,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.key",{"_index":2906,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["node.styleclass",{"_index":2930,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["nodes",{"_index":2905,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["none",{"_index":3959,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["norecordfound",{"_index":4278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notauthenticated",{"_index":4276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfound",{"_index":4270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundinlocalapi",{"_index":4274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"interfaces/ErrorsValidation.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/TabsState.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/UserAuthService.html":{},"miscellaneous/functions.html":{}}}],["num",{"_index":3441,"title":{},"body":{"components/TimePickerInput.html":{}}}],["number",{"_index":101,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/FPCInfo.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserType.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["number(control.value",{"_index":3458,"title":{},"body":{"components/TimePickerInput.html":{}}}],["number(key",{"_index":2787,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["number(key.split",{"_index":2785,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["number(this.sequentialturnid.value",{"_index":2198,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["number(this.truckid.value",{"_index":2197,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["number(value",{"_index":3442,"title":{},"body":{"components/TimePickerInput.html":{}}}],["o1",{"_index":2753,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["o2",{"_index":2751,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["object",{"_index":2527,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/TabView.html":{},"components/UserInfoFormComponent.html":{}}}],["object.assign(compref.instance",{"_index":3264,"title":{},"body":{"components/TabViewComponent.html":{}}}],["object.keys(newkeys",{"_index":2875,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["object.keys(this.lastselectionkeys",{"_index":2874,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["object.values(tabcomponentkey).includes(process.id",{"_index":3092,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["observable",{"_index":1893,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{}}}],["old",{"_index":2776,"title":{},"body":{"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["old?.checked",{"_index":2879,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["old?.partialchecked",{"_index":2881,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["oldchecked",{"_index":2878,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["oldpartial",{"_index":2880,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["on(sidebaractions.closesidebar",{"_index":3061,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["on(sidebaractions.opensidebar",{"_index":3060,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["on(sidebaractions.selectpagegroup",{"_index":3070,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["on(sidebaractions.setpagegroups",{"_index":3064,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["on(sidebaractions.togglesidebar",{"_index":3062,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["on(tabsactions.activetab",{"_index":3291,"title":{},"body":{"interfaces/TabsState.html":{}}}],["on(tabsactions.addtab",{"_index":3275,"title":{},"body":{"interfaces/TabsState.html":{}}}],["on(tabsactions.closealltab",{"_index":3289,"title":{},"body":{"interfaces/TabsState.html":{}}}],["on(tabsactions.closetab",{"_index":3281,"title":{},"body":{"interfaces/TabsState.html":{}}}],["onautocompletechange",{"_index":2216,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["onautocompletechange(control",{"_index":2354,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["onautocompletechange(controller",{"_index":2231,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["onblurinput",{"_index":808,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["onblurinput(_",{"_index":831,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{}}}],["onblurinput(control",{"_index":3391,"title":{},"body":{"components/TimePickerInput.html":{}}}],["onchangecheckbox",{"_index":1802,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["onchangecheckbox(control",{"_index":1812,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["onchangeproduct",{"_index":2027,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["onchangeproduct(change",{"_index":2039,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["onchangeprovinceandcity",{"_index":2130,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["onchangeprovinceandcity(change",{"_index":2139,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["onchanges",{"_index":451,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["onclicksearch",{"_index":2914,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["onclicksubmenu",{"_index":3080,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["onclicksubmenu(process",{"_index":3082,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["onclosedialog",{"_index":3751,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["onclosetab",{"_index":3131,"title":{},"body":{"components/TabBarComponent.html":{}}}],["onclosetab(id",{"_index":3134,"title":{},"body":{"components/TabBarComponent.html":{}}}],["ondelete",{"_index":2217,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["ondelete(row",{"_index":2234,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["ondestroy",{"_index":651,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["ondestroy,onchanges",{"_index":2711,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["ondrawerclose",{"_index":3016,"title":{},"body":{"components/SidebarComponent.html":{}}}],["one",{"_index":3279,"title":{},"body":{"interfaces/TabsState.html":{}}}],["onfocusinput",{"_index":809,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["onfocusinput(input",{"_index":835,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["oninit",{"_index":450,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/HomePageComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["oninputchanged",{"_index":2636,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["oninputchanged(event",{"_index":2679,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onkeydown",{"_index":3344,"title":{},"body":{"components/TextInputComponent.html":{}}}],["onkeydown(event",{"_index":3358,"title":{},"body":{"components/TextInputComponent.html":{}}}],["onrefreshclick",{"_index":519,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["onresize",{"_index":3017,"title":{},"body":{"components/SidebarComponent.html":{}}}],["onsearch",{"_index":2479,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["onsearch(event",{"_index":2561,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["onsearchbuttonclick",{"_index":2637,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onsearchquery",{"_index":2649,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onselectannouncement",{"_index":2218,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["onselectannouncement(announcement",{"_index":2236,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["onselectautocomplete",{"_index":2480,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["onselectautocomplete(event",{"_index":2566,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["onselectloadertype",{"_index":2343,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["onselectloadertype(loadertype",{"_index":2356,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["onselectsequentialturn",{"_index":2344,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["onselectsequentialturn(sequentialturn",{"_index":2358,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["onselectsubannouncement",{"_index":2219,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["onselectsubannouncement(subgroup",{"_index":2238,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["onsubmit",{"_index":1371,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/LoginFormComponent.html":{}}}],["ontabchange",{"_index":3237,"title":{},"body":{"components/TabViewComponent.html":{}}}],["ontabchange(index",{"_index":3242,"title":{},"body":{"components/TabViewComponent.html":{}}}],["ontabclick",{"_index":3132,"title":{},"body":{"components/TabBarComponent.html":{}}}],["ontabclick(id",{"_index":3136,"title":{},"body":{"components/TabBarComponent.html":{}}}],["ontablecheckboxchange",{"_index":2861,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["onvaluechanged",{"_index":2481,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["onvaluechanged(input",{"_index":2570,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["open",{"_index":940,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["opensidebar",{"_index":1459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openturnaccounting",{"_index":3752,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["openturnaccounting(row",{"_index":3768,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["optimize",{"_index":2581,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["option",{"_index":475,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"injectables/WalletManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{},"miscellaneous/functions.html":{}}}],["optionlabel",{"_index":2485,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["options",{"_index":2496,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{}}}],["optionvalue",{"_index":2486,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["otaghdarturnnumber",{"_index":1199,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["outdoorapiurl",{"_index":1142,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["outlined",{"_index":2314,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["output",{"_index":842,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["outputs",{"_index":2488,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["overview",{"_index":4298,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["paccess",{"_index":241,"title":{},"body":{"interfaces/ApiProcess.html":{},"interfaces/SelectedNodes.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["package",{"_index":4222,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page'},{'name",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["page.component.html",{"_index":1384,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.scss",{"_index":1385,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts",{"_index":1383,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:26",{"_index":1492,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:27",{"_index":1494,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:29",{"_index":1493,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:30",{"_index":1484,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:34",{"_index":1491,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:38",{"_index":1490,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:44",{"_index":1495,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:51",{"_index":1488,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.icon",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["page.processes",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["page.title",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["page/forget",{"_index":1382,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{}}}],["page/login",{"_index":1974,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["pagegroup",{"_index":255,"title":{"interfaces/PageGroup.html":{}},"body":{"injectables/ApiProcessesService.html":{},"interfaces/PageGroup.html":{},"interfaces/SidebarState.html":{}}}],["pagegroups",{"_index":267,"title":{},"body":{"injectables/ApiProcessesService.html":{},"interfaces/SidebarState.html":{}}}],["pagegroupsub",{"_index":662,"title":{},"body":{"components/DashboardComponent.html":{}}}],["paginator",{"_index":2855,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["paginatorlocale",{"_index":2858,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["panel",{"_index":4297,"title":{},"body":{"index.html":{}}}],["panelmenumodule",{"_index":3045,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["panelmodule",{"_index":1473,"title":{},"body":{"components/HomePageComponent.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":2072,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["parent.producttypeactive",{"_index":2083,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["parent.provinceactive",{"_index":2154,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["parentage",{"_index":1345,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["parentchecked",{"_index":2895,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["parentfield",{"_index":2850,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["parentmatch",{"_index":2921,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["parentnode.checked",{"_index":2827,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["parentnode.children?.foreach((childnode",{"_index":2829,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["parentnode.partialselected",{"_index":2828,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["partialchecked",{"_index":2065,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["password",{"_index":93,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["password.mock",{"_index":1133,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["password.model",{"_index":1122,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["password.model.ts",{"_index":88,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"interfaces/UsernamePassword.html":{}}}],["passwordinputcomponent",{"_index":381,"title":{"components/PasswordInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["path",{"_index":2894,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"injectables/UserAuthService.html":{}}}],["pattern",{"_index":1282,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["payment",{"_index":4179,"title":{},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{}}}],["paymenturi",{"_index":4219,"title":{},"body":{"interfaces/WalletPaymentRequest.html":{}}}],["pelak",{"_index":3600,"title":{},"body":{"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{}}}],["percentage",{"_index":3305,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["performsearch",{"_index":2638,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["performsearch(query",{"_index":2688,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["persian",{"_index":846,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TruckInfoFormComponent.html":{},"dependencies.html":{}}}],["pg.icon",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pg.id",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pg.title",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pgaccess",{"_index":233,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"injectables/UserManagementService.html":{}}}],["pgiconname",{"_index":234,"title":{},"body":{"interfaces/ApiGroupProcess.html":{}}}],["pgid",{"_index":235,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"injectables/UserManagementService.html":{}}}],["pgtitle",{"_index":236,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["phone",{"_index":1372,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["pi",{"_index":822,"title":{},"body":{"components/DatePickerInput.html":{},"components/HeaderComponent.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{}}}],["picker",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["picks",{"_index":2569,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["piconname",{"_index":242,"title":{},"body":{"interfaces/ApiProcess.html":{}}}],["pid",{"_index":243,"title":{},"body":{"interfaces/ApiProcess.html":{},"injectables/UserManagementService.html":{}}}],["pipe(debouncetime(this.debouncetimems",{"_index":2716,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":1006,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["place",{"_index":1528,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["place.mock",{"_index":1555,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["place.model",{"_index":1498,"title":{},"body":{"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/TerminalCardComponent.html":{}}}],["place.model.ts",{"_index":1519,"title":{},"body":{"interfaces/LADPlace.html":{},"interfaces/LoadAnnouncementPlace.html":{}}}],["placeholder",{"_index":812,"title":{},"body":{"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{}}}],["places",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["places.service",{"_index":1505,"title":{},"body":{"components/HomePageComponent.html":{}}}],["places.service.ts",{"_index":1574,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["places.service.ts:12",{"_index":1577,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["places.service.ts:14",{"_index":1576,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["pname",{"_index":244,"title":{},"body":{"interfaces/ApiProcess.html":{}}}],["popovermodule",{"_index":3101,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["populate",{"_index":928,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["populatecapacitorform",{"_index":1591,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["populatecapacitorform(load",{"_index":1619,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["populatedataforhtml",{"_index":3560,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["populatedriverform",{"_index":894,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["populatedriverform(driverinfo",{"_index":925,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["populateform",{"_index":3972,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["populateform(data",{"_index":3982,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["populatesearchform",{"_index":3753,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["populatesearchform(truckid",{"_index":3769,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["populatetruckform",{"_index":3826,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["populatetruckform(truck",{"_index":3836,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["populatetruckinfoform",{"_index":3611,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["populatetruckinfoform(truck",{"_index":3619,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["populatetrucknativenessform",{"_index":3612,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["populatetrucknativenessform(info",{"_index":3621,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["preset",{"_index":633,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["prevent",{"_index":868,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/TabsState.html":{},"components/TimePickerInput.html":{}}}],["preventifreadonly",{"_index":462,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["preventifreadonly(event",{"_index":484,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["primary",{"_index":600,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["primeflex",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3405,"title":{},"body":{"components/TimePickerInput.html":{},"dependencies.html":{}}}],["primeng/animateonscroll",{"_index":1499,"title":{},"body":{"components/HomePageComponent.html":{}}}],["primeng/api",{"_index":2055,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/ToastService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["primeng/autocomplete",{"_index":2580,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["primeng/button",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"components/SupportButtonComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["primeng/card",{"_index":1399,"title":{},"body":{"components/FormCardComponent.html":{},"components/SubMenuComponent.html":{},"components/TerminalCardComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["primeng/checkbox",{"_index":587,"title":{},"body":{"components/CheckboxInputComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{}}}],["primeng/confirmdialog",{"_index":2268,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["primeng/dialog",{"_index":984,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/SupportButtonComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["primeng/drawer",{"_index":3033,"title":{},"body":{"components/SidebarComponent.html":{}}}],["primeng/dynamicdialog",{"_index":999,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["primeng/inputgroup",{"_index":531,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["primeng/inputgroupaddon",{"_index":532,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["primeng/message",{"_index":533,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DatePickerInput.html":{},"components/PasswordInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["primeng/panel",{"_index":1503,"title":{},"body":{"components/HomePageComponent.html":{}}}],["primeng/panelmenu",{"_index":3050,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["primeng/popover",{"_index":3116,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["primeng/progressspinner",{"_index":1896,"title":{},"body":{"components/LoadingComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["primeng/radiobutton",{"_index":495,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["primeng/scrolltop",{"_index":3115,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["primeng/select",{"_index":2757,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["primeng/splitter",{"_index":3562,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["primeng/table",{"_index":1702,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["primeng/tabs",{"_index":3145,"title":{},"body":{"components/TabBarComponent.html":{},"components/TabViewComponent.html":{}}}],["primeng/themes",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["primeng/toast",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/treetable",{"_index":2054,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["primitive",{"_index":610,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["primitives",{"_index":638,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["primitivetokens",{"_index":604,"title":{"interfaces/PrimitiveTokens.html":{}},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["private",{"_index":12,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["proc.description!.trim",{"_index":279,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["proc.piconname!.trim",{"_index":280,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["proc.pid",{"_index":276,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["proc.pname!.trim",{"_index":278,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["proc.ptitle!.trim",{"_index":277,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["process",{"_index":3084,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["process.description",{"_index":3097,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["process.id",{"_index":3094,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["process.mock",{"_index":4098,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["process.model",{"_index":239,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"interfaces/PageGroup.html":{},"components/SubMenuComponent.html":{},"injectables/UserManagementService.html":{}}}],["process.model.ts",{"_index":232,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/WebProcess.html":{}}}],["process.title",{"_index":3096,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["processed",{"_index":2712,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["processes",{"_index":274,"title":{},"body":{"injectables/ApiProcessesService.html":{},"interfaces/PageGroup.html":{},"components/SubMenuComponent.html":{}}}],["processes.service",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{}}}],["processes.service.ts",{"_index":248,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes.service.ts:14",{"_index":259,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes.service.ts:16",{"_index":260,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes.service.ts:17",{"_index":257,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes.service.ts:19",{"_index":256,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes.service.ts:46",{"_index":253,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["processes/api",{"_index":247,"title":{},"body":{"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{}}}],["product",{"_index":383,"title":{"interfaces/Product.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["productactive",{"_index":2007,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["productformcomponent",{"_index":382,"title":{"components/ProductFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["productid",{"_index":2008,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/TariffsManagementService.html":{}}}],["productinfo",{"_index":2120,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["productinfo.productactive",{"_index":2122,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["productinfo.productid",{"_index":2121,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["production",{"_index":3169,"title":{},"body":{"interfaces/TabView.html":{}}}],["productparent",{"_index":2063,"title":{"interfaces/ProductParent.html":{}},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["products",{"_index":2014,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"interfaces/SelectionOption.html":{}}}],["productstype",{"_index":2032,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["producttitle",{"_index":2009,"title":{},"body":{"interfaces/Product.html":{},"interfaces/ProductType.html":{}}}],["producttype",{"_index":2010,"title":{"interfaces/ProductType.html":{}},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["producttype.products?.map((product",{"_index":2071,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["producttype.producttypeactive",{"_index":2069,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["producttype.producttypeid",{"_index":2067,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["producttype.producttypetitle",{"_index":2068,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["producttypeactive",{"_index":2013,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["producttypeid",{"_index":2011,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["producttypeinfo",{"_index":2114,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["producttypeinfo.producttypeactive",{"_index":2118,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["producttypeinfo.producttypeid",{"_index":2117,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["producttypeinfo.producttypetitle",{"_index":2115,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["producttypeservice",{"_index":2021,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["producttypesmanagement",{"_index":3203,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["producttypesservice",{"_index":2060,"title":{"injectables/ProductTypesService.html":{}},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["producttypetitle",{"_index":2012,"title":{},"body":{"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["progressspinnermodule",{"_index":1889,"title":{},"body":{"components/LoadingComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["promise",{"_index":33,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["promise(function",{"_index":3951,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["promise.allsettled(disablepromises",{"_index":2789,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["promise.allsettled(enablepromises",{"_index":2800,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["promise.allsettled(requests",{"_index":2087,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["promisefulfilledresult",{"_index":2805,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["promiserejectedresult",{"_index":2092,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["prop",{"_index":867,"title":{},"body":{"components/DatePickerInput.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"properties.html":{}}}],["property",{"_index":630,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["provide",{"_index":607,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["provided",{"_index":2516,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["providedin",{"_index":60,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["providers",{"_index":878,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["province",{"_index":385,"title":{"interfaces/Province.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["province.cities",{"_index":2182,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["province.cities?.map((city",{"_index":2163,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["province.provinceactive",{"_index":2162,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["province.provinceid",{"_index":2160,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["province.provincename",{"_index":2161,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["province.provincename?.trim",{"_index":2181,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceactive",{"_index":595,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["provinceandcities",{"_index":2178,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceandcities.provincename",{"_index":2179,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceandcityformcomponent",{"_index":384,"title":{"components/ProvinceAndCityFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["provinceandcitymanagement",{"_index":3201,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["provinceandcitymanagementservice",{"_index":2150,"title":{"injectables/ProvinceAndCityManagementService.html":{}},"body":{"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["provinceandcityname",{"_index":2173,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceid",{"_index":593,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["provinceinfo",{"_index":2184,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceinfo.provinceactive",{"_index":2186,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provinceinfo.provinceid",{"_index":2185,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["provincename",{"_index":594,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectionOption-1.html":{}}}],["provinces",{"_index":2133,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["provinces.map((province",{"_index":2159,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["provincesandcites",{"_index":2126,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["provincesandcitesservice",{"_index":2127,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["ptitle",{"_index":245,"title":{},"body":{"interfaces/ApiProcess.html":{}}}],["ptp",{"_index":1784,"title":{},"body":{"interfaces/LoadInfo.html":{}}}],["ptpformarray",{"_index":1587,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["ptpinfo",{"_index":1613,"title":{"interfaces/PTPInfo.html":{}},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/PTPInfo.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["q",{"_index":2918,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["queries",{"_index":2583,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["query",{"_index":1513,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["query.length",{"_index":2066,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["query.substring(0",{"_index":2611,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["query.trim().tolowercase",{"_index":2919,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["query.trimstart",{"_index":2726,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["querykey",{"_index":2729,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["r",{"_index":2792,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["r.status",{"_index":2090,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["radio",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["radiobuttonmodule",{"_index":454,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["radioname",{"_index":468,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["range",{"_index":3437,"title":{},"body":{"components/TimePickerInput.html":{}}}],["ranges",{"_index":3413,"title":{},"body":{"components/TimePickerInput.html":{}}}],["raw",{"_index":2681,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["rawannouncement",{"_index":199,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["rawannouncementsubgroup",{"_index":213,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["rawfpc",{"_index":1434,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["rawfpcinfo",{"_index":1413,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["rawinput",{"_index":2652,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["rawladplaceinf",{"_index":1562,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["rawsequentialturn",{"_index":2981,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["rawsoftwareuser",{"_index":4105,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["rawvalue",{"_index":2737,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["reactive",{"_index":2382,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["reactiveformsmodule",{"_index":456,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["reactiveformsmodule,commonmodule",{"_index":1703,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["read",{"_index":690,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["readonly",{"_index":249,"title":{},"body":{"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"injectables/LoadingService.html":{},"components/PasswordInputComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/UserAuthService.html":{}}}],["real",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["realtimeturnregister",{"_index":3688,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["realtimeturnregister(truckid",{"_index":3701,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["realtimeturnsformcomponent",{"_index":387,"title":{"components/RealTimeTurnsFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["recipient",{"_index":1343,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["record",{"_index":2051,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TabView.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["recursive",{"_index":3407,"title":{},"body":{"components/TimePickerInput.html":{}}}],["redundant",{"_index":2586,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["refine",{"_index":2618,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["refresh",{"_index":2700,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["refreshsearch",{"_index":2639,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["region",{"_index":176,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["register",{"_index":2322,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/UserInfoFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["registerannouncementgroup",{"_index":198,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registerannouncementsubgroup",{"_index":212,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registering",{"_index":3731,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["registernew_editdrivermobilenumber",{"_index":1077,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["registernew_editdrivermobilenumber(driverid",{"_index":1102,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["registernewannouncementgroup",{"_index":116,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewannouncementgroup(title",{"_index":140,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewannouncementsubgroup",{"_index":117,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewannouncementsubgroup(title",{"_index":142,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewladplace",{"_index":1535,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["registernewladplace(ladplaceinfo",{"_index":1547,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["registernewrelationofannouncementgroupandsubgroup",{"_index":118,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewrelationofannouncementgroupandsubgroup(announcementgroupid",{"_index":144,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["registernewrelationofsequentialturntoannouncementsubgroup",{"_index":2942,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewrelationofsequentialturntoannouncementsubgroup(sequentialturnid",{"_index":2961,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewrelationofsequentialturntoloadertype",{"_index":2943,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewrelationofsequentialturntoloadertype(sequentialturnid",{"_index":2963,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewsequentialturn",{"_index":2944,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewsequentialturn(id",{"_index":2965,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registernewsoftwareuser",{"_index":4072,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["registernewsoftwareuser(userinfo",{"_index":4087,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["registernewtraveltime",{"_index":3489,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["registernewtraveltime(loadertypeid",{"_index":3499,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["registerrelationannouncement",{"_index":2220,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["registerrelationsequentialtoloader",{"_index":2345,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["registerrelationtoloadertype",{"_index":2992,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["registerreserveturn",{"_index":3736,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["registertariff",{"_index":3303,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["registertariff(tariff",{"_index":3313,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["registeruser",{"_index":3973,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["registry",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{},"interfaces/TabItem.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{}}}],["registry.ts",{"_index":3163,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["rejectbuttonprops",{"_index":2311,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["rejected",{"_index":2091,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["relation",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["relationofannouncementgroupandsubgroup",{"_index":171,"title":{"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{}},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["relationofannouncementgroupandsubgroup.deleterelation",{"_index":226,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofannouncementgroupandsubgroup.getrelations",{"_index":217,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofannouncementgroupandsubgroup.registerrelation",{"_index":224,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofannouncementgroupandsubgroupcomponent",{"_index":388,"title":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["relationofannouncementgroupandsubgroupinfo",{"_index":218,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofannouncementgroupandsubgroupinfo.announcementid",{"_index":220,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofannouncementgroupandsubgroupinfo.announcementsubgroups[0",{"_index":225,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["relationofsequentialtoloadertypeinfo",{"_index":2987,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialtoloadertypeinfo.loadertypes[0].loadertypeid",{"_index":2993,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialtoloadertypeinfo.seqturnid",{"_index":2988,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoannouncementsubgroup",{"_index":2333,"title":{"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{}},"body":{"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["relationofsequentialturntoannouncementsubgroupinfo",{"_index":3001,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoannouncementsubgroupinfo.seqturnid",{"_index":3002,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoannouncementsubgroupsformcomponent",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["relationofsequentialturntoloadertype",{"_index":1850,"title":{"interfaces/RelationOfSequentialTurnToLoaderType.html":{}},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoloadertypeformcomponent",{"_index":392,"title":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["relationofsequentialturntoloadertypeinfo",{"_index":2995,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoloadertypeinfo.loadertypes[0].loadertypeid",{"_index":2997,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationofsequentialturntoloadertypeinfo.seqturnid",{"_index":2996,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relations",{"_index":1181,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["relationsannouncement",{"_index":2210,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["relationsequentialtoloaderform",{"_index":2336,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["relationssequential",{"_index":2441,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["relationtoannouncementsubgroups",{"_index":3006,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationtoannouncementsubgroups.getrelationtoannouncementsubgroups",{"_index":3000,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["relationtoannouncementsubgroups.registerrelationtoannouncementsubgroup",{"_index":3004,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["reload",{"_index":2808,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["rememberme",{"_index":1920,"title":{},"body":{"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{}}}],["rememberme:boolean",{"_index":1971,"title":{},"body":{"interfaces/LoginFormData.html":{}}}],["reminder",{"_index":4212,"title":{},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletTransaction.html":{}}}],["removecomponent",{"_index":669,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removecomponent(id",{"_index":675,"title":{},"body":{"components/DashboardComponent.html":{}}}],["render",{"_index":3128,"title":{},"body":{"components/TabBarComponent.html":{}}}],["rendercomponent",{"_index":670,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rendercomponent(tab",{"_index":677,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repeated",{"_index":2582,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["repo",{"_index":4293,"title":{},"body":{"index.html":{}}}],["request",{"_index":189,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["request.mock",{"_index":4190,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["request.model",{"_index":4188,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["request.model.ts",{"_index":4217,"title":{},"body":{"interfaces/WalletPaymentRequest.html":{}}}],["requests",{"_index":2085,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["required",{"_index":1283,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["res",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"miscellaneous/functions.html":{}}}],["res.data",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["res.data.flatmap((group",{"_index":2445,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["res.data.map(pg",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res.data.message",{"_index":2320,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["res.data?.map((type",{"_index":4009,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["res.data?.message",{"_index":2327,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/UserInfoFormComponent.html":{}}}],["res.data?.userid",{"_index":4028,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["res.error?.details",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res.error?.message",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["res.success",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["rescomposed",{"_index":3868,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["rescomposed.data",{"_index":3872,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["reserve",{"_index":3733,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["reserveturnregister",{"_index":3689,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["reset",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["resetdriverpassword",{"_index":895,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{}}}],["resetdriverpassword(driverid",{"_index":1105,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["resetform",{"_index":1226,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["resetfpcuserpassword",{"_index":1409,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["resetfpcuserpassword(fpcid",{"_index":1423,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["resetloginform",{"_index":1919,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["resetsearchform",{"_index":3974,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["resetsoftwareuserpassword",{"_index":4073,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["resetsoftwareuserpassword(userid",{"_index":4088,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["resetturnsbaseform",{"_index":3827,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["resetuserinfoform",{"_index":3975,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["resetuserpassword",{"_index":3976,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["resolve",{"_index":3952,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resolving",{"_index":2519,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["response",{"_index":72,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["response.data",{"_index":1036,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["response.data!.foreach((loader",{"_index":1827,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["response.data.message",{"_index":1269,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["response.data?.captcha",{"_index":574,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["response.data?.ladplaceid",{"_index":1564,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["response.data?.map((data",{"_index":192,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["response.data?.map((loadertype",{"_index":1874,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["response.data?.map((province",{"_index":2180,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["response.data?.map((x",{"_index":4120,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["response.data?.message",{"_index":1029,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["response.data?.mobilenumber",{"_index":2839,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["response.data?.sessionid",{"_index":573,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["response.data?.softwareuserid",{"_index":4107,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["response.data?.tptparams.map((params",{"_index":1707,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["response.data?.userid",{"_index":2838,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["response.data?.userpassword",{"_index":1171,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["response.data?.usershenaseh",{"_index":1170,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{}}}],["response.error",{"_index":196,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["response.error?.code",{"_index":1149,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["response.error?.message",{"_index":1056,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["response.mock",{"_index":166,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{}}}],["response.model",{"_index":49,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["response.model.ts",{"_index":281,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/ShortResponse.html":{}}}],["response.success",{"_index":191,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/CaptchaService.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["response.truck",{"_index":1209,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["response.turn",{"_index":1188,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["response?.moneywallet",{"_index":1211,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["response?.truckdriver",{"_index":1210,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["restruckinfo",{"_index":3780,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["restruckinfo.data.pelak",{"_index":3786,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["restruckinfo.data.truckid",{"_index":3785,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["resturnsinfo",{"_index":3787,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["resturnsinfo.data",{"_index":3790,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["result",{"_index":1489,"title":{},"body":{"components/HomePageComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"injectables/UserAuthService.html":{}}}],["result.data?.sessionid",{"_index":3945,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["result.error",{"_index":3946,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["result.length",{"_index":2631,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["result.success",{"_index":3944,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["results",{"_index":82,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["results.find((r",{"_index":2089,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["resuscitate",{"_index":2417,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["resuscitatereserveturn",{"_index":3690,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["resuscitatereserveturn(truckid",{"_index":3704,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["resuscitateturn",{"_index":3691,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["resuscitateturn(turnid",{"_index":3706,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["resuscitateturnform",{"_index":2418,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["resuscitateturnsformcomponent",{"_index":393,"title":{"components/ResuscitateTurnsFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["retrieved",{"_index":3874,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["return",{"_index":66,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/SidebarState.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":3967,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["root",{"_index":61,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/AppComponent.html":{},"injectables/CaptchaService.html":{},"injectables/CryptographyService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/LoadingService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["root'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["router",{"_index":663,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginFormComponent.html":{},"components/SupportButtonComponent.html":{},"injectables/UserAuthService.html":{}}}],["routeroutlet",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet,commonmodule,toastmodule,loadingcomponent",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":2226,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["row.announcementid",{"_index":2306,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["row.announcementsgid",{"_index":2307,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["row.announcementsgtitle",{"_index":2462,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["row.loadertypeid",{"_index":2407,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["row.loadertypetitle",{"_index":2403,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["row.seqturnid",{"_index":2406,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["row.seqturntitle",{"_index":2402,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["row.turnid",{"_index":3792,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata",{"_index":3760,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.accountingtypetitle",{"_index":3820,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.announcementsgtitle",{"_index":2332,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["rowdata.announcementtitle",{"_index":2331,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{}}}],["rowdata.dateoflastchanged",{"_index":3814,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.dateshamsi",{"_index":3818,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.loadertypetitle",{"_index":2415,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["rowdata.otaghdarturnnumber",{"_index":3808,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.seqturntitle",{"_index":2414,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{}}}],["rowdata.sequentialturnid",{"_index":3817,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.sequentialturntitle",{"_index":3815,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.softwareusername",{"_index":3816,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.time",{"_index":3819,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.truckdriver",{"_index":3811,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.turnid",{"_index":3807,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.turnissuedate",{"_index":3809,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.turnissuetime",{"_index":3810,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.turnstatusdescription",{"_index":3813,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.turnstatustitle",{"_index":3812,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata.username",{"_index":3821,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["rowdata[col.field",{"_index":4138,"title":{},"body":{"components/UsersMenuAccessFormComponent.html":{}}}],["rowdata[field",{"_index":3553,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["rowitem",{"_index":3552,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["rowrelationofannouncement",{"_index":2224,"title":{"interfaces/RowRelationOfAnnouncement.html":{}},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["rowrelationofsequential",{"_index":2438,"title":{"interfaces/RowRelationOfSequential.html":{}},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["rowrelationofsequentialtoloader",{"_index":2349,"title":{"interfaces/RowRelationOfSequentialToLoader.html":{}},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["rows",{"_index":2395,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["rowsperpage",{"_index":2856,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["rule",{"_index":859,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["rxjs",{"_index":57,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/TabBarComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":3404,"title":{},"body":{"components/TimePickerInput.html":{}}}],["samesite",{"_index":3958,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["savechanges",{"_index":2774,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["schema",{"_index":854,"title":{},"body":{"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["schema.ts",{"_index":1277,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["schemes",{"_index":618,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["screen",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["scrolltopmodule",{"_index":3100,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["search",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["searchannouncementgroup",{"_index":2211,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["searchannouncementsubgroup",{"_index":2212,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["searchautocompletecomponent",{"_index":394,"title":{"components/SearchAutoCompleteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["searchbuttonlabel",{"_index":2650,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["searches",{"_index":2587,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["searchfields",{"_index":2853,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["searchform",{"_index":890,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["searchinputcomponent",{"_index":398,"title":{"components/SearchInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["searchloaders",{"_index":1803,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["searchloaders(query",{"_index":1813,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["searchloadertype",{"_index":2337,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["searchnationalid",{"_index":899,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["searchphone",{"_index":2771,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["searchplaceholder",{"_index":2854,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["searchproduct",{"_index":2028,"title":{},"body":{"components/ProductFormComponent.html":{}}}],["searchproduct(query",{"_index":2042,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["searchprovinceandcity",{"_index":2131,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{}}}],["searchprovinceandcity(query",{"_index":2141,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["searchquery",{"_index":2628,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["searchresult",{"_index":2653,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["searchsequentialturn",{"_index":2338,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["searchsequentialturnwithloadertype",{"_index":3822,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["searchsmartcard",{"_index":3613,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["searchstring",{"_index":186,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["searchterm",{"_index":2865,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["searchtitle",{"_index":1804,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["searchtruckdriverinfo",{"_index":3823,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["searchtruckinfoform",{"_index":3824,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["searchtruckinformation",{"_index":3739,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["searchtrukform",{"_index":3740,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["second",{"_index":3373,"title":{},"body":{"components/TimePickerInput.html":{}}}],["secondary",{"_index":2313,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["seconds",{"_index":3422,"title":{},"body":{"components/TimePickerInput.html":{}}}],["secure",{"_index":3957,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["select",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["selectactivetab",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabBarComponent.html":{}}}],["selectalltabs",{"_index":3144,"title":{},"body":{"components/TabBarComponent.html":{}}}],["selected",{"_index":2284,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{}}}],["selectednodes",{"_index":2758,"title":{"interfaces/SelectedNodes.html":{}},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["selectednodescopy",{"_index":2768,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["selectedpagegroupid",{"_index":3055,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["selectinputcomponent",{"_index":399,"title":{"components/SelectInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["selection",{"_index":3887,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["selectionkey",{"_index":2022,"title":{"interfaces/SelectionKey.html":{}},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["selectionkeys",{"_index":2863,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["selectionkeyschanged",{"_index":3521,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["selectionkeyschanged(newkeys",{"_index":2872,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["selectionoption",{"_index":2064,"title":{"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["selections",{"_index":2388,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["selectissidebaropen",{"_index":3032,"title":{},"body":{"components/SidebarComponent.html":{}}}],["selectlastclosedtabid",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectmodule",{"_index":2745,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["selector",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["selectpagegroup",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectselectedpagegroup",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectsuggestion",{"_index":2489,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["semantic",{"_index":605,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["semantictokens",{"_index":611,"title":{"interfaces/SemanticTokens.html":{}},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["send",{"_index":935,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["sendpaymentrequest",{"_index":4157,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["sendpaymentrequest(amount",{"_index":4168,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["sendwebsitelink",{"_index":896,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{}}}],["sendwebsitelink(driverid",{"_index":1107,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["sendwebsitelink(userid",{"_index":4090,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["seqturnid",{"_index":1851,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["seqturnkeyword",{"_index":2933,"title":{},"body":{"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["seqturntitle",{"_index":1852,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["sequential",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sequentialid",{"_index":2346,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["sequentialtitle",{"_index":2347,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["sequentialturn",{"_index":1848,"title":{"interfaces/SequentialTurn.html":{}},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["sequentialturnform",{"_index":2442,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["sequentialturnid",{"_index":1228,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["sequentialturninfo",{"_index":2975,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["sequentialturninfo.seqturnid",{"_index":2984,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["sequentialturninfo.seqturntitle",{"_index":2976,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["sequentialturnmanagement",{"_index":3192,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["sequentialturnmanagementservice",{"_index":2375,"title":{"injectables/SequentialTurnManagementService.html":{}},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["sequentialturnservice",{"_index":2339,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["sequentialturnsformcomponent",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sequentialturntitle",{"_index":1207,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["serial",{"_index":3601,"title":{},"body":{"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{}}}],["serialnumber",{"_index":1318,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/TruckInfoFormComponent.html":{}}}],["service",{"_index":1025,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["service.service",{"_index":995,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["service.service.ts",{"_index":1900,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service.service.ts:11",{"_index":1904,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service.service.ts:8",{"_index":1909,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service.service.ts:9",{"_index":1907,"title":{},"body":{"injectables/LoadingService.html":{}}}],["service/captcha.service",{"_index":535,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["service/captcha.service.ts",{"_index":562,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["service/captcha.service.ts:12",{"_index":565,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["service/captcha.service.ts:14",{"_index":564,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["service/cryptography.service",{"_index":1941,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["service/cryptography.service.ts",{"_index":642,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["service/cryptography.service.ts:8",{"_index":645,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["service/loading",{"_index":994,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["service/toast.service",{"_index":537,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SupportButtonComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["service/toast.service.ts",{"_index":3463,"title":{},"body":{"injectables/ToastService.html":{}}}],["service/toast.service.ts:12",{"_index":3467,"title":{},"body":{"injectables/ToastService.html":{}}}],["service/toast.service.ts:16",{"_index":3469,"title":{},"body":{"injectables/ToastService.html":{}}}],["service/toast.service.ts:6",{"_index":3473,"title":{},"body":{"injectables/ToastService.html":{}}}],["service/toast.service.ts:8",{"_index":3471,"title":{},"body":{"injectables/ToastService.html":{}}}],["service/user",{"_index":153,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["services",{"_index":3860,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["session.mock",{"_index":3937,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["session.model",{"_index":3932,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["session.model.ts",{"_index":4135,"title":{},"body":{"interfaces/UserSession.html":{}}}],["sessionid",{"_index":184,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"interfaces/CaptchaChallenge.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"injectables/WalletManagementService.html":{}}}],["sessionid:string",{"_index":1972,"title":{},"body":{"interfaces/LoginFormData.html":{},"interfaces/UserSession.html":{}}}],["sessionidcontrol",{"_index":521,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["sessionkey",{"_index":3908,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["set",{"_index":499,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/DatePickerInput.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["setcomposedtruckinfo",{"_index":1078,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["setcomposedtruckinfo(truckid",{"_index":1109,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["setcontrol(value",{"_index":493,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["setdisabledstate",{"_index":463,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["setinterval",{"_index":3454,"title":{},"body":{"components/TimePickerInput.html":{}}}],["setkeysrecursively",{"_index":3522,"title":{},"body":{"components/TreeTableCheckboxComponent.html":{}}}],["setkeysrecursively(node",{"_index":2893,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["setloading",{"_index":1902,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setloading(isloading",{"_index":1903,"title":{},"body":{"injectables/LoadingService.html":{}}}],["setpagegroups",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{}}}],["setsessionid",{"_index":3912,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["setsessionid(sessionid",{"_index":3920,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["settimeout",{"_index":551,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["setupdashboard",{"_index":671,"title":{},"body":{"components/DashboardComponent.html":{}}}],["severity",{"_index":2312,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/ToastService.html":{},"components/TurnsListFormComponent.html":{}}}],["sha256",{"_index":643,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["sha256(message",{"_index":644,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["sha256(message).tostring",{"_index":648,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["shade",{"_index":612,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["shamsidate",{"_index":3735,"title":{},"body":{"injectables/TurnManagementService.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletTransaction.html":{}}}],["shared",{"_index":3861,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["shared/form",{"_index":3563,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["shared/inputs/checkbox",{"_index":1942,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shared/inputs/search",{"_index":997,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["shared/inputs/text",{"_index":985,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["short",{"_index":2603,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["shortresponse",{"_index":58,"title":{"interfaces/ShortResponse.html":{}},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/SelectedNodes.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["show",{"_index":918,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{}}}],["showdialog",{"_index":3105,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["showemptymessage",{"_index":2476,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["showiconoptionselected",{"_index":2487,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["showing",{"_index":941,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["shown",{"_index":2514,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["shownewpassworddialog",{"_index":897,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["shownewpassworddialog(username",{"_index":938,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["showticketdialog",{"_index":3106,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["side",{"_index":2498,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["sidebar",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sidebar'},{'name",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sidebar.component.html",{"_index":3012,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":3013,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebaractions",{"_index":3057,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["sidebarcomponent",{"_index":403,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sidebarmenucomponent",{"_index":405,"title":{"components/SidebarMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sidebarreducer",{"_index":3059,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["sidebarstate",{"_index":3053,"title":{"interfaces/SidebarState.html":{}},"body":{"interfaces/SidebarState.html":{}}}],["simplechanges",{"_index":479,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["single",{"_index":2695,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["singlecontainer",{"_index":3234,"title":{},"body":{"components/TabViewComponent.html":{}}}],["sjhb",{"_index":4296,"title":{},"body":{"index.html":{}}}],["smart",{"_index":3771,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["smartcard",{"_index":906,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/TruckInfoFormComponent.html":{}}}],["smartcardno",{"_index":1098,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{}}}],["smartcode",{"_index":3754,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["sms",{"_index":911,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["smsactive",{"_index":1322,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/UserInfoFormComponent.html":{}}}],["smsowneractive",{"_index":3075,"title":{},"body":{"interfaces/SoftwareUserInfo.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{}}}],["softwareuserid",{"_index":4100,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo",{"_index":2763,"title":{"interfaces/SoftwareUserInfo.html":{}},"body":{"interfaces/SelectedNodes.html":{},"interfaces/SoftwareUserInfo.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["softwareuserinfo.mobilenumber?.trim",{"_index":4114,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.smsowneractive",{"_index":4117,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.useractive",{"_index":4116,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.userid",{"_index":4112,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.username?.trim",{"_index":4113,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.usertypeid",{"_index":4115,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareuserinfo.usertypetitle?.trim",{"_index":4118,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareusermobilenumber",{"_index":4109,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["softwareusername",{"_index":1195,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{}}}],["sourcecity",{"_index":1334,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["sourcecityid",{"_index":1601,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{}}}],["sourcecityname",{"_index":3479,"title":{},"body":{"interfaces/TravelTime.html":{}}}],["sourcecitytitle",{"_index":1602,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{}}}],["splittermodule",{"_index":3554,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["src/.../announcement",{"_index":4256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../api",{"_index":4284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error",{"_index":4253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../http",{"_index":4287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sequential",{"_index":4257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tab",{"_index":4258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tariffs",{"_index":4260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../travel",{"_index":4262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validation",{"_index":4286,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/forms/announcement",{"_index":2199,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/forms/forget",{"_index":1367,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["src/app/components/forms/load",{"_index":1582,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["src/app/components/forms/loader",{"_index":1794,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["src/app/components/forms/login",{"_index":1912,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["src/app/components/forms/product",{"_index":2015,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["src/app/components/forms/province",{"_index":2123,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["src/app/components/forms/sequential",{"_index":2335,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/forms/tariffs",{"_index":4281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/components/forms/travel",{"_index":4282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/components/forms/truck",{"_index":874,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["src/app/components/forms/turns",{"_index":1218,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["src/app/components/forms/user",{"_index":2759,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["src/app/components/shared/dialog/new",{"_index":1985,"title":{},"body":{"components/NewPasswordDialogComponent.html":{}}}],["src/app/components/shared/footer/footer.component.ts",{"_index":1358,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/shared/footer/footer.component.ts:10",{"_index":1363,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/shared/form",{"_index":1393,"title":{},"body":{"components/FormCardComponent.html":{}}}],["src/app/components/shared/full",{"_index":1439,"title":{},"body":{"components/FullScreenBackgroundComponent.html":{}}}],["src/app/components/shared/header/header.component.ts",{"_index":1456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:13",{"_index":1462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:16",{"_index":1461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:21",{"_index":1463,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/inputs/binary",{"_index":446,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["src/app/components/shared/inputs/captcha",{"_index":512,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["src/app/components/shared/inputs/checkbox",{"_index":575,"title":{},"body":{"components/CheckboxInputComponent.html":{}}}],["src/app/components/shared/inputs/date",{"_index":804,"title":{},"body":{"components/DatePickerInput.html":{}}}],["src/app/components/shared/inputs/password",{"_index":1998,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["src/app/components/shared/inputs/search",{"_index":2468,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["src/app/components/shared/inputs/select",{"_index":2743,"title":{},"body":{"components/SelectInputComponent.html":{}}}],["src/app/components/shared/inputs/text",{"_index":3342,"title":{},"body":{"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{}}}],["src/app/components/shared/inputs/time",{"_index":3368,"title":{},"body":{"components/TimePickerInput.html":{}}}],["src/app/components/shared/loading/loading.component.ts",{"_index":1887,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/shared/loading/loading.component.ts:14",{"_index":1895,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/shared/loading/loading.component.ts:15",{"_index":1894,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/shared/loading/loading.component.ts:17",{"_index":1892,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/shared/main",{"_index":1977,"title":{},"body":{"components/MainViewComponent.html":{}}}],["src/app/components/shared/sidebar",{"_index":3043,"title":{},"body":{"components/SidebarMenuComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts",{"_index":3009,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:19",{"_index":3024,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:20",{"_index":3022,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:22",{"_index":3030,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:23",{"_index":3021,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:27",{"_index":3026,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:33",{"_index":3025,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:37",{"_index":3029,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sidebar/sidebar.component.ts:41",{"_index":3027,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/shared/sub",{"_index":3079,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["src/app/components/shared/support",{"_index":3098,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["src/app/components/shared/tab",{"_index":3122,"title":{},"body":{"components/TabBarComponent.html":{},"components/TabViewComponent.html":{}}}],["src/app/components/shared/terminal",{"_index":3333,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["src/app/components/trees/tree",{"_index":2841,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["src/app/constants/error",{"_index":4263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/constants/tab",{"_index":3162,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/constants/validation",{"_index":1276,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/model/api",{"_index":231,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{}}}],["src/app/data/model/captcha",{"_index":509,"title":{},"body":{"interfaces/CaptchaChallenge.html":{}}}],["src/app/data/model/fpc",{"_index":1349,"title":{},"body":{"interfaces/FPCInfo.html":{}}}],["src/app/data/model/header",{"_index":1467,"title":{},"body":{"interfaces/HeaderData.html":{}}}],["src/app/data/model/lad",{"_index":1518,"title":{},"body":{"interfaces/LADPlace.html":{}}}],["src/app/data/model/load",{"_index":1569,"title":{},"body":{"interfaces/LoadAnnouncementPlace.html":{},"interfaces/LoadInfo.html":{}}}],["src/app/data/model/login",{"_index":1970,"title":{},"body":{"interfaces/LoginFormData.html":{}}}],["src/app/data/model/menu",{"_index":1982,"title":{},"body":{"interfaces/MenuItemData.html":{}}}],["src/app/data/model/page",{"_index":1996,"title":{},"body":{"interfaces/PageGroup.html":{}}}],["src/app/data/model/product",{"_index":2006,"title":{},"body":{"interfaces/Product.html":{},"interfaces/ProductType.html":{}}}],["src/app/data/model/province",{"_index":588,"title":{},"body":{"interfaces/City.html":{},"interfaces/Province.html":{}}}],["src/app/data/model/ptp",{"_index":1994,"title":{},"body":{"interfaces/PTPInfo.html":{}}}],["src/app/data/model/short",{"_index":3008,"title":{},"body":{"interfaces/ShortResponse.html":{}}}],["src/app/data/model/software",{"_index":3074,"title":{},"body":{"interfaces/SoftwareUserInfo.html":{}}}],["src/app/data/model/tabs.model.ts",{"_index":3156,"title":{},"body":{"interfaces/TabItem.html":{}}}],["src/app/data/model/tariff.model.ts",{"_index":3292,"title":{},"body":{"interfaces/Tariff.html":{}}}],["src/app/data/model/theme.model.ts",{"_index":598,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["src/app/data/model/theme.model.ts:14",{"_index":2931,"title":{},"body":{"interfaces/SemanticTokens.html":{}}}],["src/app/data/model/theme.model.ts:2",{"_index":2005,"title":{},"body":{"interfaces/PrimitiveTokens.html":{}}}],["src/app/data/model/theme.model.ts:31",{"_index":603,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["src/app/data/model/theme.model.ts:36",{"_index":639,"title":{},"body":{"interfaces/ComponentTokens.html":{}}}],["src/app/data/model/travel",{"_index":3477,"title":{},"body":{"interfaces/TravelTime.html":{}}}],["src/app/data/model/user",{"_index":4134,"title":{},"body":{"interfaces/UserSession.html":{},"interfaces/UserType.html":{}}}],["src/app/data/model/username",{"_index":87,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"interfaces/UsernamePassword.html":{}}}],["src/app/data/model/web",{"_index":4221,"title":{},"body":{"interfaces/WebProcess.html":{}}}],["src/app/pages/auth/forget",{"_index":1381,"title":{},"body":{"components/ForgetPasswordPageComponent.html":{}}}],["src/app/pages/auth/login",{"_index":1973,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts",{"_index":649,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:102",{"_index":673,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:108",{"_index":680,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:135",{"_index":679,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:155",{"_index":676,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:55",{"_index":691,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:57",{"_index":704,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:58",{"_index":697,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:59",{"_index":703,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:60",{"_index":699,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:61",{"_index":682,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:63",{"_index":686,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:64",{"_index":701,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:65",{"_index":684,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:66",{"_index":695,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:68",{"_index":692,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:69",{"_index":706,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:70",{"_index":694,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:71",{"_index":700,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:73",{"_index":674,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/dashboard/dashboard.component.ts:78",{"_index":672,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/pages/home/home",{"_index":1471,"title":{},"body":{"components/HomePageComponent.html":{}}}],["src/app/services/announcement_group_subgroup_management/announcement",{"_index":103,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["src/app/services/announcement_group_subgroup_management/model/announcement",{"_index":95,"title":{},"body":{"interfaces/AnnouncementGroup.html":{},"interfaces/AnnouncementSubGroup.html":{}}}],["src/app/services/announcement_group_subgroup_management/model/relation",{"_index":229,"title":{},"body":{"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{}}}],["src/app/services/api",{"_index":6,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/ApiProcessesService.html":{}}}],["src/app/services/captcha",{"_index":561,"title":{},"body":{"injectables/CaptchaService.html":{}}}],["src/app/services/cryptography",{"_index":641,"title":{},"body":{"injectables/CryptographyService.html":{}}}],["src/app/services/driver",{"_index":1067,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["src/app/services/fpc",{"_index":1401,"title":{},"body":{"injectables/FpcManagementService.html":{}}}],["src/app/services/lad",{"_index":1527,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["src/app/services/load",{"_index":1774,"title":{},"body":{"injectables/LoadCapacitorManagementService.html":{}}}],["src/app/services/loadannouncementplaces/load",{"_index":1573,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["src/app/services/loader",{"_index":1785,"title":{},"body":{"interfaces/LoaderType.html":{},"injectables/LoaderTypesService.html":{}}}],["src/app/services/loading",{"_index":1899,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/product",{"_index":2102,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["src/app/services/province",{"_index":2164,"title":{},"body":{"injectables/ProvinceAndCityManagementService.html":{}}}],["src/app/services/sequential",{"_index":1846,"title":{},"body":{"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["src/app/services/tariffs",{"_index":3296,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["src/app/services/toast",{"_index":3462,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/travel",{"_index":3482,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["src/app/services/turn",{"_index":3676,"title":{},"body":{"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{}}}],["src/app/services/user",{"_index":3905,"title":{},"body":{"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["src/app/services/wallet",{"_index":4139,"title":{},"body":{"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{}}}],["src/app/store/sidebar/sidebar.reducer.ts",{"_index":3054,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["src/app/store/tabs/tabs.reducer.ts",{"_index":3269,"title":{},"body":{"interfaces/TabsState.html":{}}}],["src/app/utils/api",{"_index":4289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/utils/http",{"_index":4290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standalone",{"_index":653,"title":{},"body":{"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/HomePageComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionOption.html":{},"components/TabViewComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["start",{"_index":3449,"title":{},"body":{"components/TimePickerInput.html":{}}}],["startcontinuouschange",{"_index":3377,"title":{},"body":{"components/TimePickerInput.html":{}}}],["startcontinuouschange(control",{"_index":3395,"title":{},"body":{"components/TimePickerInput.html":{}}}],["started",{"_index":4292,"title":{"index.html":{}},"body":{}}],["startkey",{"_index":2023,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["state",{"_index":862,"title":{},"body":{"components/DatePickerInput.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["state.isopen",{"_index":3063,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["state.pagegroups.some((g",{"_index":3073,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["state.selectedpagegroupid)?.id",{"_index":3068,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["state.tabs.filter((tab",{"_index":3282,"title":{},"body":{"interfaces/TabsState.html":{}}}],["state.tabs.find((tab",{"_index":3286,"title":{},"body":{"interfaces/TabsState.html":{}}}],["state.tabs.map((tab",{"_index":3280,"title":{},"body":{"interfaces/TabsState.html":{}}}],["state.tabs[0",{"_index":3290,"title":{},"body":{"interfaces/TabsState.html":{}}}],["static",{"_index":2694,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["staticdata",{"_index":2651,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["status",{"_index":130,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["step",{"_index":2775,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["stopcontinuouschange",{"_index":3378,"title":{},"body":{"components/TimePickerInput.html":{}}}],["store",{"_index":664,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{}}}],["store:store",{"_index":1464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["strategy",{"_index":2506,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["stream",{"_index":3862,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"interfaces/ApiResponse.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"miscellaneous/functions.html":{}}}],["string(number(control.value",{"_index":3433,"title":{},"body":{"components/TimePickerInput.html":{}}}],["string(value).split",{"_index":3425,"title":{},"body":{"components/TimePickerInput.html":{}}}],["structure",{"_index":616,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["structuredclone(this.selectednodes",{"_index":2833,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["structuredclone(this.selectionkeys",{"_index":2870,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["styles",{"_index":1793,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["styleurl",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["styleurls",{"_index":1796,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["sub",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sub.announcementsgid",{"_index":2301,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["sub.announcementsgtitle",{"_index":2302,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["sub.loadertypeid",{"_index":2400,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["sub.loadertypetitle",{"_index":2401,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["subdata.announcementsgid",{"_index":222,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["subdata.announcementsgtitle?.trim",{"_index":223,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/SequentialTurnManagementService.html":{}}}],["subdata.loadertypeid",{"_index":2990,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["subdata.loadertypetitle?.trim",{"_index":2991,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["subgroup",{"_index":105,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["subgroup.mock",{"_index":170,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["subgroup.model",{"_index":168,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["subgroup.model.ts",{"_index":227,"title":{},"body":{"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{}}}],["subgroups",{"_index":203,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{}}}],["subject",{"_index":948,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["submenucomponent",{"_index":408,"title":{"components/SubMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["submenuvisible",{"_index":665,"title":{},"body":{"components/DashboardComponent.html":{}}}],["submitemergencyturn",{"_index":1227,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["submitrealtimeturn",{"_index":2193,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{}}}],["submitresuscitateturnform",{"_index":2419,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["submitticket",{"_index":3107,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["submituserinfo",{"_index":3977,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["subscribe((val",{"_index":3775,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["subscribe((value",{"_index":1007,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["subscribes",{"_index":2677,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["subscription",{"_index":683,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchInputComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["subscriptions",{"_index":3406,"title":{},"body":{"components/TimePickerInput.html":{}}}],["success",{"_index":67,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"injectables/CaptchaService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/ToastService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["success(title",{"_index":3470,"title":{},"body":{"injectables/ToastService.html":{}}}],["successful",{"_index":922,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["such",{"_index":2548,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["suggestion",{"_index":2529,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["suggestions",{"_index":2477,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["summary",{"_index":3475,"title":{},"body":{"injectables/ToastService.html":{}}}],["support",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["supportbuttoncomponent",{"_index":409,"title":{"components/SupportButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["sync",{"_index":3423,"title":{},"body":{"components/TimePickerInput.html":{}}}],["system",{"_index":912,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["t",{"_index":282,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["tab",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tab'},{'name",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tab.closable",{"_index":3155,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tab.id",{"_index":3153,"title":{},"body":{"components/TabBarComponent.html":{},"interfaces/TabsState.html":{}}}],["tab.title",{"_index":3154,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabactive",{"_index":3129,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabbarcomponent",{"_index":412,"title":{"components/TabBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tabcomponentkey",{"_index":3086,"title":{},"body":{"components/SubMenuComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{},"miscellaneous/enumerations.html":{}}}],["tabcomponentkey.announcementmanagement",{"_index":3227,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.driver_truckmanagement",{"_index":3229,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.factoriesandfreightmanagement",{"_index":3218,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.ladplacemanagementservice",{"_index":3224,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.loadcapacitormanagement",{"_index":3219,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.loadermanagement",{"_index":3220,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.loadertypemanagement",{"_index":3222,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.main",{"_index":3091,"title":{},"body":{"components/SubMenuComponent.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{}}}],["tabcomponentkey.producttypesmanagement",{"_index":3223,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.provinceandcitymanagement",{"_index":3221,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.sequentialturnmanagement",{"_index":3228,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.tariffsmanagement",{"_index":3226,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.traveltimemanagement",{"_index":3225,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.truckdrivermanagement",{"_index":3217,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.turnsmanagement",{"_index":3231,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentkey.usermanagement",{"_index":3216,"title":{},"body":{"interfaces/TabView.html":{}}}],["tabcomponentregistry",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{},"components/SubMenuComponent.html":{},"interfaces/TabView.html":{}}}],["tabcomponentregistry[tab.component",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tabcontainer",{"_index":3235,"title":{},"body":{"components/TabViewComponent.html":{}}}],["tabitem",{"_index":678,"title":{"interfaces/TabItem.html":{}},"body":{"components/DashboardComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabsState.html":{}}}],["table",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tablemodule",{"_index":1584,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["tabreducer",{"_index":3274,"title":{},"body":{"interfaces/TabsState.html":{}}}],["tabs",{"_index":3130,"title":{},"body":{"components/TabBarComponent.html":{},"interfaces/TabsState.html":{}}}],["tabs.actions",{"_index":3272,"title":{},"body":{"interfaces/TabsState.html":{}}}],["tabsactions",{"_index":3271,"title":{},"body":{"interfaces/TabsState.html":{}}}],["tabsmodule",{"_index":3125,"title":{},"body":{"components/TabBarComponent.html":{},"components/TabViewComponent.html":{}}}],["tabsmodule,ngclass",{"_index":3146,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabsstate",{"_index":3268,"title":{"interfaces/TabsState.html":{}},"body":{"interfaces/TabsState.html":{}}}],["tabsub",{"_index":666,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tabview",{"_index":3161,"title":{"interfaces/TabView.html":{}},"body":{"interfaces/TabView.html":{},"components/TabViewComponent.html":{}}}],["tabviewcomponent",{"_index":415,"title":{"components/TabViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["takeuntil",{"_index":996,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["targetcity",{"_index":1335,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["targetcityid",{"_index":1603,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{}}}],["targetcityname",{"_index":3480,"title":{},"body":{"interfaces/TravelTime.html":{}}}],["targetcitytitle",{"_index":1604,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{},"interfaces/Tariff.html":{}}}],["tariff",{"_index":1344,"title":{"interfaces/Tariff.html":{}},"body":{"interfaces/ErrorsValidation.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{}}}],["tariffs",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tariffsformcomponent",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["tariffsformmode",{"_index":4259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tariffsinfo",{"_index":3319,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["tariffsinfo.goodid",{"_index":3325,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["tariffsinfo.loadertypeid",{"_index":3320,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["tariffsinfo.sourcecityid",{"_index":3321,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["tariffsinfo.targetcityid",{"_index":3323,"title":{},"body":{"injectables/TariffsManagementService.html":{}}}],["tariffsmanagement",{"_index":3212,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["tariffsmanagementservice",{"_index":3295,"title":{"injectables/TariffsManagementService.html":{}},"body":{"injectables/TariffsManagementService.html":{}}}],["tarrif",{"_index":1611,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["tbody",{"_index":36,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["telephone",{"_index":1311,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["template",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["templateurl",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["terminal",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["terminal.description",{"_index":3341,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["terminal.description.trim",{"_index":3340,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["terminal.laptitle",{"_index":3339,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["terminal.mock",{"_index":1580,"title":{},"body":{"injectables/LoadAnnouncementPlacesService.html":{}}}],["terminalcardcomponent",{"_index":420,"title":{"components/TerminalCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["terminals",{"_index":1507,"title":{},"body":{"components/HomePageComponent.html":{}}}],["terminals.data",{"_index":1510,"title":{},"body":{"components/HomePageComponent.html":{}}}],["texpect",{"_index":27,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["text",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["textareainputcomponent",{"_index":422,"title":{"components/TextAreaInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["textinputcomponent",{"_index":425,"title":{"components/TextInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["theme",{"_index":632,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["themepreset",{"_index":637,"title":{"interfaces/ThemePreset.html":{}},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["this._control",{"_index":501,"title":{},"body":{"components/BinaryRadioInputComponent.html":{}}}],["this.accesstable",{"_index":2814,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.accesstable.foreach((parentnode",{"_index":2825,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.activeturn(rowdata",{"_index":3799,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.allloadannouncementplaces",{"_index":1509,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.announcementgroupandsubgroupform.get('announcementgroupid",{"_index":2278,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementgroupandsubgroupform.get('announcementgrouptitle",{"_index":2279,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementgroupandsubgroupform.get('announcementsubgroupid",{"_index":2280,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementgroupandsubgroupform.get('announcementsubgrouptitle",{"_index":2281,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementgroupandsubgroupform.invalid",{"_index":2323,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementgroupid.invalid",{"_index":2443,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementgroupid.reset",{"_index":2453,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementgroupid.setvalue(announcement.announcementid",{"_index":2286,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementgroupid.value",{"_index":2325,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementgrouptitle.reset",{"_index":2454,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementservice.deleterelationofannouncementgroupandsubgroup",{"_index":2319,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementservice.getannouncementgroups(query",{"_index":2275,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementservice.getannouncementsupgroups(query",{"_index":2277,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementservice.getrelationofannouncementgroupandsubgroup",{"_index":2444,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementservice.getrelationofannouncementgroupandsubgroup(announcementid",{"_index":2291,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementservice.registernewrelationofannouncementgroupandsubgroup",{"_index":2324,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.announcementsubgroupid.reset",{"_index":2455,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementsubgroupid.setvalue(subgroup.announcementsgid",{"_index":2288,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementsubgroupid.value",{"_index":2326,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.announcementsubgrouptitle.reset",{"_index":2456,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.apicommunicator.communicatewithapi_get(apiurl",{"_index":572,"title":{},"body":{"injectables/CaptchaService.html":{},"injectables/LoadAnnouncementPlacesService.html":{}}}],["this.apicommunicator.communicatewithapi_post(apiurl",{"_index":190,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["this.apicommunicator.communicatewithapi_post(localapiurl",{"_index":1148,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["this.apicommunicator.communicatewithapi_post(outdoorapiurl",{"_index":1151,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["this.apicommunicator.communicatewithapi_post(this.apiurl",{"_index":266,"title":{},"body":{"injectables/ApiProcessesService.html":{},"injectables/UserAuthService.html":{}}}],["this.apiprocessesservice.getapiprocesses",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.asyncsearchfn",{"_index":2723,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.asyncsearchfn(query",{"_index":2733,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.auth.isloggedin",{"_index":3119,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["this.autotriggersearch",{"_index":2717,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.buildtreemap(node.children",{"_index":2909,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.buildtreemap(this.tree",{"_index":2868,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.cachedresults",{"_index":2630,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["this.cachedresults.filter((item",{"_index":2623,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{}}}],["this.cachingenabled",{"_index":2613,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.cachingmode",{"_index":2598,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.capacitorform.get",{"_index":1753,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('address",{"_index":1768,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('announcedate",{"_index":1745,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('description",{"_index":1769,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('dischargingplaceid",{"_index":1760,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('dischargingplacetitle",{"_index":1761,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('goodid",{"_index":1748,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('goodtitle",{"_index":1749,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadannouncementgroupid",{"_index":1750,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadannouncementgrouptitle",{"_index":1751,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadannouncementsubgroupid",{"_index":1752,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadingplaceid",{"_index":1758,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadingplacetitle",{"_index":1759,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadstatusid",{"_index":1746,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('loadstatustitle",{"_index":1747,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('recipient",{"_index":1766,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('sourcecityid",{"_index":1754,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('sourcecitytitle",{"_index":1755,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('targetcityid",{"_index":1756,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('targetcitytitle",{"_index":1757,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('tarrif",{"_index":1767,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('tonaj",{"_index":1765,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('totalnumber",{"_index":1764,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('transportcompanyid",{"_index":1762,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.get('transportcompanytitle",{"_index":1763,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorform.setvalue",{"_index":1710,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.capacitorservice.getload(this.barcode.value",{"_index":1704,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.captcha.reset",{"_index":1961,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.captchacomponent.getcaptchainformation",{"_index":1963,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.captchaservice.getcaptcha",{"_index":540,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["this.changeintervalid",{"_index":3453,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.clearcached",{"_index":2600,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.clickbutton.emit",{"_index":3364,"title":{},"body":{"components/TextInputComponent.html":{}}}],["this.closetabsub",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.closetabsub?.unsubscribe",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.componentcache.delete(id",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.componentcache.get(id",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.componentcache.get(index",{"_index":3260,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.componentcache.get(tab.id",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.componentcache.set(index",{"_index":3266,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.componentcache.set(tab.id",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":2305,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsListFormComponent.html":{}}}],["this.container.createcomponent(tabviewcomponent",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.detach(0",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.detach(index",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.indexof(compref.hostview",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.insert(cached.hostview",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.insert(compref.hostview",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.container.length",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.control.disable",{"_index":505,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control.disabled",{"_index":863,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control.enable",{"_index":507,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control.markallastouched",{"_index":2741,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.control.markasuntouched",{"_index":873,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control.value",{"_index":2734,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.control.valuechanges",{"_index":2715,"title":{},"body":{"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control?.errors",{"_index":857,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.control?.value",{"_index":2722,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.controlsubscription",{"_index":2714,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.controlsubscription?.unsubscribe",{"_index":2719,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.convertapigroupstopagegroups(response.data",{"_index":268,"title":{},"body":{"injectables/ApiProcessesService.html":{}}}],["this.cookieservice.delete(this.sessionkey",{"_index":3947,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.cookieservice.get(this.sessionkey",{"_index":3954,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.cookieservice.set(this.sessionkey",{"_index":3956,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.cryptography.sha256(formvalue.password",{"_index":1950,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.cryptography.sha256(formvalue.username",{"_index":1949,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.date.value",{"_index":2431,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.deactiveturn(rowdata",{"_index":3801,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.decrement(control",{"_index":3451,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.deleterelationannouncement(row",{"_index":2318,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.deleterelationsequentialtoloader(row",{"_index":2404,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.descriptions.value",{"_index":1266,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.destroy$.complete",{"_index":1004,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.destroy$.next",{"_index":1003,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.dialog",{"_index":3121,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["this.dialogservice.open(newpassworddialogcomponent",{"_index":1041,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["this.dialogturnaccounting",{"_index":3798,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.disabled",{"_index":504,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.disablerefresh",{"_index":550,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["this.displayedloadannouncementplaces",{"_index":1511,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.driver_truckmanager.getdriverinfoforsoftwareuser",{"_index":3576,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driver_truckmanager.gettruckinfoforsoftwareuser",{"_index":3566,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverdataforhtml",{"_index":3586,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverform",{"_index":1012,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('address",{"_index":1066,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('driverid",{"_index":1059,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('fathername",{"_index":1063,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('fullname",{"_index":1061,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('licensenumber",{"_index":1064,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('mobile",{"_index":1062,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('nationalid",{"_index":1060,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.get('smartcard",{"_index":1065,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.invalid",{"_index":1019,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverform.patchvalue",{"_index":1047,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverid.value",{"_index":1022,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.driverinfo",{"_index":3578,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.driverid",{"_index":3587,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.drivinglicenseno",{"_index":3592,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.fathername",{"_index":3591,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.mobilenumber",{"_index":3590,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.namefamily",{"_index":3588,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.nationalcode",{"_index":3589,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.driverinfo?.smartcardno",{"_index":3593,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.drivertruckmanager.activatedriversms",{"_index":1038,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.drivertruckmanager.getdriverinfofromapi",{"_index":1033,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.drivertruckmanager.registernew_editdrivermobilenumber",{"_index":1026,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.drivertruckmanager.resetdriverpassword",{"_index":1035,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.drivertruckmanager.sendwebsitelink(driverid",{"_index":1039,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.emergencyturnform.get('descriptions",{"_index":1275,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.emergencyturnform.get('sequentialturnid",{"_index":1274,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.emergencyturnform.get('truckid",{"_index":1273,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.emergencyturnform.invalid",{"_index":1262,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.emergencyturnform.reset",{"_index":1272,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.enablecaching",{"_index":2730,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.enabledautosearch",{"_index":2911,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.enforcetimerange(this.hour",{"_index":3414,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.enforcetimerange(this.minutes",{"_index":3418,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.enforcetimerange(this.second",{"_index":3421,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.fb.array",{"_index":1643,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{}}}],["this.fb.group",{"_index":1010,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.filters(query",{"_index":2912,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.filters(this.searchterm.value",{"_index":2915,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.flattenannouncementrelations(res.data",{"_index":2293,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.flattensequentialrelations(res.data",{"_index":2394,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.focusedcached",{"_index":2599,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.forgetpasswordform.valid",{"_index":1378,"title":{},"body":{"components/ForgetPasswordFormComponent.html":{}}}],["this.getcaptchainformation",{"_index":539,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["this.getsessionid",{"_index":3948,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.getsoftwareuser",{"_index":4023,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.handlecitychange(citycode",{"_index":2153,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.handleproductchange(productid",{"_index":2080,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["this.handleproducttypechange(producttypeid",{"_index":2084,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["this.handleprovincechange(provinceid",{"_index":2155,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.headerdata",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.headerdata.title.trim",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.headertitle",{"_index":3797,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.hidepassword",{"_index":2004,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["this.hour.setvalue(time[0",{"_index":3427,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.http.post(url",{"_index":74,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["this.id.setvalue(0",{"_index":4050,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.id.setvalue(data.userid",{"_index":4041,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.id.value",{"_index":4015,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.imagedata",{"_index":546,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["this.increment(control",{"_index":3450,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.initializeloadannouncementplaces",{"_index":1506,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.initializetree",{"_index":2867,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.insidetabtype",{"_index":3564,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.isinternalupdate",{"_index":3424,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.isloading",{"_index":2773,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.isloggedin",{"_index":3955,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.ismobile",{"_index":3041,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.isopen",{"_index":3039,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.issuccessful(res",{"_index":4007,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.issuccessful(response",{"_index":1027,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{}}}],["this.itemmatchesquery!(item",{"_index":2728,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.keydown.emit(event",{"_index":3363,"title":{},"body":{"components/TextInputComponent.html":{}}}],["this.lap.getloadannouncementplaces",{"_index":1508,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.lastcachedkey",{"_index":2731,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.lastsearchkey",{"_index":2615,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.lastselectionkeys",{"_index":2869,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.lastselectionkeys[key",{"_index":2876,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.lazysearch(searchquery",{"_index":2629,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.licenseplate.setvalue(licenseplatenumber",{"_index":3803,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.licenseplatenumber.value",{"_index":3661,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.loadcomponent(index",{"_index":3255,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.loadcomponent(this.activeindex",{"_index":3254,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.loadersformarray.at(index).get('status",{"_index":1839,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.loadersformarray.clear",{"_index":1826,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.loadersformarray.push(this.createloadergroup(loader",{"_index":1828,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.loadertype.value",{"_index":3664,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.loadertypedataforhtml",{"_index":3582,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypeid.reset",{"_index":2387,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadertypeid.setvalue(loadertype.loadertypeid",{"_index":2391,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadertypeid.value",{"_index":2412,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.loadertypeinfo",{"_index":3573,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypeinfo?.loadertypefixstatustitle",{"_index":3585,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypeinfo?.loadertypeid",{"_index":3583,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypeinfo?.loadertypetitle",{"_index":3584,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypemanager.getloadertypeinfoforsoftwareuser",{"_index":3571,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.loadertypeservice.changeloadertypestatus(id",{"_index":1832,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.loadertypeservice.getloadertypesinfo(query",{"_index":1825,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadertypetitle.reset",{"_index":2386,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loading",{"_index":1008,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["this.loadingservice.loading",{"_index":1005,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.loadingservice.setloading(false",{"_index":1031,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.loadingservice.setloading(true",{"_index":1020,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":1906,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(isloading",{"_index":1911,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadnativenessform",{"_index":3643,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.loadrelationofannouncement(announcement.announcementid",{"_index":2287,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.loadrelationofannouncement(row.announcementid",{"_index":2321,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.loadrelationofannouncement(this.announcementgroupid.value",{"_index":2328,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{}}}],["this.loadrelationofsequentialtoloader(row.seqturnid",{"_index":2408,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadrelationofsequentialtoloader(sequentialturn.seqturnid",{"_index":2390,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadrelationofsequentialtoloader(this.sequentialid.value",{"_index":2413,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.loadrelationofsequentialturns(row.seqturnid",{"_index":2464,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.loadrelationofsequentialturns(sequentialturn.seqturnid",{"_index":2457,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.loadrelationofsequentialturns(this.sequentialturnid.value",{"_index":2467,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.loadtruckinfofromapi(smartcard",{"_index":3642,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.loadturnslist(query",{"_index":3778,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.loadturnslist(this.smartcode.value",{"_index":3793,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.loadusertypes",{"_index":4005,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.loadwebprocessgroups_webprocessestable",{"_index":2809,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.loginform.get('captcha",{"_index":1967,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('password",{"_index":1965,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('rememberme",{"_index":1968,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('sessionid",{"_index":1966,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.get('username",{"_index":1964,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.invalid",{"_index":1943,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.markallastouched",{"_index":1944,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginform.value",{"_index":1946,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.logout",{"_index":3950,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.menuitems",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.messageservice.add",{"_index":3474,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.minlength",{"_index":2612,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.minsearchlength",{"_index":2724,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.minutes.setvalue(time[1",{"_index":3428,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.mobile.value",{"_index":1023,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.name.setvalue(data.username",{"_index":4043,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.name.value",{"_index":4037,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.nativeness.value",{"_index":3666,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.onsearch.emit(query",{"_index":2913,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.onsearch.emit(this.searchterm.value",{"_index":2916,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.pagegroupsub",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.pagegroupsub?.unsubscribe",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.password.reset",{"_index":1959,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.performsearch(query",{"_index":2735,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.phone.setvalue(data.mobilenumber",{"_index":4042,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.phone.value",{"_index":4036,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.populatecapacitorform(response.data",{"_index":1705,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.populatedataforhtml",{"_index":3580,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.populatedriverform(response.data",{"_index":1034,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.populateform",{"_index":4027,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.populateform(res.data",{"_index":4014,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.populatesearchform",{"_index":3784,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.populatetruckform(truck",{"_index":3873,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.populatetruckinfoform(response.data",{"_index":3645,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.populatetrucknativenessform(response.data",{"_index":3648,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.producttypeservice.changeproductstatus",{"_index":2098,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["this.producttypeservice.changeproducttypestatus",{"_index":2097,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["this.provincesandcitesservice.changecitystatus",{"_index":2158,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.provincesandcitesservice.changeprovincestatus",{"_index":2156,"title":{},"body":{"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.ptpformarray.clear",{"_index":1706,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.ptpformarray.push(this.createptpgroup(params",{"_index":1708,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.rawinput.emit(rawvalue",{"_index":2740,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.readonly",{"_index":496,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.registeruser",{"_index":4033,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.relationsannouncement",{"_index":2292,"title":{},"body":{"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.relationsequentialtoloaderform.get",{"_index":2383,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.relationsequentialtoloaderform.invalid",{"_index":2409,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.relationssequential",{"_index":2461,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.removecomponent(id",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.rendercomponent(tab",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.resetform",{"_index":1270,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resetloginform",{"_index":1958,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.resetsearchform",{"_index":4026,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.resetturnsbaseform",{"_index":3871,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.resetuserinfoform",{"_index":4025,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.resuscitateturnform.get('date",{"_index":2436,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resuscitateturnform.get('sequentialturnid",{"_index":2435,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resuscitateturnform.get('time",{"_index":2437,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resuscitateturnform.get('truckid",{"_index":2434,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resuscitateturnform.invalid",{"_index":2429,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.resuscitateturnform.reset",{"_index":2433,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.roles",{"_index":4008,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.router.navigate([app_routes.auth.login",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/UserAuthService.html":{}}}],["this.router.navigate([app_routes.dashboard.home",{"_index":1956,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.searchfields.some((filed",{"_index":2922,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.searchform",{"_index":1009,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["this.searchform.get('barcode",{"_index":1744,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.searchform.get('searchnationalid",{"_index":1058,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["this.searchform.get('searchphone",{"_index":2840,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.searchform.get('searchsmartcard",{"_index":3667,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.searchform.get('title",{"_index":1840,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.searchform.invalid",{"_index":1032,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TruckInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.searchform.markaspristine",{"_index":4055,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.searchform.markasuntouched",{"_index":4056,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.searchform.reset",{"_index":4054,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.searchloaders(this.searchtitle.value",{"_index":1829,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["this.searchphone.value",{"_index":2836,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.searchresult.emit(results",{"_index":2736,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.searchtruckinfoform.get('smart",{"_index":3892,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.searchtruckinfoform.invalid",{"_index":3885,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.searchtrukform.get('licenseplate",{"_index":3806,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.searchtrukform.get('smart",{"_index":3804,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.searchtrukform.get('truckid",{"_index":3805,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.second.setvalue(time[2",{"_index":3429,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.selectednodes",{"_index":2795,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodes[childnode.key",{"_index":2830,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodes[key].checked",{"_index":2796,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodes[key].partialchecked",{"_index":2797,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodes[parentnode.key",{"_index":2826,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodescopy",{"_index":2778,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodescopy[key].checked",{"_index":2779,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectednodescopy[key].partialchecked",{"_index":2780,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.selectionkeys[childkey",{"_index":2902,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.selectionkeys[path",{"_index":2903,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.selectsuggestion.emit(event.value",{"_index":2632,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.sequentialid.invalid",{"_index":2385,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialid.setvalue(sequentialturn.seqturnid",{"_index":2389,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialid.value",{"_index":2411,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialturnform.get",{"_index":2452,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.get('announcementgroupid",{"_index":2449,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.get('announcementgrouptitle",{"_index":2450,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.get('announcementsubgroupid",{"_index":2451,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.get('sequentialturnid",{"_index":2447,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.get('sequentialturntitle",{"_index":2448,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnform.invalid",{"_index":2465,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnid.invalid",{"_index":2195,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnid.reset",{"_index":3891,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.sequentialturnid.setvalue(sequentialturn.seqturnid",{"_index":2458,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnid.setvalue(string(sequentialturn.seqturnid",{"_index":3888,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.sequentialturnid.value",{"_index":1265,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnservice.deleterelationofsequentialturntoannouncementsubgroup",{"_index":2463,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnservice.deleterelationofsequentialturntoloadertype",{"_index":2405,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialturnservice.getrelationofsequentialturntoannouncementsubgroups",{"_index":2460,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnservice.getrelationofsequentialturntoloadertypes",{"_index":2393,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialturnservice.getsequentialturns(query",{"_index":2392,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialturnservice.getsequentialturnwithloadertype",{"_index":3886,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.sequentialturnservice.registernewrelationofsequentialturntoannouncementsubgroup",{"_index":2466,"title":{},"body":{"interfaces/RowRelationOfSequential.html":{}}}],["this.sequentialturnservice.registernewrelationofsequentialturntoloadertype",{"_index":2410,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["this.sequentialturntitle.reset",{"_index":3890,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.serialnumber.value",{"_index":3662,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.sessionid.reset",{"_index":1962,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.sessionidcontrol.setvalue(captcha.data.sessionid",{"_index":549,"title":{},"body":{"components/CaptchaInputComponent.html":{}}}],["this.setdisabledstate",{"_index":502,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SelectInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.setkeysrecursively(node",{"_index":2892,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.setsessionid(mockusersession.sessionid",{"_index":3942,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.setsessionid(result.data?.sessionid",{"_index":3943,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.setupdashboard",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.showemptymessage",{"_index":2607,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.shownewpassworddialog(username",{"_index":1037,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["this.singlecontainer",{"_index":3252,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.singlecontainer.createcomponent(this.views[0].component",{"_index":3253,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.smartcard.value",{"_index":3663,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.smartcode.invalid",{"_index":3779,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.smsactive.invalid",{"_index":4016,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.smsactive.setvalue(data.smsowneractive",{"_index":4045,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.smsactive.setvalue(false",{"_index":4052,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.smsactive.setvalue(true",{"_index":4019,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.smsactive.value",{"_index":4017,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.startkey.length",{"_index":2099,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.store.dispatch(activetab",{"_index":3152,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.store.dispatch(addtab",{"_index":3095,"title":{},"body":{"components/SubMenuComponent.html":{}}}],["this.store.dispatch(closesidebar",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.dispatch(closetab",{"_index":3151,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.store.dispatch(opensidebar",{"_index":1465,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.store.dispatch(selectpagegroup",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.dispatch(setpagegroups",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.select(selectactivetab",{"_index":3150,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.store.select(selectactivetab).subscribe(tab",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.select(selectalltabs).subscribe((tabs",{"_index":3147,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.store.select(selectissidebaropen",{"_index":3040,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.store.select(selectlastclosedtabid).subscribe(id",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.select(selectselectedpagegroup).subscribe(page",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.submenuvisible",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.suggestions",{"_index":2622,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.suggestions.length",{"_index":2608,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.tabactive",{"_index":3149,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.tabcontainer",{"_index":3256,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabcontainer.createcomponent(view.component",{"_index":3262,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabcontainer.detach(0",{"_index":3259,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabcontainer.insert(cached.hostview",{"_index":3261,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabcontainer.insert(compref.hostview",{"_index":3265,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabcontainer.length",{"_index":3258,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.tabs",{"_index":3148,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.tabsub",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.tabsub?.unsubscribe",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.terminal?.lapurl",{"_index":3337,"title":{},"body":{"components/TerminalCardComponent.html":{}}}],["this.time.value",{"_index":2432,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.toast",{"_index":1268,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.toast.error",{"_index":543,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/TruckInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.toast.info",{"_index":1709,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["this.toast.success",{"_index":1028,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SupportButtonComponent.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.toast.success('موفق',response.data?.message",{"_index":2081,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["this.tree",{"_index":2866,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.tree.foreach((node",{"_index":2920,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.treemap.get(key",{"_index":2889,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.treemap.set(node.key",{"_index":2907,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["this.triggersearch(query",{"_index":2725,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.triggersearch(this.control.value",{"_index":2742,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.triggersearch(value",{"_index":2718,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.trimcomposedtruckinfo(response.data",{"_index":1184,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["this.trimloadertype(loadertype",{"_index":1875,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["this.trimloadertype(response.data",{"_index":1877,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["this.trimsoftwareuserinfo(response.data",{"_index":4110,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.trimtruckdriver(response.data",{"_index":1152,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["this.trimturn(data",{"_index":3718,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["this.truckdrivermangerservice.getcomposedtruckinfowithlastturn",{"_index":3869,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckdrivermangerservice.gettruckinfofromapi(smartcode",{"_index":3867,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckid",{"_index":3866,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckid.invalid",{"_index":3646,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckid.setvalue(truckid",{"_index":3802,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.truckid.value",{"_index":1264,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/TruckInfoFormComponent.html":{}}}],["this.truckinfo",{"_index":3568,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["this.truckinfoform",{"_index":3865,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('driverid",{"_index":3895,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('drivername",{"_index":3896,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('drivernationalid",{"_index":3897,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('licenseplate",{"_index":3894,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('licenseplatenumber",{"_index":3669,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckinfoform.get('loadertype",{"_index":3672,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckinfoform.get('loadertypeid",{"_index":3893,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('otaghdarturnnumber",{"_index":3899,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('sequentialturn",{"_index":3900,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('serialnumber",{"_index":3670,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckinfoform.get('smartcard",{"_index":3671,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckinfoform.get('truckid",{"_index":3668,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckinfoform.get('turndescription",{"_index":3902,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('turnid",{"_index":3898,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('turnstats",{"_index":3901,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('walletbalance",{"_index":3904,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.get('walletcode",{"_index":3903,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.patchvalue",{"_index":3652,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckinfoform.reset",{"_index":3889,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["this.truckmanagerservice.gettruckinfofromapi",{"_index":3781,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.trucknativenessexpireddate.value",{"_index":3651,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.trucknativenessform.get",{"_index":3674,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.trucknativenessform.get('nativeness",{"_index":3673,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.trucknativenessform.invalid",{"_index":3649,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.trucknativenessform.patchvalue",{"_index":3658,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckservice.changetrucknativeness",{"_index":3650,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckservice.gettruckinfofromapi(smartcard",{"_index":3644,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckservice.gettrucknativeness",{"_index":3647,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["this.truckturnslist",{"_index":3783,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnmanagementservice.emergencyturnregister",{"_index":1263,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{}}}],["this.turnmanagementservice.realtimeturnregister",{"_index":2196,"title":{},"body":{"components/RealTimeTurnsFormComponent.html":{}}}],["this.turnmanagementservice.resuscitatereserveturn",{"_index":2430,"title":{},"body":{"components/ResuscitateTurnsFormComponent.html":{}}}],["this.turnmanagerservice.cancelturn(row.turnid",{"_index":3794,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnmanagerservice.getlatestturns",{"_index":3788,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnmanagerservice.getturnaccounting",{"_index":3795,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnmanagerservice.resuscitateturn",{"_index":3791,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnsaccounting",{"_index":3796,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["this.turnsbasecomponent.resetturnsbaseform",{"_index":1271,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["this.updateismobile",{"_index":3038,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateparentcontrol",{"_index":3446,"title":{},"body":{"components/TimePickerInput.html":{}}}],["this.updateproductsinfo",{"_index":2096,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["this.updateuserinfo",{"_index":4034,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.useractive.setvalue(data.useractive",{"_index":4046,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.useractive.setvalue(true",{"_index":4053,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.useractive.value",{"_index":4039,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userauth.getsessionid",{"_index":185,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["this.userauth.isloggedin",{"_index":178,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["this.userauth.login",{"_index":1948,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.userinfo",{"_index":2837,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.userinfo.mobilenumber",{"_index":2813,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.userinfo.userid",{"_index":2784,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.userinfoform",{"_index":4004,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('id",{"_index":4058,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('name",{"_index":4060,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('phone",{"_index":4059,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('smsactive",{"_index":4063,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('useractive",{"_index":4064,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.get('usertype",{"_index":4061,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.invalid",{"_index":4022,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.markaspristine",{"_index":4048,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.markasuntouched",{"_index":4049,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.userinfoform.reset",{"_index":4047,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.activateusersms(this.id.value",{"_index":4018,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.changeuserwebprocessaccess",{"_index":2783,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.usermanager.changeuserwebprocessgroupaccess",{"_index":2786,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.usermanager.editsoftwareuser(user",{"_index":4030,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.getsoftwareuserinfo",{"_index":2835,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.usermanager.getsoftwareuserinfo(phone",{"_index":4013,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.getusertypes",{"_index":4006,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.getwebprocessgroups_webprocesses",{"_index":2812,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["this.usermanager.registernewsoftwareuser",{"_index":4024,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.resetsoftwareuserpassword",{"_index":4021,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usermanager.sendwebsitelink(this.id.value",{"_index":4031,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.username.reset",{"_index":1960,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.usertype.setvalue(0",{"_index":4051,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usertype.setvalue(data.usertypeid",{"_index":4044,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.usertype.value",{"_index":4038,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["this.validationfield",{"_index":858,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["this.valuechange.emit(input.value",{"_index":2633,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["this.views.length",{"_index":3251,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.views[index",{"_index":3257,"title":{},"body":{"components/TabViewComponent.html":{}}}],["this.visible",{"_index":3120,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["this.webprocesses",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletTransaction.html":{},"miscellaneous/enumerations.html":{}}}],["time.length",{"_index":3426,"title":{},"body":{"components/TimePickerInput.html":{}}}],["time.mock",{"_index":3505,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["time.model",{"_index":3502,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["time.model.ts",{"_index":3478,"title":{},"body":{"interfaces/TravelTime.html":{}}}],["timepickerinput",{"_index":426,"title":{"components/TimePickerInput.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["title",{"_index":129,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/PageGroup.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SubMenuComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"interfaces/TabsState.html":{},"injectables/ToastService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/WebProcess.html":{},"interfaces/dataFormat.html":{}}}],["title:string",{"_index":1469,"title":{},"body":{"interfaces/HeaderData.html":{},"interfaces/TabItem.html":{}}}],["toast",{"_index":525,"title":{},"body":{"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SupportButtonComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{},"miscellaneous/functions.html":{}}}],["toastmodule",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["toastservice",{"_index":526,"title":{"injectables/ToastService.html":{}},"body":{"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SupportButtonComponent.html":{},"injectables/ToastService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{},"miscellaneous/functions.html":{}}}],["togglepassword",{"_index":2000,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["token",{"_index":635,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["tokens",{"_index":606,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{}}}],["tolowercase",{"_index":2605,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["tonaj",{"_index":1341,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["top",{"_index":818,"title":{},"body":{"components/DatePickerInput.html":{},"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{},"components/TextInputComponent.html":{}}}],["totalnumber",{"_index":1339,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["touch",{"_index":3431,"title":{},"body":{"components/TimePickerInput.html":{}}}],["touched",{"_index":872,"title":{},"body":{"components/DatePickerInput.html":{}}}],["tptparams",{"_index":1783,"title":{},"body":{"interfaces/LoadInfo.html":{}}}],["tptpdid",{"_index":1736,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/PTPInfo.html":{}}}],["tptptitle",{"_index":1738,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/PTPInfo.html":{}}}],["track",{"_index":1516,"title":{},"body":{"components/HomePageComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["transaction.mock",{"_index":4177,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["transaction.model",{"_index":4173,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["transaction.model.ts",{"_index":4220,"title":{},"body":{"interfaces/WalletTransaction.html":{}}}],["transactioncolor",{"_index":4206,"title":{},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletTransaction.html":{}}}],["transactiontitle",{"_index":4204,"title":{},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletTransaction.html":{}}}],["transportcompany",{"_index":1338,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["transportcompanyid",{"_index":1609,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["transportcompanytitle",{"_index":1610,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"interfaces/LoadInfo.html":{}}}],["travel",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["traveltime",{"_index":3476,"title":{"interfaces/TravelTime.html":{}},"body":{"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{}}}],["traveltimeformcomponent",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["traveltimeformmode",{"_index":4261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["traveltimeinfo",{"_index":3507,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["traveltimeinfo.loadertypeid",{"_index":3508,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["traveltimeinfo.sourcecityid",{"_index":3509,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["traveltimeinfo.targetcityid",{"_index":3510,"title":{},"body":{"injectables/TravelTimeManagementService.html":{}}}],["traveltimemanagement",{"_index":3206,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["traveltimemanagementservice",{"_index":3481,"title":{"injectables/TravelTimeManagementService.html":{}},"body":{"injectables/TravelTimeManagementService.html":{}}}],["tree",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["treemap",{"_index":2862,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["treenode",{"_index":2033,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["trees/tree",{"_index":2056,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/SelectionOption.html":{}}}],["treetable",{"_index":2844,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["treetablechangeddata",{"_index":2040,"title":{"interfaces/TreeTableChangedData.html":{}},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["treetablecheckboxcomponent",{"_index":429,"title":{"components/TreeTableCheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["treetablemodule",{"_index":2017,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["trigger",{"_index":2703,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["triggered",{"_index":2684,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["triggering",{"_index":2525,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["triggers",{"_index":2678,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["triggersearch",{"_index":2640,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["triggersearch(query",{"_index":2701,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["trimcomposedtruckinfo",{"_index":1079,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["trimcomposedtruckinfo(response",{"_index":1113,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["trimloadertype",{"_index":1858,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["trimloadertype(loadertype",{"_index":1864,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["trimsoftwareuserinfo",{"_index":4074,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["trimsoftwareuserinfo(softwareuserinfo",{"_index":4092,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["trimtruckdriver",{"_index":1080,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["trimtruckdriver(truckdriver",{"_index":1116,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["trimturn",{"_index":3692,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["trimturn(turn",{"_index":3707,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["truck",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["truck.loadertypeid",{"_index":3657,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truck.pelak",{"_index":3654,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truck.serial",{"_index":3655,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["truck.smartcardno",{"_index":3656,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["truck.truckid",{"_index":3653,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truckanddriverinformationformcomponent",{"_index":432,"title":{"components/TruckAndDriverInformationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["truckcomposedinfo",{"_index":1114,"title":{"interfaces/TruckComposedInfo.html":{}},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{}}}],["truckcomposedinfo.moneywallet?.moneywalletid",{"_index":1216,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckcomposedinfo.truck.truckid",{"_index":1213,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckcomposedinfo.truckdriver?.driverid",{"_index":1214,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckcomposedinfo.turn?.turnid",{"_index":1215,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdataforhtml",{"_index":3559,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["truckdriver",{"_index":1118,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truckdriver.address?.trim",{"_index":1162,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.driverid",{"_index":1154,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.drivinglicenseno?.trim",{"_index":1161,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.fathername?.trim",{"_index":1159,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.mobilenumber?.trim",{"_index":1158,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.namefamily?.trim",{"_index":1157,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.nationalcode?.trim",{"_index":1155,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriver.smartcardno?.trim",{"_index":1163,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriverid",{"_index":1165,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriverinfo",{"_index":926,"title":{"interfaces/TruckDriverInfo.html":{}},"body":{"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["truckdriverinfo.driverid",{"_index":1166,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriverinfo.mobilenumber",{"_index":1167,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdriverinfo.nationalcode",{"_index":1147,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckdrivermanagement",{"_index":3191,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["truckdrivermangerservice",{"_index":3825,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truckdrivernationalcode",{"_index":1146,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckid",{"_index":1086,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["truckinfo",{"_index":1123,"title":{"interfaces/TruckInfo.html":{}},"body":{"injectables/Driver_TruckManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{}}}],["truckinfo.pelak",{"_index":3596,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{}}}],["truckinfo.serial",{"_index":3595,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{}}}],["truckinfo.smartcardno",{"_index":1175,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["truckinfo.truckid",{"_index":1178,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["truckinfo?.truckid",{"_index":3594,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{}}}],["truckinfoform",{"_index":3603,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["truckinfoformcomponent",{"_index":434,"title":{"components/TruckInfoFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["truckmanagerservice",{"_index":3741,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["trucknativenessexpiredate",{"_index":1084,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["trucknativenessexpireddate",{"_index":1324,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"components/TruckInfoFormComponent.html":{}}}],["trucknativenessform",{"_index":3604,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["trucknativenessinfo",{"_index":1124,"title":{"interfaces/TruckNativenessInfo.html":{}},"body":{"injectables/Driver_TruckManagementService.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["trucknativenessinfo.trucknativenessexpiredate",{"_index":1180,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{}}}],["trucknativenesstypeid",{"_index":3675,"title":{},"body":{"interfaces/TruckNativenessInfo.html":{}}}],["trucknativenesstypetitle",{"_index":3665,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{}}}],["truckresponse",{"_index":3565,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["truckresponse.data",{"_index":3569,"title":{},"body":{"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["truckservice",{"_index":3605,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["truckturnslist",{"_index":3742,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["true",{"_index":68,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/CaptchaInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SidebarState.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["try",{"_index":70,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["ts",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["tt",{"_index":2849,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["turn",{"_index":1187,"title":{"interfaces/Turn.html":{}},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/LoaderTypeInRelation.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/TabView.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/announcementSubGroupInRelation.html":{}}}],["turn.billofladingnumber?.trim",{"_index":1198,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.dateoflastchanged?.trim",{"_index":1206,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.mock",{"_index":2969,"title":{},"body":{"injectables/SequentialTurnManagementService.html":{}}}],["turn.model",{"_index":2379,"title":{},"body":{"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turn.model.ts",{"_index":2932,"title":{},"body":{"interfaces/SequentialTurn.html":{}}}],["turn.otaghdarturnnumber?.trim",{"_index":1200,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.sequentialturntitle?.trim",{"_index":1208,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.softwareusername?.trim",{"_index":1196,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.truckdriver?.trim",{"_index":1194,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.turnid",{"_index":1189,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.turnissuedate?.trim",{"_index":1191,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.turnissuetime?.trim",{"_index":1193,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.turnstatusdescription?.trim",{"_index":1204,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn.turnstatustitle?.trim",{"_index":1202,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"injectables/TurnManagementService.html":{}}}],["turn?.otaghdarturnnumber",{"_index":3880,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turn?.sequentialturntitle",{"_index":3879,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turn?.turnid",{"_index":3878,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turn?.turnstatusdescription",{"_index":3882,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turn?.turnstatustitle",{"_index":3881,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turnaccounting",{"_index":3678,"title":{"interfaces/TurnAccounting.html":{}},"body":{"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{}}}],["turndescription",{"_index":3831,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turnid",{"_index":1110,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turninfo",{"_index":3722,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["turninfo.turnid",{"_index":3723,"title":{},"body":{"injectables/TurnManagementService.html":{}}}],["turnissuedate",{"_index":1190,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["turnissuetime",{"_index":1192,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["turnmanagementservice",{"_index":1224,"title":{"injectables/TurnManagementService.html":{}},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{}}}],["turnmanagerservice",{"_index":3743,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["turns",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"miscellaneous/enumerations.html":{}}}],["turnsaccounting",{"_index":3744,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["turnsbasecomponent",{"_index":1225,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["turnscols",{"_index":3745,"title":{},"body":{"components/TurnsListFormComponent.html":{}}}],["turnslistformcomponent",{"_index":435,"title":{"components/TurnsListFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["turnsmanagement",{"_index":3208,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["turnstats",{"_index":3830,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["turnstatusdescription",{"_index":1203,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["turnstatustitle",{"_index":1201,"title":{},"body":{"injectables/Driver_TruckManagementService.html":{},"interfaces/Turn.html":{},"injectables/TurnManagementService.html":{}}}],["turnstruckinfobaseformcomponent",{"_index":437,"title":{"components/TurnsTruckInfoBaseFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/APIUsernamePassword.html":{},"interfaces/AnnouncementGroup.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"interfaces/AnnouncementSubGroup.html":{},"interfaces/AnnouncementSubGroupInRelation.html":{},"interfaces/ApiGroupProcess.html":{},"interfaces/ApiProcess.html":{},"injectables/ApiProcessesService.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"interfaces/CaptchaChallenge.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"interfaces/City.html":{},"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"injectables/CryptographyService.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"interfaces/FPCInfo.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HeaderData.html":{},"components/HomePageComponent.html":{},"interfaces/LADPlace.html":{},"injectables/LADPlaceManagementService.html":{},"interfaces/LoadAnnouncementPlace.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"interfaces/LoadInfo.html":{},"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"interfaces/LoaderTypeInRelation.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/PTPInfo.html":{},"interfaces/PageGroup.html":{},"components/PasswordInputComponent.html":{},"interfaces/Product.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"interfaces/ProductType.html":{},"injectables/ProductTypesService.html":{},"interfaces/Province.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{},"interfaces/RelationOfSequentialTurnToLoaderType.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/SemanticTokens.html":{},"interfaces/SequentialTurn.html":{},"injectables/SequentialTurnManagementService.html":{},"interfaces/ShortResponse.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SidebarState.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabItem.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"interfaces/TabsState.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"interfaces/ThemePreset.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckDriverInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"interfaces/TruckNativenessInfo.html":{},"interfaces/Turn.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserSession.html":{},"interfaces/UserType.html":{},"interfaces/UsernamePassword.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletPaymentRequest.html":{},"interfaces/WalletTransaction.html":{},"interfaces/WebProcess.html":{},"interfaces/announcementSubGroupInRelation.html":{},"interfaces/dataFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.mock",{"_index":1870,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{}}}],["type.model",{"_index":1821,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionOption.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/dataFormat.html":{}}}],["type.model.ts",{"_index":1787,"title":{},"body":{"interfaces/LoaderType.html":{},"interfaces/Product.html":{},"interfaces/ProductType.html":{},"interfaces/UserType.html":{}}}],["type.utid",{"_index":4010,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["type.uttitle",{"_index":4011,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["typealiases",{"_index":4304,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":76,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"interfaces/ErrorsValidation.html":{},"components/TabViewComponent.html":{}}}],["types",{"_index":636,"title":{},"body":{"interfaces/ColorScheme.html":{},"interfaces/ComponentTokens.html":{},"interfaces/PrimitiveTokens.html":{},"interfaces/SemanticTokens.html":{},"interfaces/ThemePreset.html":{},"components/UserInfoFormComponent.html":{}}}],["types.mock",{"_index":4095,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["types.service",{"_index":1824,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"interfaces/SelectionOption.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["types.service.ts",{"_index":1854,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{}}}],["types.service.ts:15",{"_index":1867,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{}}}],["types.service.ts:16",{"_index":1866,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{}}}],["types.service.ts:18",{"_index":1863,"title":{},"body":{"injectables/LoaderTypesService.html":{},"injectables/ProductTypesService.html":{}}}],["types.service.ts:43",{"_index":2109,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["types.service.ts:51",{"_index":1861,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["types.service.ts:71",{"_index":2107,"title":{},"body":{"injectables/ProductTypesService.html":{}}}],["types.service.ts:80",{"_index":1865,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["types.service.ts:91",{"_index":1860,"title":{},"body":{"injectables/LoaderTypesService.html":{}}}],["types/loader",{"_index":1823,"title":{},"body":{"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["types/model/loader",{"_index":1786,"title":{},"body":{"interfaces/LoaderType.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"injectables/SequentialTurnManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["types/product",{"_index":2062,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"interfaces/SelectionOption.html":{}}}],["ui",{"_index":843,"title":{},"body":{"components/DatePickerInput.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["unauthorized",{"_index":4266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":2093,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"interfaces/Tariff.html":{},"injectables/TariffsManagementService.html":{},"components/TimePickerInput.html":{},"interfaces/TravelTime.html":{},"injectables/TravelTimeManagementService.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["unknown",{"_index":79,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{}}}],["unprocessed",{"_index":2682,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["unsubscribing",{"_index":3863,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["untouched",{"_index":2555,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["up",{"_index":3777,"title":{},"body":{"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["update",{"_index":943,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["updatedrivermobilenumber",{"_index":898,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["updateismobile",{"_index":3018,"title":{},"body":{"components/SidebarComponent.html":{}}}],["updateladplace",{"_index":1536,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["updateladplace(ladplaceinfo",{"_index":1549,"title":{},"body":{"injectables/LADPlaceManagementService.html":{}}}],["updateparentcontrol",{"_index":3379,"title":{},"body":{"components/TimePickerInput.html":{}}}],["updateproductsinfo",{"_index":2029,"title":{},"body":{"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{}}}],["updateuserinfo",{"_index":3978,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["url",{"_index":30,"title":{},"body":{"injectables/APICommunicationManagementService.html":{}}}],["use",{"_index":2626,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["used",{"_index":2528,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["user",{"_index":151,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"interfaces/SoftwareUserInfo.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{}}}],["user's",{"_index":4020,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["useractive",{"_index":3076,"title":{},"body":{"interfaces/SoftwareUserInfo.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{}}}],["userauth",{"_index":107,"title":{},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["userauthservice",{"_index":150,"title":{"injectables/UserAuthService.html":{}},"body":{"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/DashboardComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadCapacitorManagementService.html":{},"injectables/LoaderTypesService.html":{},"components/LoginFormComponent.html":{},"injectables/ProductTypesService.html":{},"injectables/ProvinceAndCityManagementService.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SupportButtonComponent.html":{},"injectables/TariffsManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/WalletManagementService.html":{}}}],["userid",{"_index":2770,"title":{},"body":{"interfaces/SelectedNodes.html":{},"interfaces/SoftwareUserInfo.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["userinfo",{"_index":2769,"title":{},"body":{"interfaces/SelectedNodes.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["userinfo.mobilenumber",{"_index":4133,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["userinfo.userid",{"_index":4101,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["userinfoform",{"_index":3968,"title":{},"body":{"components/UserInfoFormComponent.html":{}}}],["userinfoformcomponent",{"_index":439,"title":{"components/UserInfoFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["usermanagement",{"_index":3190,"title":{},"body":{"interfaces/TabView.html":{},"miscellaneous/enumerations.html":{}}}],["usermanagementservice",{"_index":2761,"title":{"injectables/UserManagementService.html":{}},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["usermanager",{"_index":2765,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["username",{"_index":92,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"interfaces/ErrorsValidation.html":{},"injectables/FpcManagementService.html":{},"components/LoginFormComponent.html":{},"interfaces/LoginFormData.html":{},"components/NewPasswordDialogComponent.html":{},"interfaces/SoftwareUserInfo.html":{},"interfaces/TurnAccounting.html":{},"injectables/TurnManagementService.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UsernamePassword.html":{},"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{},"interfaces/WalletTransaction.html":{}}}],["usernamepassword",{"_index":91,"title":{"interfaces/UsernamePassword.html":{}},"body":{"interfaces/APIUsernamePassword.html":{},"injectables/Driver_TruckManagementService.html":{},"injectables/FpcManagementService.html":{},"injectables/UserManagementService.html":{},"interfaces/UsernamePassword.html":{}}}],["userpassword",{"_index":89,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"injectables/UserAuthService.html":{},"interfaces/UsernamePassword.html":{}}}],["users",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["usersession",{"_index":3930,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/UserAuthService.html":{},"interfaces/UserSession.html":{}}}],["usershenaseh",{"_index":90,"title":{},"body":{"interfaces/APIUsernamePassword.html":{},"injectables/UserAuthService.html":{},"interfaces/UsernamePassword.html":{}}}],["usersmenuaccessformcomponent",{"_index":440,"title":{"components/UsersMenuAccessFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["usertype",{"_index":3979,"title":{"interfaces/UserType.html":{}},"body":{"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"interfaces/UserType.html":{}}}],["usertypeid",{"_index":3077,"title":{},"body":{"interfaces/SoftwareUserInfo.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{}}}],["usertypetitle",{"_index":3078,"title":{},"body":{"interfaces/SoftwareUserInfo.html":{},"injectables/UserManagementService.html":{}}}],["uses",{"_index":2565,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["using",{"_index":944,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["utid",{"_index":4121,"title":{},"body":{"injectables/UserManagementService.html":{},"interfaces/UserType.html":{}}}],["utilities",{"_index":849,"title":{},"body":{"components/DatePickerInput.html":{},"components/TimePickerInput.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["utils",{"_index":1257,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"interfaces/dataFormat.html":{}}}],["utils.ts",{"_index":4285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uttitle",{"_index":4123,"title":{},"body":{"injectables/UserManagementService.html":{},"interfaces/UserType.html":{}}}],["val",{"_index":3432,"title":{},"body":{"components/TimePickerInput.html":{},"components/TurnsListFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["valid",{"_index":3412,"title":{},"body":{"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["validation",{"_index":848,"title":{},"body":{"components/DatePickerInput.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/TimePickerInput.html":{}}}],["validationfield",{"_index":813,"title":{},"body":{"components/DatePickerInput.html":{},"interfaces/ErrorsValidation.html":{},"components/PasswordInputComponent.html":{},"components/SearchInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"miscellaneous/typealiases.html":{}}}],["validationschema",{"_index":852,"title":{},"body":{"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/ForgetPasswordFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["validationschema.address",{"_index":1638,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.announcedate",{"_index":1624,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.description",{"_index":1234,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.dischargingplace",{"_index":1632,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.driverid",{"_index":1013,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["validationschema.fathername",{"_index":1016,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["validationschema.fullname",{"_index":1014,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["validationschema.good",{"_index":1626,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.id",{"_index":1644,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["validationschema.licensenumber",{"_index":1017,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["validationschema.licenseplatenumber",{"_index":3624,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["validationschema.loadannouncementgroup",{"_index":1627,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.loadannouncementsubgroup",{"_index":1628,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.loadertype",{"_index":3626,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["validationschema.loadingplace",{"_index":1631,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.mobile",{"_index":1015,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"interfaces/SelectedNodes.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["validationschema.nationalid",{"_index":1011,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["validationschema.nativeness",{"_index":3628,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["validationschema.password",{"_index":1927,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validationschema.recipient",{"_index":1636,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.serialnumber",{"_index":3625,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["validationschema.smartcard",{"_index":1018,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["validationschema.sourcecity",{"_index":1629,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.targetcity",{"_index":1630,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.transportcompany",{"_index":1633,"title":{},"body":{"components/LoadCapacitorFormComponent.html":{}}}],["validationschema.truckid",{"_index":3623,"title":{},"body":{"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{}}}],["validationschema.trucknativenessexpireddate",{"_index":3630,"title":{},"body":{"components/TruckInfoFormComponent.html":{}}}],["validationschema.username",{"_index":1926,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validationschema[this.validationfield",{"_index":860,"title":{},"body":{"components/DatePickerInput.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{}}}],["validators",{"_index":1252,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["validators.email",{"_index":1306,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.maxlength(11",{"_index":1298,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.min(0",{"_index":1233,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["validators.min(0.1",{"_index":1342,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.min(1",{"_index":1340,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.minlength(1",{"_index":1309,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.minlength(10",{"_index":1317,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.minlength(11",{"_index":1297,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.minlength(2",{"_index":1816,"title":{},"body":{"components/LoaderTypeFormComponent.html":{}}}],["validators.minlength(3",{"_index":1307,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.minlength(5",{"_index":1313,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/09(1[0",{"_index":1299,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/^(13|14)\\d{2}\\/(0[1",{"_index":1325,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/^0\\d{10",{"_index":1312,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/^\\d",{"_index":1319,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/^\\d{10",{"_index":1305,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.pattern(/^\\d{7",{"_index":1320,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators.required",{"_index":1232,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"interfaces/RowRelationOfSequentialToLoader.html":{}}}],["validators.required,validators.minlength(5",{"_index":1308,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators:[validators.required",{"_index":1310,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validators:[validators.required,validators.min(0.1",{"_index":1346,"title":{},"body":{"interfaces/ErrorsValidation.html":{}}}],["validid",{"_index":3065,"title":{},"body":{"interfaces/SidebarState.html":{}}}],["value",{"_index":39,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/AnnouncementGroupSubgroupManagementService.html":{},"injectables/ApiProcessesService.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"injectables/CaptchaService.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"injectables/LADPlaceManagementService.html":{},"injectables/LoadAnnouncementPlacesService.html":{},"components/LoadCapacitorFormComponent.html":{},"injectables/LoadCapacitorManagementService.html":{},"components/LoaderTypeFormComponent.html":{},"injectables/LoaderTypesService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/LoginFormComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"injectables/ProductTypesService.html":{},"components/ProvinceAndCityFormComponent.html":{},"injectables/ProvinceAndCityManagementService.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/RowRelationOfAnnouncement.html":{},"interfaces/RowRelationOfSequential.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"injectables/SequentialTurnManagementService.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"injectables/TariffsManagementService.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"injectables/TurnManagementService.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"injectables/UserAuthService.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{},"injectables/WalletManagementService.html":{},"interfaces/dataFormat.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":2490,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["values",{"_index":945,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["var",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"injectables/FpcManagementService.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"injectables/UserManagementService.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["version",{"_index":4302,"title":{},"body":{"properties.html":{}}}],["view",{"_index":3232,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view'},{'name",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["view.component",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/TabView.html":{}}}],["view.component.html",{"_index":1980,"title":{},"body":{"components/MainViewComponent.html":{},"components/TabViewComponent.html":{}}}],["view.component.scss",{"_index":1981,"title":{},"body":{"components/MainViewComponent.html":{},"components/TabViewComponent.html":{}}}],["view.component.ts",{"_index":1979,"title":{},"body":{"components/MainViewComponent.html":{},"components/TabViewComponent.html":{}}}],["view.component.ts:22",{"_index":3238,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:24",{"_index":3248,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:26",{"_index":3250,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:28",{"_index":3245,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:30",{"_index":3244,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:31",{"_index":3246,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:33",{"_index":3241,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:41",{"_index":3243,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.component.ts:46",{"_index":3240,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.data",{"_index":3263,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view.title",{"_index":3267,"title":{},"body":{"components/TabViewComponent.html":{}}}],["view/main",{"_index":1978,"title":{},"body":{"components/MainViewComponent.html":{},"interfaces/TabView.html":{}}}],["view/tab",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["viewchild",{"_index":708,"title":{},"body":{"components/DashboardComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/LoginFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"interfaces/SelectionKey.html":{},"components/TabViewComponent.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["viewchild('captcharef",{"_index":1923,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["viewchild('singlecontainer",{"_index":3247,"title":{},"body":{"components/TabViewComponent.html":{}}}],["viewchild('tabcontainer",{"_index":3249,"title":{},"body":{"components/TabViewComponent.html":{}}}],["viewchild('tabview",{"_index":689,"title":{},"body":{"components/DashboardComponent.html":{}}}],["viewchild('treetable",{"_index":2848,"title":{},"body":{"interfaces/SelectionKey.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{}}}],["viewchild(turnstruckinfobaseformcomponent",{"_index":1242,"title":{},"body":{"components/EmergencyTurnsFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{}}}],["viewcontainerref",{"_index":687,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["views",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{},"components/TabViewComponent.html":{}}}],["visible",{"_index":3104,"title":{},"body":{"components/SupportButtonComponent.html":{}}}],["void",{"_index":482,"title":{},"body":{"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"components/EmergencyTurnsFormComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"interfaces/MenuItemData.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"interfaces/ProductParent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"interfaces/SelectedNodes.html":{},"interfaces/SelectionKey.html":{},"interfaces/SelectionOption.html":{},"interfaces/SelectionOption-1.html":{},"components/SidebarComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"components/TabViewComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"injectables/ToastService.html":{},"interfaces/TreeTableChangedData.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["wallet",{"_index":338,"title":{"interfaces/Wallet.html":{}},"body":{"components/AppComponent.html":{},"components/BinaryRadioInputComponent.html":{},"components/CaptchaInputComponent.html":{},"components/CheckboxInputComponent.html":{},"components/DashboardComponent.html":{},"components/DatePickerInput.html":{},"components/DriverInfoFormComponent.html":{},"injectables/Driver_TruckManagementService.html":{},"components/EmergencyTurnsFormComponent.html":{},"interfaces/ErrorsValidation.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordFormComponent.html":{},"components/ForgetPasswordPageComponent.html":{},"components/FormCardComponent.html":{},"components/FullScreenBackgroundComponent.html":{},"components/HeaderComponent.html":{},"components/HomePageComponent.html":{},"components/LoadCapacitorFormComponent.html":{},"components/LoaderTypeFormComponent.html":{},"components/LoadingComponent.html":{},"components/LoginFormComponent.html":{},"components/LoginPageComponent.html":{},"components/MainViewComponent.html":{},"components/NewPasswordDialogComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProductFormComponent.html":{},"components/ProvinceAndCityFormComponent.html":{},"components/RealTimeTurnsFormComponent.html":{},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{},"components/ResuscitateTurnsFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SearchInputComponent.html":{},"components/SelectInputComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuComponent.html":{},"components/SubMenuComponent.html":{},"components/SupportButtonComponent.html":{},"components/TabBarComponent.html":{},"interfaces/TabView.html":{},"components/TabViewComponent.html":{},"components/TerminalCardComponent.html":{},"components/TextAreaInputComponent.html":{},"components/TextInputComponent.html":{},"components/TimePickerInput.html":{},"components/TreeTableCheckboxComponent.html":{},"components/TruckAndDriverInformationFormComponent.html":{},"interfaces/TruckComposedInfo.html":{},"interfaces/TruckInfo.html":{},"components/TruckInfoFormComponent.html":{},"components/TurnsListFormComponent.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{},"components/UserInfoFormComponent.html":{},"components/UsersMenuAccessFormComponent.html":{},"interfaces/Wallet.html":{},"injectables/WalletManagementService.html":{}}}],["wallet?.balance",{"_index":3884,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["wallet?.moneywalletcode",{"_index":3883,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["walletbalance",{"_index":3833,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["walletcode",{"_index":3832,"title":{},"body":{"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["walletdefaultamount",{"_index":4143,"title":{"interfaces/WalletDefaultAmount.html":{}},"body":{"interfaces/WalletDefaultAmount.html":{},"injectables/WalletManagementService.html":{}}}],["walletid",{"_index":1316,"title":{},"body":{"interfaces/ErrorsValidation.html":{},"injectables/WalletManagementService.html":{}}}],["walletinfo",{"_index":4196,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["walletinfo.moneywalletid",{"_index":4197,"title":{},"body":{"injectables/WalletManagementService.html":{}}}],["walletmanagementservice",{"_index":4148,"title":{"injectables/WalletManagementService.html":{}},"body":{"injectables/WalletManagementService.html":{}}}],["walletpaymenthistory",{"_index":4178,"title":{"interfaces/WalletPaymentHistory.html":{}},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentHistory.html":{}}}],["walletpaymentrequest",{"_index":4187,"title":{"interfaces/WalletPaymentRequest.html":{}},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletPaymentRequest.html":{}}}],["wallettransaction",{"_index":4171,"title":{"interfaces/WalletTransaction.html":{}},"body":{"injectables/WalletManagementService.html":{},"interfaces/WalletTransaction.html":{}}}],["wasactive",{"_index":3285,"title":{},"body":{"interfaces/TabsState.html":{}}}],["web",{"_index":1997,"title":{},"body":{"interfaces/PageGroup.html":{},"components/UserInfoFormComponent.html":{}}}],["webprocess",{"_index":705,"title":{"interfaces/WebProcess.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/PageGroup.html":{},"components/SubMenuComponent.html":{},"interfaces/WebProcess.html":{}}}],["webprocesses",{"_index":237,"title":{},"body":{"interfaces/ApiGroupProcess.html":{},"components/DashboardComponent.html":{},"injectables/UserManagementService.html":{}}}],["website",{"_index":936,"title":{},"body":{"components/DriverInfoFormComponent.html":{}}}],["whether",{"_index":2511,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{},"components/TimePickerInput.html":{},"components/UserInfoFormComponent.html":{}}}],["width",{"_index":1043,"title":{},"body":{"components/DriverInfoFormComponent.html":{},"components/SearchAutoCompleteComponent.html":{},"components/SidebarComponent.html":{},"components/UserInfoFormComponent.html":{}}}],["window.innerwidth",{"_index":3042,"title":{},"body":{"components/SidebarComponent.html":{}}}],["window.scrollto",{"_index":3071,"title":{},"body":{"interfaces/SidebarState.html":{},"interfaces/TabsState.html":{}}}],["window:resize",{"_index":3020,"title":{},"body":{"components/SidebarComponent.html":{}}}],["without",{"_index":2619,"title":{},"body":{"components/SearchAutoCompleteComponent.html":{}}}],["worker",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["x.pgaccess",{"_index":2819,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["x.pgid.tostring",{"_index":2817,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["x.pgtitle",{"_index":2818,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["x.utid",{"_index":4122,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["x.uttitle.trim",{"_index":4124,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["x.webprocesses?.map((y",{"_index":2820,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["y.description",{"_index":2823,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["y.paccess",{"_index":2824,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["y.pid.tostring",{"_index":2821,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["y.ptitle",{"_index":2822,"title":{},"body":{"interfaces/SelectedNodes.html":{},"components/UsersMenuAccessFormComponent.html":{}}}],["yes",{"_index":31,"title":{},"body":{"injectables/APICommunicationManagementService.html":{},"injectables/TravelTimeManagementService.html":{},"components/TurnsTruckInfoBaseFormComponent.html":{}}}],["zone.js",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/APICommunicationManagementService.html":{"url":"injectables/APICommunicationManagementService.html","title":"injectable - APICommunicationManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  APICommunicationManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-communication-management/apicommunication-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                CommunicateWithAPI_Get\n                            \n                            \n                                    Public\n                                    Async\n                                CommunicateWithAPI_Post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        CommunicateWithAPI_Get\n                        \n                    \n                \n            \n            \n                \n                        \n                    CommunicateWithAPI_Get(url: string, mockValue?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-communication-management/apicommunication-management.service.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TExpect\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mockValue\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        CommunicateWithAPI_Post\n                        \n                    \n                \n            \n            \n                \n                        \n                    CommunicateWithAPI_Post(url: string, bodyValue: TBody, mockValue?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-communication-management/apicommunication-management.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TBody\n                                    TExpect\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bodyValue\n                                            \n                                                        TBody\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mockValue\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-communication-management/apicommunication-management.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { handleHttpError } from 'app/utils/http-error-handler';\nimport { environment } from 'environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { ShortResponse } from 'app/data/model/short-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class APICommunicationManagementService {\n  private http = inject(HttpClient);\n\n  public async CommunicateWithAPI_Post(\n    url: string,\n    bodyValue: TBody,\n    mockValue?: any\n  ): Promise> {\n    if (!environment.production && environment.disableApi) {\n      return {\n        success: true,\n        data: mockValue,\n      };\n    }\n\n    try {\n      const response = await firstValueFrom(\n        this.http.post(url, bodyValue)\n      );\n\n      const mappedResponse =\n        typeof response === 'string'\n          ? ({ Message: response } as ShortResponse as TExpect)\n          : (response as TExpect);\n\n      return { success: true, data: mappedResponse };\n    } catch (error: unknown) {\n      return handleHttpError(error);\n    }\n  }\n\n  public async CommunicateWithAPI_Get(\n    url: string,\n    mockValue?: any\n  ): Promise> {\n    if (!environment.production && environment.disableApi) {\n      return { success: true, data: mockValue };\n    }\n\n    try {\n      const response = await firstValueFrom(this.http.get(url));\n\n      return {\n        success: true,\n        data: response,\n      };\n    } catch (error: unknown) {\n      return handleHttpError(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APIUsernamePassword.html":{"url":"interfaces/APIUsernamePassword.html","title":"interface - APIUsernamePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APIUsernamePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/username-password.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            UserPassword\n                                        \n                                \n                                \n                                        \n                                            UserShenaseh\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        UserPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserShenaseh\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserShenaseh:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface APIUsernamePassword {\n  UserShenaseh: string;\n  UserPassword: string;\n}\n\nexport interface UsernamePassword {\n  Username: string;\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnnouncementGroup.html":{"url":"interfaces/AnnouncementGroup.html","title":"interface - AnnouncementGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnnouncementGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/announcement_group_subgroup_management/model/announcement-group.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                        \n                                            AnnouncementId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            AnnouncementTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnnouncementGroup {\n  AnnouncementId: number;\n  AnnouncementTitle?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnnouncementGroupSubgroupManagementService.html":{"url":"injectables/AnnouncementGroupSubgroupManagementService.html","title":"injectable - AnnouncementGroupSubgroupManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnnouncementGroupSubgroupManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                DeleteAnnouncementGroup\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteAnnouncementSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteRelationOfAnnouncementGroupAndSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                EditAnnouncementGroup\n                            \n                            \n                                    Public\n                                    Async\n                                EditAnnouncementSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                GetAnnouncementGroups\n                            \n                            \n                                    Public\n                                    Async\n                                GetAnnouncementSupGroups\n                            \n                            \n                                    Public\n                                    Async\n                                GetRelationOfAnnouncementGroupAndSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewAnnouncementGroup\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewAnnouncementSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewRelationOfAnnouncementGroupAndSubGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteAnnouncementGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteAnnouncementGroup(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteAnnouncementSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteAnnouncementSubGroup(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:245\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteRelationOfAnnouncementGroupAndSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteRelationOfAnnouncementGroupAndSubGroup(announcementGroupId: number, announcementSubGroupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:350\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                announcementGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                announcementSubGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditAnnouncementGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditAnnouncementGroup(id: number, title: string, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditAnnouncementSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditAnnouncementSubGroup(id: number, title: string, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetAnnouncementGroups\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetAnnouncementGroups(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetAnnouncementSupGroups\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetAnnouncementSupGroups(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetRelationOfAnnouncementGroupAndSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetRelationOfAnnouncementGroupAndSubGroup(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:275\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewAnnouncementGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewAnnouncementGroup(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewAnnouncementSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewAnnouncementSubGroup(title: string, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewRelationOfAnnouncementGroupAndSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewRelationOfAnnouncementGroupAndSubGroup(announcementGroupId: number, announcementSubGroupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:318\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                announcementGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                announcementSubGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { AnnouncementGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-group.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockAnnouncementGroups } from 'app/services/announcement_group_subgroup_management/mock/announcement-group.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { AnnouncementSubGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-subgroup.model';\nimport { mockAnnouncementSubGroups } from 'app/services/announcement_group_subgroup_management/mock/announcement-subgroup.mock';\nimport { RelationOfAnnouncementGroupAndSubGroup } from './model/relation-of-announcement-group-subgroup.model';\nimport { mockRelationOfAnnouncementGroupAndSubGroups } from './mock/relation-of-announcement-group-subgroup.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnnouncementGroupSubgroupManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  //#region Announcement Groups\n\n  public async GetAnnouncementGroups(\n    title: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.Groups.GetAnnouncementGroups;\n    const announcementGroupInfo: AnnouncementGroup = {\n      AnnouncementId: 0,\n      AnnouncementTitle: title,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: announcementGroupInfo.AnnouncementTitle,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockAnnouncementGroups);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        AnnouncementId: data.AnnouncementId,\n        AnnouncementTitle: data.AnnouncementTitle?.trim(),\n        Active: data.Active,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewAnnouncementGroup(\n    title: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.Groups\n        .RegisterAnnouncementGroup;\n    const announcementGroupInfo: AnnouncementGroup = {\n      AnnouncementId: 0,\n      AnnouncementTitle: title,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawAnnouncement: announcementGroupInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditAnnouncementGroup(\n    id: number,\n    title: string,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.Groups.EditAnnouncementGroup;\n    const announcementGroupInfo: AnnouncementGroup = {\n      AnnouncementId: id,\n      AnnouncementTitle: title,\n      Active: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawAnnouncement: announcementGroupInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteAnnouncementGroup(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.Groups.DeleteAnnouncementGroup;\n    const announcementGroupInfo: AnnouncementGroup = {\n      AnnouncementId: id,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      AnnouncementId: announcementGroupInfo.AnnouncementId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Announcement SubGroups\n\n  public async GetAnnouncementSupGroups(\n    title: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.SubGroups\n        .GetAnnouncementSubGroups;\n    const announcementSubGroupInfo: AnnouncementSubGroup = {\n      AnnouncementSGId: 0,\n      AnnouncementSGTitle: title,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: announcementSubGroupInfo.AnnouncementSGTitle,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockAnnouncementSubGroups);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        AnnouncementSGId: data.AnnouncementSGId,\n        AnnouncementSGTitle: data.AnnouncementSGTitle?.trim(),\n        Active: data.Active,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewAnnouncementSubGroup(\n    title: string,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.SubGroups\n        .RegisterAnnouncementSubGroup;\n    const announcementSubGroupInfo: AnnouncementSubGroup = {\n      AnnouncementSGId: 0,\n      AnnouncementSGTitle: title,\n      Active: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawAnnouncementSubGroup: announcementSubGroupInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditAnnouncementSubGroup(\n    id: number,\n    title: string,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.SubGroups\n        .EditAnnouncementSubGroup;\n    const announcementSubGroupInfo: AnnouncementSubGroup = {\n      AnnouncementSGId: id,\n      AnnouncementSGTitle: title,\n      Active: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawAnnouncementSubGroup: announcementSubGroupInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteAnnouncementSubGroup(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements.SubGroups\n        .DeleteAnnouncementSubGroup;\n    const announcementSubGroupInfo: AnnouncementSubGroup = {\n      AnnouncementSGId: id,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      AnnouncementSGId: announcementSubGroupInfo.AnnouncementSGId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Announcement Group/SubGroup\n\n  public async GetRelationOfAnnouncementGroupAndSubGroup(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements\n        .RelationOfAnnouncementGroupAndSubGroup.GetRelations;\n    const relationOfAnnouncementGroupAndSubGroupInfo: RelationOfAnnouncementGroupAndSubGroup =\n      {\n        AnnouncementId: id,\n        AnnouncementSubGroups: [],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      AnnouncementId: relationOfAnnouncementGroupAndSubGroupInfo.AnnouncementId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockRelationOfAnnouncementGroupAndSubGroups);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        AnnouncementId: data.AnnouncementId,\n        AnnouncementTitle: data.AnnouncementTitle?.trim(),\n        AnnouncementSubGroups: data.AnnouncementSubGroups?.map((subData) => ({\n          AnnouncementSGId: subData.AnnouncementSGId,\n          AnnouncementSGTitle: subData.AnnouncementSGTitle?.trim(),\n        })),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewRelationOfAnnouncementGroupAndSubGroup(\n    announcementGroupId: number,\n    announcementSubGroupId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements\n        .RelationOfAnnouncementGroupAndSubGroup.RegisterRelation;\n    const relationOfAnnouncementGroupAndSubGroupInfo: RelationOfAnnouncementGroupAndSubGroup =\n      {\n        AnnouncementId: announcementGroupId,\n        AnnouncementSubGroups: [{ AnnouncementSGId: announcementSubGroupId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      AnnouncementId: relationOfAnnouncementGroupAndSubGroupInfo.AnnouncementId,\n      AnnouncementSubGroupId:\n        relationOfAnnouncementGroupAndSubGroupInfo.AnnouncementSubGroups[0]\n          .AnnouncementSGId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteRelationOfAnnouncementGroupAndSubGroup(\n    announcementGroupId: number,\n    announcementSubGroupId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Announcements\n        .RelationOfAnnouncementGroupAndSubGroup.DeleteRelation;\n    const relationOfAnnouncementGroupAndSubGroupInfo: RelationOfAnnouncementGroupAndSubGroup =\n      {\n        AnnouncementId: announcementGroupId,\n        AnnouncementSubGroups: [{ AnnouncementSGId: announcementSubGroupId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      AnnouncementId: relationOfAnnouncementGroupAndSubGroupInfo.AnnouncementId,\n      AnnouncementSubGroupId:\n        relationOfAnnouncementGroupAndSubGroupInfo.AnnouncementSubGroups[0]\n          .AnnouncementSGId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnnouncementSubGroup.html":{"url":"interfaces/AnnouncementSubGroup.html","title":"interface - AnnouncementSubGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnnouncementSubGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/announcement_group_subgroup_management/model/announcement-subgroup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                        \n                                            AnnouncementSGId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            AnnouncementSGTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnnouncementSubGroup {\n  AnnouncementSGId: number;\n  AnnouncementSGTitle?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnnouncementSubGroupInRelation.html":{"url":"interfaces/AnnouncementSubGroupInRelation.html","title":"interface - AnnouncementSubGroupInRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnnouncementSubGroupInRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/announcement_group_subgroup_management/model/relation-of-announcement-group-subgroup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementSGId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            AnnouncementSGTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfAnnouncementGroupAndSubGroup {\n  AnnouncementId: number;\n  AnnouncementTitle?: string;\n  AnnouncementSubGroups: AnnouncementSubGroupInRelation[];\n}\n\nexport interface AnnouncementSubGroupInRelation {\n  AnnouncementSGId: number;\n  AnnouncementSGTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiGroupProcess.html":{"url":"interfaces/ApiGroupProcess.html","title":"interface - ApiGroupProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiGroupProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/api-group-process.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            PGAccess\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PGIconName\n                                        \n                                \n                                \n                                        \n                                            PGId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PGTitle\n                                        \n                                \n                                \n                                        \n                                            WebProcesses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        PGAccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PGAccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PGIconName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PGIconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WebProcesses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        WebProcesses:         ApiProcess[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiProcess[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProcess } from './api-process.model';\n\nexport interface ApiGroupProcess {\n  PGId: number;\n  PGTitle?: string;\n  PGIconName?: string;\n  WebProcesses: ApiProcess[];\n  PGAccess?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiProcess.html":{"url":"interfaces/ApiProcess.html","title":"interface - ApiProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/api-process.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PAccess\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PIconName\n                                        \n                                \n                                \n                                        \n                                            PId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            PTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PAccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PAccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PIconName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PIconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiProcess {\n  PId: number;\n  PTitle?: string;\n  PIconName?: string;\n  PName?: string;\n  Description?: string;\n  PAccess?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiProcessesService.html":{"url":"injectables/ApiProcessesService.html","title":"injectable - ApiProcessesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiProcessesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-processes/api-processes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                    Readonly\n                                apiUrl\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertApiGroupsToPageGroups\n                            \n                            \n                                    Public\n                                    Async\n                                getApiProcesses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertApiGroupsToPageGroups\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertApiGroupsToPageGroups(apiGroups: ApiGroupProcess[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-processes/api-processes.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiGroups\n                                            \n                                                            ApiGroupProcess[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PageGroup[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getApiProcesses\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiProcesses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-processes/api-processes.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-processes/api-processes.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : API_ROUTES.SoftwareUserAPI.GetWebProcesses\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-processes/api-processes.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-processes/api-processes.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { UserAuthService } from 'app/services/user-auth-service/user-auth.service';\nimport { ApiGroupProcess } from 'app/data/model/api-group-process.model';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { PageGroup } from 'app/data/model/page-group.model';\nimport { mockApiGroupProcesses } from 'app/data/mock/page-group.mock';\nimport { APICommunicationManagementService } from 'app/services/api-communication-management/apicommunication-management.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiProcessesService {\n  private readonly apiUrl = API_ROUTES.SoftwareUserAPI.GetWebProcesses;\n\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async getApiProcesses(): Promise> {\n    await this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const bodyValue = {\n      sessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(this.apiUrl, bodyValue, mockApiGroupProcesses);\n    //#endregion\n\n    //#region Return\n    const pageGroups = this.convertApiGroupsToPageGroups(response.data ?? []);\n\n    return {\n      success: response.success,\n      data: pageGroups ?? [],\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private convertApiGroupsToPageGroups(\n    apiGroups: ApiGroupProcess[]\n  ): PageGroup[] {\n    return apiGroups.map((group) => ({\n      id: group.PGId,\n      title: group.PGTitle!.trim(),\n      icon: group.PGIconName!.trim(),\n      processes: group.WebProcesses!.map((proc) => ({\n        id: proc.PId,\n        title: proc.PTitle!.trim(),\n        name: proc.PName!.trim(),\n        description: proc.Description!.trim(),\n        icon: proc.PIconName!.trim(),\n      })),\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/api-Response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  success: boolean;\n  data?: T;\n  error?: {\n    code: number;\n    message: string;\n    details: string;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            CommonModule\n                            ToastModule\n                                LoadingComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {ToastModule} from \"primeng/toast\"\nimport { LoadingComponent } from './components/shared/loading/loading.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,CommonModule,ToastModule,LoadingComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\n\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BinaryRadioInputComponent.html":{"url":"components/BinaryRadioInputComponent.html","title":"component - BinaryRadioInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BinaryRadioInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-binary-radio-input\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            RadioButtonModule\n                            NgClass\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./binary-radio-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./binary-radio-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                preventIfReadonly\n                            \n                            \n                                    Private\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                radioName\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'radio-option'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preventIfReadonly\n                        \n                    \n                \n            \n            \n                \npreventIfReadonly(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:38\n                                \n                            \n\n                \n                    \n                        setcontrol(value: FormControl)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/binary-radio-input/binary-radio-input.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        FormControl\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RadioButtonModule } from 'primeng/radiobutton';\n\n@Component({\n  selector: 'app-binary-radio-input',\n  imports: [FormsModule, RadioButtonModule, NgClass, ReactiveFormsModule],\n  templateUrl: './binary-radio-input.component.html',\n  styleUrl: './binary-radio-input.component.scss',\n})\nexport class BinaryRadioInputComponent implements OnInit, OnChanges {\n  private _control: FormControl = new FormControl(true);\n  @Input() readonly: boolean = false;\n  @Input() disabled: boolean = false;\n\n  @Input() radioName: string = 'radio-option';\n  @Input() label: string = '';\n\n  preventIfReadonly(event: Event): void {\n    if (this.readonly) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n\n  @Input()\n  set control(value: FormControl) {\n    this._control = value || new FormControl(true);\n  }\n\n  get control(): FormControl {\n    return this._control;\n  }\n\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  private setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ label }}\n\n    \n      \n      \n        \n        فعال\n      \n\n      \n      \n        \n        غیرفعال\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ label }}                                فعال                                  غیرفعال            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BinaryRadioInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CaptchaChallenge.html":{"url":"interfaces/CaptchaChallenge.html","title":"interface - CaptchaChallenge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CaptchaChallenge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/captcha-challenge.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            imageData\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imageData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CaptchaChallenge {\n  sessionId: string;\n  imageData: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CaptchaInputComponent.html":{"url":"components/CaptchaInputComponent.html","title":"component - CaptchaInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CaptchaInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/captcha-input/captcha-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-captcha-input\n            \n\n\n            \n                imports\n                \n                            InputGroupAddonModule\n                            MessageModule\n                            InputGroupModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./captcha-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./captcha-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableRefresh\n                            \n                            \n                                imageData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCaptchaInformation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onRefreshClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captchaInputControl\n                            \n                            \n                                sessionIdControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(captchaService: CaptchaService, toast: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        captchaService\n                                                  \n                                                        \n                                                                        CaptchaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captchaInputControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sessionIdControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCaptchaInformation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaInformation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRefreshClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRefreshClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disableRefresh\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/captcha-input/captcha-input.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { MessageModule } from 'primeng/message';\nimport { CaptchaService } from 'app/services/captcha-service/captcha.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\n\n@Component({\n  selector: 'app-captcha-input',\n  imports: [\n    InputGroupAddonModule,\n    MessageModule,\n    InputGroupModule,\n    ReactiveFormsModule,\n    NgClass,\n  ],\n  templateUrl: './captcha-input.component.html',\n  styleUrl: './captcha-input.component.scss',\n})\n\n\nexport class CaptchaInputComponent implements OnInit {\n  @Input() sessionIdControl: FormControl = new FormControl('');\n  @Input() captchaInputControl: FormControl = new FormControl('');\n  imageData = '';\n  disableRefresh = false;\n\n  constructor(private captchaService: CaptchaService, private toast: ToastService) {\n\n  }\n\n  ngOnInit(): void {\n    this.getCaptchaInformation();\n  }\n\n\n  async getCaptchaInformation() {\n    const captcha = await this.captchaService.getCaptcha();\n    if (!captcha.success || !captcha.data) {\n      this.toast.error('خطا', captcha.error?.message ?? \"\");\n      console.log(captcha.error?.details);\n      return;\n    }\n\n    this.imageData = 'data:image/png;base64,' + captcha.data.imageData;\n    this.sessionIdControl.setValue(captcha.data.sessionId);\n  }\n\n\n  async onRefreshClick() {\n    if (this.disableRefresh) return;\n\n    this.disableRefresh = true;\n    await this.getCaptchaInformation();\n\n    setTimeout(() => {\n      this.disableRefresh = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n    \n      \n  \n\n  \n\n  \n      \n    \n\n\n@if (captchaInputControl.touched && captchaInputControl.errors) {\n  @if (captchaInputControl.errors['required']) {\n    \n      وارد کردن عدد تصویر الزامی است.\n    \n  } @else if (captchaInputControl.errors['minlength']) {\n    \n      کپچا باید حداقل {{ captchaInputControl.errors['minlength'].requiredLength }} کاراکتر باشد.\n    \n  }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              @if (captchaInputControl.touched && captchaInputControl.errors) {  @if (captchaInputControl.errors[\\'required\\']) {          وارد کردن عدد تصویر الزامی است.      } @else if (captchaInputControl.errors[\\'minlength\\']) {          کپچا باید حداقل {{ captchaInputControl.errors[\\'minlength\\'].requiredLength }} کاراکتر باشد.      }}'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CaptchaInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaService.html":{"url":"injectables/CaptchaService.html","title":"injectable - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/captcha-service/captcha.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/captcha-service/captcha.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/captcha-service/captcha.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { CaptchaChallenge } from 'app/data/model/captcha-challenge.model';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockCaptcha } from 'app/data/mock/captcha-challenge.mock';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CaptchaService {\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async getCaptcha(): Promise> {\n    //#region Consts\n    const apiUrl = API_ROUTES.SoftwareUserAPI.CAPTCHA;\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Get(apiUrl, mockCaptcha);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: {\n        sessionId: response.data?.SessionId!,\n        imageData: response.data?.Captcha!,\n      },\n      error: response.error,\n    };\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInputComponent.html":{"url":"components/CheckboxInputComponent.html","title":"component - CheckboxInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox-input\n            \n\n\n            \n                imports\n                \n                            CheckboxModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkbox-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                inputId\n                            \n                            \n                                label\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl(false)\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'checkbox-input'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/checkbox-input/checkbox-input.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\n\n@Component({\n  selector: 'app-checkbox-input',\n  imports: [CheckboxModule, ReactiveFormsModule],\n  templateUrl: './checkbox-input.component.html',\n  styleUrl: './checkbox-input.component.scss',\n})\nexport class CheckboxInputComponent implements OnInit, OnChanges {\n  @Input() control: FormControl = new FormControl(false);\n  @Input() label: string = '';\n  @Input() readOnly: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() inputId: string = 'checkbox-input';\n\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  {{label}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label}}'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/City.html":{"url":"interfaces/City.html","title":"interface - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/province-city.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            CityActive\n                                        \n                                \n                                \n                                        \n                                            CityCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            CityTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CityActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CityActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CityCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CityCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CityTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CityTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Province {\n  ProvinceId: number;\n  ProvinceName?: string;\n  ProvinceActive?: boolean;\n  Cities?: City[];\n}\n\nexport interface City {\n  CityCode: number;\n  CityTitle?: string;\n  CityActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/theme.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            highlight\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            primary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/data/model/theme.model.ts:31\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PrimitiveTokens {\n  [key: string]: string;\n}\n\n// Semantic tokens provide contextual meaning to primitive tokens\ninterface SemanticTokens {\n  primary?: {\n    [shade: number]: string;\n  };\n  colorScheme?: {\n    light?: ColorScheme;\n    dark?: ColorScheme;\n  };\n  [key: string]: any;\n}\n\n// Defines the structure for color schemes\ninterface ColorScheme {\n  primary?: {\n    color?: string;\n    inverseColor?: string;\n    hoverColor?: string;\n    activeColor?: string;\n  };\n  highlight?: {\n    background?: string;\n    focusBackground?: string;\n    color?: string;\n    focusColor?: string;\n  };\n  [key: string]: any;\n}\n\n// Component tokens allow customization at the component level\ninterface ComponentTokens {\n  [componentName: string]: {\n    [property: string]: string;\n  };\n}\n\n// The complete theme preset combining all token types\nexport interface ThemePreset {\n  name?: string;\n  primitives?: PrimitiveTokens;\n  semantic?: SemanticTokens;\n  components?: ComponentTokens;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentTokens.html":{"url":"interfaces/ComponentTokens.html","title":"interface - ComponentTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/theme.model.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [componentName: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/data/model/theme.model.ts:36\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface PrimitiveTokens {\n  [key: string]: string;\n}\n\n// Semantic tokens provide contextual meaning to primitive tokens\ninterface SemanticTokens {\n  primary?: {\n    [shade: number]: string;\n  };\n  colorScheme?: {\n    light?: ColorScheme;\n    dark?: ColorScheme;\n  };\n  [key: string]: any;\n}\n\n// Defines the structure for color schemes\ninterface ColorScheme {\n  primary?: {\n    color?: string;\n    inverseColor?: string;\n    hoverColor?: string;\n    activeColor?: string;\n  };\n  highlight?: {\n    background?: string;\n    focusBackground?: string;\n    color?: string;\n    focusColor?: string;\n  };\n  [key: string]: any;\n}\n\n// Component tokens allow customization at the component level\ninterface ComponentTokens {\n  [componentName: string]: {\n    [property: string]: string;\n  };\n}\n\n// The complete theme preset combining all token types\nexport interface ThemePreset {\n  name?: string;\n  primitives?: PrimitiveTokens;\n  semantic?: SemanticTokens;\n  components?: ComponentTokens;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptographyService.html":{"url":"injectables/CryptographyService.html","title":"injectable - CryptographyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptographyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cryptography-service/cryptography.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                SHA256\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        SHA256\n                        \n                    \n                \n            \n            \n                \n                        \n                    SHA256(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cryptography-service/cryptography.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport SHA256 from 'crypto-js/sha256';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CryptographyService {\n  public SHA256(message: string): string {\n    return SHA256(message).toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                                HeaderComponent\n                                SidebarComponent\n                                SubMenuComponent\n                                FooterComponent\n                                SupportButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiProcessesService\n                            \n                            \n                                    Private\n                                    Optional\n                                closeTabSub\n                            \n                            \n                                    Private\n                                componentCache\n                            \n                            \n                                    \n                                container\n                            \n                            \n                                headerData\n                            \n                            \n                                menuItems\n                            \n                            \n                                    Private\n                                    Optional\n                                pageGroupSub\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                subMenuVisible\n                            \n                            \n                                    Private\n                                    Optional\n                                tabSub\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                            \n                                webProcesses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                removeComponent\n                            \n                            \n                                renderComponent\n                            \n                            \n                                    Private\n                                    Async\n                                setupDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeComponent\n                        \n                    \n                \n            \n            \n                \nremoveComponent(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderComponent\n                        \n                    \n                \n            \n            \n                \nrenderComponent(tab: TabItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tab\n                                            \n                                                            TabItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setupDashboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupDashboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard/dashboard.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiProcessesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApiProcessesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        closeTabSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        componentCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tabView', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HeaderData\n\n                    \n                \n                \n                    \n                        Default value : { title: '', icon: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItemData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        pageGroupSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subMenuVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        tabSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webProcesses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WebProcess[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard/dashboard.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentRef,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n  inject\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { ButtonModule } from 'primeng/button';\nimport { HeaderComponent } from 'app/components/shared/header/header.component';\nimport { SidebarComponent } from 'app/components/shared/sidebar/sidebar.component';\nimport { SubMenuComponent } from 'app/components/shared/sub-menu/sub-menu.component';\nimport { FooterComponent } from 'app/components/shared/footer/footer.component';\nimport { SupportButtonComponent } from 'app/components/shared/support-button/support-button.component';\n\nimport { UserAuthService } from 'app/services/user-auth-service/user-auth.service';\nimport { ApiProcessesService } from 'app/services/api-processes/api-processes.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\n\nimport { APP_ROUTES } from 'app/constants/routes';\nimport { setPageGroups, selectPageGroup, closeSidebar } from 'app/store/sidebar/sidebar.actions';\nimport { selectSelectedPageGroup } from 'app/store/sidebar/sidebar.selectors';\n\nimport { HeaderData } from 'app/data/model/header-data.model';\nimport { WebProcess } from 'app/data/model/web-process.model';\nimport { MenuItemData } from 'app/data/model/menu-item.model';\nimport { selectActiveTab, selectLastClosedTabId } from 'app/store/tabs/tabs.selectors';\nimport { TabComponentRegistry } from 'app/constants/tab-component-registry';\nimport { TabItem } from 'app/data/model/tabs.model';\nimport { Subscription } from 'rxjs';\nimport { TabViewComponent } from 'app/components/shared/tab-view/tab-view.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    HeaderComponent,\n    SidebarComponent,\n    SubMenuComponent,\n    FooterComponent,\n    SupportButtonComponent,\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\nexport class DashboardComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('tabView', { read: ViewContainerRef }) container!: ViewContainerRef;\n\n  private userAuth = inject(UserAuthService);\n  private router = inject(Router);\n  private toast = inject(ToastService);\n  private store = inject(Store);\n  private apiProcessesService = inject(ApiProcessesService);\n\n  private componentCache = new Map>();\n  private tabSub?: Subscription;\n  private closeTabSub?: Subscription;\n  private pageGroupSub?: Subscription;\n\n  headerData: HeaderData = { title: '', icon: '' };\n  webProcesses: WebProcess[] = [];\n  menuItems: MenuItemData[] = [];\n  subMenuVisible = false;\n\n  async ngOnInit(): Promise {\n    console.log(this.userAuth.getSessionId())\n    await this.setupDashboard();\n  }\n\n  ngAfterViewInit(): void {\n    this.tabSub = this.store.select(selectActiveTab).subscribe(tab => {\n      this.subMenuVisible = false;\n      if (tab) this.renderComponent(tab);\n    });\n\n    this.closeTabSub = this.store.select(selectLastClosedTabId).subscribe(id => {\n      if (id !== null) this.removeComponent(id);\n    });\n\n    this.pageGroupSub = this.store.select(selectSelectedPageGroup).subscribe(page => {\n      if (!page) return;\n\n      if (this.headerData.title.trim())\n        this.subMenuVisible = true;\n\n      this.headerData = {\n        title: page.title,\n        icon: page.icon,\n      };\n      this.webProcesses = page.processes;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tabSub?.unsubscribe();\n    this.closeTabSub?.unsubscribe();\n    this.pageGroupSub?.unsubscribe();\n  }\n\n  private async setupDashboard(): Promise {\n    const auth = await this.userAuth.isLoggedIn();\n    if (!auth.success && !auth.data?.ISSessionLive) {\n      this.router.navigate([APP_ROUTES.AUTH.LOGIN]);\n      return;\n    }\n\n    const res = await this.apiProcessesService.getApiProcesses();\n    if (!res.success || !res.data) {\n      this.toast.error('خطا', res.error?.message ?? 'خطایی رخ داده است');\n      console.error('API error details:', res.error?.details);\n      return;\n    }\n\n    this.store.dispatch(setPageGroups({ groups: res.data }));\n\n    this.menuItems = res.data.map(pg => ({\n      label: pg.title,\n      icon: pg.icon,\n      command: () => {\n        this.store.dispatch(selectPageGroup({ id: pg.id }));\n        this.subMenuVisible = true;\n        this.store.dispatch(closeSidebar());\n      },\n    }));\n  }\n\n  renderComponent(tab: TabItem) {\n    const cached = this.componentCache.get(tab.id);\n\n    if (this.container.length > 0) {\n      this.container.detach(0);\n    }\n\n    if (cached && !cached.hostView.destroyed) {\n      this.container.insert(cached.hostView);\n      return;\n    }\n\n    const compRef = this.container.createComponent(TabViewComponent);\n    const views = TabComponentRegistry[tab.component];\n    compRef.instance.views = views;\n\n    this.container.insert(compRef.hostView);\n    this.componentCache.set(tab.id, compRef);\n  }\n\n  removeComponent(id: number) {\n    const compRef = this.componentCache.get(id);\n    if (!compRef) return;\n\n    const index = this.container.indexOf(compRef.hostView);\n    if (index !== -1) {\n      this.container.detach(index);\n    }\n\n    compRef.destroy();\n    this.componentCache.delete(id);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatePickerInput.html":{"url":"components/DatePickerInput.html","title":"component - DatePickerInput","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DatePickerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-picker-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgPersianDatepickerModule\n                            NgClass\n                            InputGroupModule\n                            InputGroupAddonModule\n                            MessageModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./date-picker-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./date-picker-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurInput\n                            \n                            \n                                onFocusInput\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                control\n                            \n                            \n                                datePickerPosition\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                            \n                                validationField\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstErrorMessage\n                                \n                                \n                                    isDisabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datePickerPosition\n                    \n                \n                \n                    \n                        Type :     \"top\" | \"bottom\"\n\n                    \n                \n                \n                    \n                        Default value : 'bottom'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-calendar'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validationField\n                    \n                \n                \n                    \n                        Type :         ValidationField | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlurInput\n                        \n                    \n                \n            \n            \n                \nonBlurInput(_: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusInput\n                        \n                    \n                \n            \n            \n                \nonFocusInput(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstErrorMessage\n                    \n                \n\n                \n                    \n                        getfirstErrorMessage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n\n                \n                    \n                        getisDisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/date-picker-input/date-picker-input.component.component.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule, NgClass } from '@angular/common';\n\n// 🎯 UI Modules\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { NgPersianDatepickerModule } from 'ng-persian-datepicker';\n\n// 📐 Validation Utilities\nimport {\n  ErrorsValidation,\n  getDefaultErrorMessage,\n  ValidationField,\n  ValidationSchema,\n} from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-date-picker-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgPersianDatepickerModule,\n    NgClass,\n    InputGroupModule,\n    InputGroupAddonModule,\n    MessageModule,\n    ButtonModule,\n  ],\n  templateUrl: './date-picker-input.component.html',\n  styleUrl: './date-picker-input.component.scss',\n})\nexport class DatePickerInput implements OnInit, OnChanges {\n  // 📥 Inputs\n  @Input() control = new FormControl('');\n  @Input() validationField: ValidationField | null = null;\n  @Input() placeholder = '';\n  @Input() readOnly = false;\n  @Input() disabled = false;\n  @Input() icon: string = 'pi pi-calendar';\n  @Input() label = '';\n  @Input() addonWidth: string | null = null;\n  @Input() datePickerPosition: 'top' | 'bottom' = 'bottom';\n\n  // 🔍 Error message display\n  get firstErrorMessage(): string | null {\n    const errors = this.control?.errors as ErrorsValidation;\n    if (!this.validationField || !errors) return null;\n\n    const rule = ValidationSchema[this.validationField];\n    return getDefaultErrorMessage(rule.name, errors);\n  }\n\n  // 🚫 Control disabled state\n  get isDisabled(): boolean {\n    return this.control.disabled;\n  }\n\n  // 🪄 Lifecycle: OnInit\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  // 🔁 Lifecycle: OnChanges\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  // 🧩 Set control enabled/disabled based on input prop\n  setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n\n  // 👁‍🗨 Prevent focus on input if disabled\n  onFocusInput(input: HTMLInputElement): void {\n    if (this.disabled) {\n      input.blur();\n    }\n  }\n\n  // 🫣 Prevent marking as touched if readonly\n  onBlurInput(_: HTMLInputElement): void {\n    if (this.readOnly) {\n      this.control.markAsUntouched();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n\n    \n      {{ label }}\n    \n\n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n\n\n  \n    {{ firstErrorMessage }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ label }}                                                              {{ firstErrorMessage }}  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DatePickerInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DriverInfoFormComponent.html":{"url":"components/DriverInfoFormComponent.html","title":"component - DriverInfoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DriverInfoFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                \n            \n\n\n            \n                selector\n                app-driver-info-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            ReactiveFormsModule\n                            DialogModule\n                                TextInputComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./driver-info-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./driver-info-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                dialogService\n                            \n                            \n                                driverForm\n                            \n                            \n                                    Private\n                                driverTruckManager\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loadDriverInfoFromAPI\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateDriverSms\n                            \n                            \n                                copyToClipboard\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                populateDriverForm\n                            \n                            \n                                    Async\n                                resetDriverPassword\n                            \n                            \n                                    Async\n                                sendWebsiteLink\n                            \n                            \n                                    Private\n                                showNewPasswordDialog\n                            \n                            \n                                    Async\n                                updateDriverMobileNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchNationalId\n                                \n                                \n                                    driverId\n                                \n                                \n                                    nationalId\n                                \n                                \n                                    fullName\n                                \n                                \n                                    mobile\n                                \n                                \n                                    fatherName\n                                \n                                \n                                    licenseNumber\n                                \n                                \n                                    smartCard\n                                \n                                \n                                    address\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:59\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateDriverSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateDriverSms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Activate SMS system for the driver.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyToClipboard\n                        \n                    \n                \n            \n            \n                \ncopyToClipboard(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Copy the given text to clipboard and show a toast.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:245\n                        \n                    \n\n\n            \n                \n                        Check if the API response is successful and show error toast if not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateDriverForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateDriverForm(driverInfo: TruckDriverInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:229\n                        \n                    \n\n\n            \n                \n                        Populate the driver form with the given driver info.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                driverInfo\n                                            \n                                                            TruckDriverInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetDriverPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetDriverPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Reset the driver's password and show the new credentials in a dialog.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendWebsiteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendWebsiteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:183\n                        \n                    \n\n\n            \n                \n                        Send website login link to the driver.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showNewPasswordDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNewPasswordDialog(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Open dialog showing new username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateDriverMobileNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDriverMobileNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Update the driver's mobile number using the form values.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driverForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        driverTruckManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Driver_TruckManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDriverInfoFromAPI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:110\n                        \n                    \n\n            \n                \n                    Load driver info from API by national ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchNationalId\n                    \n                \n\n                \n                    \n                        getsearchNationalId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:258\n                                \n                            \n                    \n                        \n                                Get searchNationalId form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        driverId\n                    \n                \n\n                \n                    \n                        getdriverId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:263\n                                \n                            \n                    \n                        \n                                Get driverId form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nationalId\n                    \n                \n\n                \n                    \n                        getnationalId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:268\n                                \n                            \n                    \n                        \n                                Get nationalId form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:273\n                                \n                            \n                    \n                        \n                                Get fullName form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n\n                \n                    \n                        getmobile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:278\n                                \n                            \n                    \n                        \n                                Get mobile form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fatherName\n                    \n                \n\n                \n                    \n                        getfatherName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:283\n                                \n                            \n                    \n                        \n                                Get fatherName form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        licenseNumber\n                    \n                \n\n                \n                    \n                        getlicenseNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:288\n                                \n                            \n                    \n                        \n                                Get licenseNumber form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        smartCard\n                    \n                \n\n                \n                    \n                        getsmartCard()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:293\n                                \n                            \n                    \n                        \n                                Get smartCard form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component.ts:298\n                                \n                            \n                    \n                        \n                                Get address form control\n\n\n                                \n                                    Returns :     FormControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { TextInputComponent } from '../../../shared/inputs/text-input/text-input.component';\n\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\n\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { TruckDriverInfo } from 'app/services/driver-truck-management/model/truck-driver-info.model';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SearchInputComponent } from '../../../shared/inputs/search-input/search-input.component';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { NewPasswordDialogComponent } from 'app/components/shared/dialog/new-password-dialog/new-password-dialog.component';\n\n@Component({\n  selector: 'app-driver-info-form',\n  imports: [\n    ButtonModule,\n    ReactiveFormsModule,\n    DialogModule,\n    TextInputComponent,\n    SearchInputComponent,\n  ],\n  providers: [DialogService],\n  templateUrl: './driver-info-form.component.html',\n  styleUrl: './driver-info-form.component.scss',\n})\nexport class DriverInfoFormComponent {\n  private fb = inject(FormBuilder);\n  private toast = inject(ToastService);\n  private driverTruckManager = inject(Driver_TruckManagementService);\n  private loadingService = inject(LoadingService);\n  private destroy$ = new Subject();\n  private dialogService = inject(DialogService);\n  driverForm: FormGroup;\n  searchForm: FormGroup;\n\n  loading = false;\n  addonWidth = '8rem';\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  constructor() {\n    this.searchForm = this.fb.group({\n      searchNationalId: ['', ValidationSchema.nationalId],\n    });\n\n    this.driverForm = this.fb.group({\n      driverId: ['', ValidationSchema.driverId],\n      nationalId: ['', ValidationSchema.nationalId],\n      fullName: ['', ValidationSchema.fullName],\n      mobile: ['', ValidationSchema.mobile],\n      fatherName: ['', ValidationSchema.fatherName],\n      licenseNumber: ['', ValidationSchema.licenseNumber],\n      smartCard: ['', ValidationSchema.smartCard],\n      address: [''],\n    });\n  }\n\n  /**\n   * Update the driver's mobile number using the form values.\n   */\n  async updateDriverMobileNumber(): Promise {\n    if (this.driverForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      // Get values from form controls\n      const driverId = this.driverId.value;\n      const mobile = this.mobile.value;\n      // Call service to update mobile number\n      const response =\n        await this.driverTruckManager.RegisterNew_EditDriverMobileNumber(\n          driverId,\n          mobile\n        );\n\n      if (!this.isSuccessful(response)) return;\n\n      this.toast.success(\n        'موفق',\n        response.data?.Message ?? 'شماره تلفن راننده تغییر یافت.'\n      );\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  /**\n   * Load driver info from API by national ID.\n   */\n  loadDriverInfoFromAPI = async (nationalId: string) => {\n    if (this.searchForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      // Call service to get driver info\n      const response = await this.driverTruckManager.GetDriverInfoFromAPI(\n        nationalId\n      );\n\n      if (!this.isSuccessful(response)) return;\n      this.populateDriverForm(response.data!);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  };\n\n  /**\n   * Reset the driver's password and show the new credentials in a dialog.\n   */\n  async resetDriverPassword(): Promise {\n    if (this.driverForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      // Get driver ID from form\n      const driverId = this.driverId.value;\n      // Call service to reset password\n      const response = await this.driverTruckManager.ResetDriverPassword(\n        driverId\n      );\n\n      if (!this.isSuccessful(response)) return;\n\n      const { Username, Password } = response.data!;\n      // Show new credentials in dialog\n      this.showNewPasswordDialog(Username, Password);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  /**\n   * Activate SMS system for the driver.\n   */\n  async activateDriverSms(): Promise {\n    if (this.driverForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      // Get driver ID from form\n      const driverId = this.driverId.value;\n      // Call service to activate SMS\n      const response = await this.driverTruckManager.ActivateDriverSMS(\n        driverId\n      );\n\n      if (!this.isSuccessful(response)) return;\n\n      this.toast.success(\n        'موفق',\n        response.data?.Message ?? 'سیستم پیامک با موفقیت فعال شد.'\n      );\n    } catch {\n      this.toast.error('خطا', 'در فعال‌سازی سیستم پیامک مشکلی پیش آمد.');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  /**\n   * Send website login link to the driver.\n   */\n  async sendWebsiteLink(): Promise {\n    if (this.driverForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      // Get driver ID from form\n      const driverId = this.driverId.value;\n      // Call service to send website link\n      const response = await this.driverTruckManager.SendWebsiteLink(driverId);\n\n      if (!this.isSuccessful(response)) return;\n\n      this.toast.success(\n        'موفق',\n        response.data?.Message ?? 'لینک ورود با موفقیت ارسال شد.'\n      );\n    } catch {\n      this.toast.error('خطا', 'در ارسال لینک ورود مشکلی پیش آمد.');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  /**\n   * Copy the given text to clipboard and show a toast.\n   */\n  copyToClipboard(text: string) {\n    this.toast.success('متن در کلیپبورد ذخیره شد', '');\n    navigator.clipboard.writeText(text);\n  }\n\n  /**\n   * Open dialog showing new username and password.\n   */\n  private showNewPasswordDialog(username: string, password: string): void {\n    this.dialogService.open(NewPasswordDialogComponent, {\n      header: 'رمز عبور جدید',\n      width: '20rem',\n      modal: true,\n      inputValues: { username, password },\n    });\n  }\n\n  /**\n   * Populate the driver form with the given driver info.\n   */\n  private populateDriverForm(driverInfo: TruckDriverInfo): void {\n    this.driverForm.patchValue({\n      driverId: driverInfo.DriverId ?? '',\n      nationalId: driverInfo.NationalCode ?? '',\n      fullName: driverInfo.NameFamily ?? '',\n      mobile: driverInfo.MobileNumber ?? '',\n      fatherName: driverInfo.FatherName ?? '',\n      licenseNumber: driverInfo.DrivingLicenseNo ?? '',\n      smartCard: driverInfo.SmartCardNo ?? '',\n      address: driverInfo.Address ?? '',\n    });\n  }\n\n  /**\n   * Check if the API response is successful and show error toast if not.\n   */\n  private isSuccessful(response: ApiResponse): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  // Form control getters\n  /** Get searchNationalId form control */\n  get searchNationalId(): FormControl {\n    return this.searchForm.get('searchNationalId') as FormControl;\n  }\n\n  /** Get driverId form control */\n  get driverId(): FormControl {\n    return this.driverForm.get('driverId') as FormControl;\n  }\n\n  /** Get nationalId form control */\n  get nationalId(): FormControl {\n    return this.driverForm.get('nationalId') as FormControl;\n  }\n\n  /** Get fullName form control */\n  get fullName(): FormControl {\n    return this.driverForm.get('fullName') as FormControl;\n  }\n\n  /** Get mobile form control */\n  get mobile(): FormControl {\n    return this.driverForm.get('mobile') as FormControl;\n  }\n\n  /** Get fatherName form control */\n  get fatherName(): FormControl {\n    return this.driverForm.get('fatherName') as FormControl;\n  }\n\n  /** Get licenseNumber form control */\n  get licenseNumber(): FormControl {\n    return this.driverForm.get('licenseNumber') as FormControl;\n  }\n\n  /** Get smartCard form control */\n  get smartCard(): FormControl {\n    return this.driverForm.get('smartCard') as FormControl;\n  }\n\n  /** Get address form control */\n  get address(): FormControl {\n    return this.driverForm.get('address') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n      \n\n      \n\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DriverInfoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Driver_TruckManagementService.html":{"url":"injectables/Driver_TruckManagementService.html","title":"injectable - Driver_TruckManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Driver_TruckManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/driver-truck-management/driver-truck-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ActivateDriverSMS\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeTruckNativeness\n                            \n                            \n                                    Public\n                                    Async\n                                GetComposedTruckInfoWithLastActiveTurn\n                            \n                            \n                                    Public\n                                    Async\n                                GetComposedTruckInfoWithLastTurn\n                            \n                            \n                                    Public\n                                    Async\n                                GetDriverInfoForSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                GetDriverInfoFromAPI\n                            \n                            \n                                    Public\n                                    Async\n                                GetTruckInfoForSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                GetTruckInfoFromAPI\n                            \n                            \n                                    Public\n                                    Async\n                                GetTruckNativeness\n                            \n                            \n                                    Public\n                                    Async\n                                GetVirtualWallet\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNew_EditDriverMobileNumber\n                            \n                            \n                                    Public\n                                    Async\n                                ResetDriverPassword\n                            \n                            \n                                    Public\n                                    Async\n                                SendWebsiteLink\n                            \n                            \n                                    Public\n                                    Async\n                                SetComposedTruckInfo\n                            \n                            \n                                    Private\n                                TrimComposedTruckInfo\n                            \n                            \n                                    Private\n                                TrimTruckDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ActivateDriverSMS\n                        \n                    \n                \n            \n            \n                \n                        \n                    ActivateDriverSMS(driverId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                driverId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeTruckNativeness\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTruckNativeness(truckId: number, truckNativenessExpireDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:309\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                truckNativenessExpireDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetComposedTruckInfoWithLastActiveTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetComposedTruckInfoWithLastActiveTurn(truckId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:340\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetComposedTruckInfoWithLastTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetComposedTruckInfoWithLastTurn(truckId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:371\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetDriverInfoForSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetDriverInfoForSoftwareUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetDriverInfoFromAPI\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetDriverInfoFromAPI(nationalCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nationalCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTruckInfoForSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTruckInfoForSoftwareUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:268\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTruckInfoFromAPI\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTruckInfoFromAPI(smartCardNo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartCardNo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTruckNativeness\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTruckNativeness(truckId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:287\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetVirtualWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetVirtualWallet()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:466\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNew_EditDriverMobileNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNew_EditDriverMobileNumber(driverId: number, mobileNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                driverId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobileNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ResetDriverPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResetDriverPassword(driverId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                driverId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        SendWebsiteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    SendWebsiteLink(driverId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                driverId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        SetComposedTruckInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    SetComposedTruckInfo(truckId: number, driverId: number, turnId: number, moneyWalletId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:432\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                driverId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                turnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                moneyWalletId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        TrimComposedTruckInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    TrimComposedTruckInfo(response: TruckComposedInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:405\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            TruckComposedInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TruckComposedInfo\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        TrimTruckDriver\n                        \n                    \n                \n            \n            \n                \n                        \n                    TrimTruckDriver(truckDriver: TruckDriverInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckDriver\n                                            \n                                                            TruckDriverInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TruckDriverInfo\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/driver-truck-management/driver-truck-management.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { TruckDriverInfo } from 'app/services/driver-truck-management/model/truck-driver-info.model';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport {\n  APIUsernamePassword,\n  UsernamePassword,\n} from 'app/data/model/username-password.model';\nimport {\n  TruckComposedInfo,\n  TruckInfo,\n} from 'app/services/driver-truck-management/model/truck-info.model';\nimport { TruckNativenessInfo } from 'app/services/driver-truck-management/model/truck-nativeness-info.model';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ErrorCodes } from 'app/constants/error-messages';\nimport { mockTruckDriverInfo } from 'app/services/driver-truck-management/mock/truck-driver-info.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { mockAPIUsernamePassword } from 'app/data/mock/username-password.mock';\nimport {\n  mockTruckComposedInfo,\n  mockTruckInfo,\n} from 'app/services/driver-truck-management/mock/truck-info.mock';\nimport { mockTruckNativenessInfo } from 'app/services/driver-truck-management/mock/truck-nativeness-info.mock';\nimport { Wallet } from 'app/services/wallet-management/model/wallet.model';\nimport { mockWallet } from '../wallet-management/mock/wallet.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Driver_TruckManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  //#region Driver\n\n  public async GetDriverInfoFromAPI(\n    nationalCode: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const outdoorApiUrl =\n      API_ROUTES.TransportationAPI.Driver.GetTruckDriverInfoFromOutdoorAPI;\n    const localApiUrl =\n      API_ROUTES.TransportationAPI.Driver.GetTruckDriverInfoFromLocalAPI;\n    const truckDriverInfo: TruckDriverInfo = {\n      DriverId: 0,\n      NationalCode: nationalCode,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckDriverNationalCode: truckDriverInfo.NationalCode,\n    };\n    //#endregion\n\n    //#region Request + Return\n    var response = await this.apiCommunicator.CommunicateWithAPI_Post(localApiUrl, bodyValue, mockTruckDriverInfo);\n\n    if (response.error?.code == ErrorCodes.NotFoundInLocalAPI) {\n      response = await this.apiCommunicator.CommunicateWithAPI_Post(outdoorApiUrl, bodyValue, mockTruckDriverInfo);\n    }\n\n    return {\n      success: response.success,\n      data: this.TrimTruckDriver(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetDriverInfoForSoftwareUser(): Promise\n  > {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Driver.GetTruckDriverInfoForSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckDriverInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimTruckDriver(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private TrimTruckDriver(truckDriver: TruckDriverInfo): TruckDriverInfo {\n    return {\n      DriverId: truckDriver.DriverId,\n      NationalCode: truckDriver.NationalCode?.trim(),\n      NameFamily: truckDriver.NameFamily?.trim(),\n      MobileNumber: truckDriver.MobileNumber?.trim(),\n      FatherName: truckDriver.FatherName?.trim(),\n      DrivingLicenseNo: truckDriver.DrivingLicenseNo?.trim(),\n      Address: truckDriver.Address?.trim(),\n      SmartCardNo: truckDriver.SmartCardNo?.trim(),\n    };\n  }\n\n  public async RegisterNew_EditDriverMobileNumber(\n    driverId: number,\n    mobileNumber: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Driver.TruckDriverRegisteringMobileNumber;\n    const truckDriverInfo: TruckDriverInfo = {\n      DriverId: driverId,\n      MobileNumber: mobileNumber,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckDriverId: truckDriverInfo.DriverId,\n      MobileNumber: truckDriverInfo.MobileNumber,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ActivateDriverSMS(\n    driverId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Driver.ActivateTruckDriverSMSOwner;\n    const truckDriverInfo: TruckDriverInfo = { DriverId: driverId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckDriverId: truckDriverInfo.DriverId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ResetDriverPassword(\n    driverId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Driver.ResetTruckDriverUserPassword;\n    const truckDriverInfo: TruckDriverInfo = { DriverId: driverId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckDriverId: truckDriverInfo.DriverId,\n    };\n    //#endregion\n\n    //#region Request\n    var response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockAPIUsernamePassword);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: {\n        Username: response.data?.UserShenaseh!,\n        Password: response.data?.UserPassword!,\n      },\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async SendWebsiteLink(\n    driverId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Driver.SendWebsiteLink;\n    const truckDriverInfo: TruckDriverInfo = { DriverId: driverId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckDriverId: truckDriverInfo.DriverId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Truck\n\n  public async GetTruckInfoFromAPI(\n    smartCardNo: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n    //#region Consts\n    const truckInfo: TruckInfo = {\n      TruckId: 0,\n      SmartCardNo: smartCardNo,\n    };\n    const localApiUrl =\n      API_ROUTES.TransportationAPI.Truck.GetTruckInfoFromLocalAPI;\n    const outdoorApiUrl =\n      API_ROUTES.TransportationAPI.Truck.GetTruckInfoFromOutdoorAPI;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SmartCardNo: truckInfo.SmartCardNo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    var response = await this.apiCommunicator.CommunicateWithAPI_Post(localApiUrl, bodyValue, mockTruckInfo);\n\n    if (!response.success) {\n      response = await this.apiCommunicator.CommunicateWithAPI_Post(outdoorApiUrl, bodyValue, mockTruckInfo);\n    }\n\n    return response;\n    //#endregion\n  }\n\n  public async GetTruckInfoForSoftwareUser(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Truck.GetTruckInfoForSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckInfo);\n    //#endregion\n  }\n\n  public async GetTruckNativeness(\n    truckId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Truck.GetTruckNativeness;\n    const truckInfo: TruckInfo = { TruckId: truckId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckNativenessInfo);\n    //#endregion\n  }\n\n  public async ChangeTruckNativeness(\n    truckId: number,\n    truckNativenessExpireDate: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Truck.ChangeTruckNativeness;\n    const truckInfo: TruckInfo = { TruckId: truckId };\n    const truckNativenessInfo: TruckNativenessInfo = {\n      TruckNativenessExpireDate: truckNativenessExpireDate,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n      TruckNativenessExpireDate: truckNativenessInfo.TruckNativenessExpireDate,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckNativenessInfo);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Relations of Driver, Truck, MoneyWallet\n\n  public async GetComposedTruckInfoWithLastActiveTurn(\n    truckId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Truck.ComposedInfos.GetComposedTruckInfo;\n    const truckInfo: TruckInfo = { TruckId: truckId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckComposedInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimComposedTruckInfo(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetComposedTruckInfoWithLastTurn(\n    truckId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Truck.ComposedInfos\n        .GetComposedTruckInfoForTurnIssues;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTruckComposedInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimComposedTruckInfo(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private TrimComposedTruckInfo(\n    response: TruckComposedInfo\n  ): TruckComposedInfo {\n    let turn = response.Turn;\n    if (turn) {\n      turn = {\n        TurnId: turn.TurnId,\n        TurnIssueDate: turn.TurnIssueDate?.trim(),\n        TurnIssueTime: turn.TurnIssueTime?.trim(),\n        TruckDriver: turn.TruckDriver?.trim(),\n        SoftwareUserName: turn.SoftwareUserName?.trim(),\n        BillOfLadingNumber: turn.BillOfLadingNumber?.trim(),\n        OtaghdarTurnNumber: turn.OtaghdarTurnNumber?.trim(),\n        TurnStatusTitle: turn.TurnStatusTitle?.trim(),\n        TurnStatusDescription: turn.TurnStatusDescription?.trim(),\n        DateOfLastChanged: turn.DateOfLastChanged?.trim(),\n        SequentialTurnTitle: turn.SequentialTurnTitle?.trim(),\n      };\n    }\n    return {\n      Truck: response.Truck,\n      TruckDriver: response?.TruckDriver,\n      MoneyWallet: response?.MoneyWallet,\n      Turn: turn,\n    };\n  }\n\n  public async SetComposedTruckInfo(\n    truckId: number,\n    driverId: number,\n    turnId: number,\n    moneyWalletId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Truck.ComposedInfos.SetComposedTruckInfo;\n    const truckComposedInfo: TruckComposedInfo = {\n      Truck: { TruckId: truckId },\n      TruckDriver: { DriverId: driverId },\n      Turn: { TurnId: turnId },\n      MoneyWallet: { MoneyWalletId: moneyWalletId },\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckComposedInfo.Truck.TruckId,\n      TruckDriverId: truckComposedInfo.TruckDriver?.DriverId,\n      TurnId: truckComposedInfo.Turn?.TurnId,\n      MoneyWalletId: truckComposedInfo.MoneyWallet?.MoneyWalletId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async GetVirtualWallet(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.SoftwareUserAPI.GetVirtualWallet;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWallet);\n    //#endregion\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmergencyTurnsFormComponent.html":{"url":"components/EmergencyTurnsFormComponent.html","title":"component - EmergencyTurnsFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmergencyTurnsFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-turns-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                                TurnsTruckInfoBaseFormComponent\n                                TextInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./emergency-turns-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./emergency-turns-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                emergencyTurnForm\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                turnManagementService\n                            \n                            \n                                    \n                                turnsBaseComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                            \n                                    Async\n                                submitEmergencyTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    truckId\n                                \n                                \n                                    sequentialTurnId\n                                \n                                \n                                    descriptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitEmergencyTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitEmergencyTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emergencyTurnForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    sequentialTurnId: ['', [Validators.required, Validators.min(0)]],\n    truckId: ['', [Validators.required, Validators.min(0)]],\n    descriptions: ['', ValidationSchema.description],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        turnManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        turnsBaseComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TurnsTruckInfoBaseFormComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TurnsTruckInfoBaseFormComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        truckId\n                    \n                \n\n                \n                    \n                        gettruckId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sequentialTurnId\n                    \n                \n\n                \n                    \n                        getsequentialTurnId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        descriptions\n                    \n                \n\n                \n                    \n                        getdescriptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component.ts:83\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, Input, ViewChild } from '@angular/core';\nimport { TurnsTruckInfoBaseFormComponent } from '../turns-truck-info-base-form/turns-truck-info-base-form.component';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { TurnManagementService } from 'app/services/turn-management/turn-management.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-real-time-turns-form',\n  imports: [ButtonModule, TurnsTruckInfoBaseFormComponent, TextInputComponent],\n  templateUrl: './emergency-turns-form.component.html',\n  styleUrl: './emergency-turns-form.component.scss',\n})\nexport class EmergencyTurnsFormComponent {\n  @ViewChild(TurnsTruckInfoBaseFormComponent)\n  turnsBaseComponent!: TurnsTruckInfoBaseFormComponent;\n\n  private loadingService = inject(LoadingService);\n  private turnManagementService = inject(TurnManagementService);\n  private destroy$ = new Subject();\n  private toast = inject(ToastService);\n  private fb = inject(FormBuilder);\n\n  emergencyTurnForm = this.fb.group({\n    sequentialTurnId: ['', [Validators.required, Validators.min(0)]],\n    truckId: ['', [Validators.required, Validators.min(0)]],\n    descriptions: ['', ValidationSchema.description],\n  });\n\n  loading = false;\n\n  // ♻️ Cleanup subscription`\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // 🚦 Listen to loading state on init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async submitEmergencyTurn() {\n    if (this.emergencyTurnForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.turnManagementService.EmergencyTurnRegister(\n        this.truckId.value,\n        this.sequentialTurnId.value,\n        this.descriptions.value\n      );\n      if (!checkAndToastError(response, this.toast)) return;\n      this.toast.success('موفق', response.data.Message);\n      this.resetForm();\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private resetForm() {\n    this.turnsBaseComponent.resetTurnsBaseForm();\n    this.emergencyTurnForm.reset({\n      truckId: '',\n      sequentialTurnId: '',\n      descriptions: '',\n    });\n  }\n\n  get truckId(): FormControl {\n    return this.emergencyTurnForm.get('truckId') as FormControl;\n  }\n  get sequentialTurnId(): FormControl {\n    return this.emergencyTurnForm.get('sequentialTurnId') as FormControl;\n  }\n\n  get descriptions(): FormControl {\n    return this.emergencyTurnForm.get('descriptions') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmergencyTurnsFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorsValidation.html":{"url":"interfaces/ErrorsValidation.html","title":"interface - ErrorsValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorsValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/constants/validation-schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxlength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minlength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxlength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxlength:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minlength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minlength:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Validators } from '@angular/forms';\n\nexport interface ErrorsValidation {\n  required?: any;\n  email?: any;\n  pattern?: any;\n  minlength?: any;\n  maxlength?: any;\n  min?: any;\n}\n\nexport function getDefaultErrorMessage(name: string, e: ErrorsValidation): string | null {\n  if (e.required) return `${name} الزامی است.`;\n  if (e.email) return `فرمت ${name} نامعتبر است.`;\n\n  if (e.minlength?.requiredLength && e.maxlength?.requiredLength &&\n    e.minlength.requiredLength === e.maxlength.requiredLength) {\n    return `${name} باید دقیقا ${e.minlength.requiredLength} رقم باشد.`;\n  }\n\n  if (e.minlength) return `${name} باید حداقل ${e.minlength.requiredLength} کاراکتر باشد.`;\n  if (e.maxlength) return `${name} باید حداکثر ${e.maxlength.requiredLength} کاراکتر باشد.`;\n\n  if (e.pattern) return `فرمت ${name} معتبر نیست.`;\n  if (e.min) return `${name} نمی‌تواند کمتر از مقدار مجاز باشد.`;\n\n  return null;\n}\n\nexport const ValidationSchema = {\n  mobile: {\n    name: 'شماره موبایل',\n    validators: [\n      Validators.required,\n      Validators.minLength(11),\n      Validators.maxLength(11),\n      Validators.pattern(/09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/),\n    ],\n  },\n  nationalId: {\n    name: 'کد ملی',\n    validators: [Validators.required, Validators.pattern(/^\\d{10}$/)],\n  },\n  email: {\n    name: 'ایمیل',\n    validators: [Validators.required, Validators.email],\n  },\n  fullName: {\n    name: 'نام کاربر',\n    validators: [Validators.required, Validators.minLength(3)],\n  },\n  username:{\n    name:'نام کابری',\n    validators:[\n      Validators.required,Validators.minLength(5)\n    ]\n  },\n  password:{\n    name:'رمز عبور',\n    validators:[\n      Validators.required,\n      Validators.minLength(1),\n    ]\n  },\n  captcha:{\n    name:'کپچا',\n    validators:[Validators.required]\n  },\n  id: {\n    name: 'شناسه',\n    validators: [Validators.required],\n  },\n  driverId: {\n    name: 'شناسه راننده',\n    validators: [Validators.required],\n  },\n  telephone: {\n    name: 'شماره تلفن',\n    validators: [Validators.required, Validators.pattern(/^0\\d{10}$/)],\n  },\n  address: {\n    name: 'آدرس',\n    validators: [Validators.required, Validators.minLength(5)],\n  },\n  title: {\n    name: 'عنوان',\n    validators: [Validators.required],\n  },\n  keyword:{\n    name:'کلمه کلیدی',\n    validators:[Validators.required]\n  },\n  managerName: {\n    name: 'نام مدیر',\n    validators: [Validators.required, Validators.minLength(3)],\n  },\n  fatherName: {\n    name: 'نام پدر',\n    validators: [Validators.required, Validators.minLength(3)],\n  },\n  wallet: {\n    name: 'کیف پول',\n    validators: [Validators.required],\n  },\n  walletId: {\n    name: 'شناسه کیف پول',\n    validators: [Validators.required],\n  },\n  licenseNumber: {\n    name: 'شماره گواهینامه',\n    validators: [\n      Validators.required,\n      Validators.minLength(10),\n      Validators.pattern(/^\\d{10}$/),\n    ],\n  },\n  serialNumber: {\n    name: 'شماره سریال',\n    validators: [Validators.required, Validators.pattern(/^\\d+$/)],\n  },\n  smartCard: {\n    name: 'شماره هوشمند',\n    validators: [Validators.required, Validators.pattern(/^\\d{7}$/)],\n  },\n  truckId: {\n    name: 'شناسه ناوگان',\n    validators: [Validators.required],\n  },\n  licensePlateNumber: {\n    name: 'شماره پلاک',\n    validators: [Validators.required],\n  },\n  turn: {\n    name: 'نوبت',\n    validators: [Validators.required],\n  },\n  turnId: {\n    name: 'شناسه نوبت',\n    validators: [Validators.required],\n  },\n  smsActive: {\n    name: 'فعال‌سازی پیامک',\n    validators: [Validators.required],\n  },\n  loaderType: {\n    name: 'نوع بارگیر',\n    validators: [Validators.required],\n  },\n  nativeness: {\n    name: 'بومی گری ناوگان',\n    validators: [Validators.required],\n  },\n  truckNativenessExpiredDate: {\n    name: 'تاریخ انقضای بومی‌گری',\n    validators: [\n      Validators.required,\n      Validators.pattern(/^(13|14)\\d{2}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])$/),\n    ],\n  },\n  announceDate: {\n    name: 'تاریخ ثبت بار',\n    validators: [Validators.required],\n  },\n  loadStatus: {\n    name: 'وضعیت بار',\n    validators: [Validators.required],\n  },\n  good: {\n    name: 'نوع بار',\n    validators: [Validators.required],\n  },\n  loadAnnouncementGroup: {\n    name: 'گروه اعلام بار',\n    validators: [Validators.required],\n  },\n  loadAnnouncementSubGroup: {\n    name: 'زیرگروه اعلام بار',\n    validators: [Validators.required],\n  },\n  sourceCity: {\n    name: 'شهر مبدا',\n    validators: [Validators.required],\n  },\n  targetCity: {\n    name: 'شهر مقصد',\n    validators: [Validators.required],\n  },\n  loadingPlace: {\n    name: 'محل بارگیری',\n    validators: [Validators.required],\n  },\n  dischargingPlace: {\n    name: 'محل تخلیه',\n    validators: [Validators.required],\n  },\n  transportCompany: {\n    name: 'شرکت حمل و نقل',\n    validators: [Validators.required],\n  },\n  totalNumber: {\n    name: 'تعداد',\n    validators: [Validators.required, Validators.min(1)],\n  },\n  tonaj: {\n    name: 'تناژ',\n    validators: [Validators.required, Validators.min(0.1)],\n  },\n  recipient: {\n    name: 'گیرنده',\n    validators: [Validators.required],\n  },\n  tariff: {\n    name: 'تعرفه',\n    validators: [Validators.required, Validators.min(1)],\n  },\n  description: {\n    name: 'توضیحات',\n    validators: [Validators.required, Validators.minLength(5)],\n  },\n  parentage:{\n    name:'درصد',\n    validators:[Validators.required,Validators.min(0.1)]\n  }\n};\n\nexport type ValidationField = keyof typeof ValidationSchema;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FPCInfo.html":{"url":"interfaces/FPCInfo.html","title":"interface - FPCInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FPCInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/fpc-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            EmailAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FPCAddress\n                                        \n                                \n                                \n                                        \n                                            FPCId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FPCManagerMobileNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FPCManagerNameFamily\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FPCTel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FPCTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EmailAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        EmailAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCManagerMobileNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCManagerMobileNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCManagerNameFamily\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCManagerNameFamily:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCTel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCTel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FPCTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FPCTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FPCInfo {\n  FPCId: number;\n  FPCTitle?: string;\n  FPCTel?: string;\n  FPCAddress?: string;\n  FPCManagerMobileNumber?: string;\n  FPCManagerNameFamily?: string;\n  EmailAddress?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                footerTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/footer/footer.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        footerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appTitles.footerTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/footer/footer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { appTitles } from 'app/constants/Titles';\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n})\nexport class FooterComponent {\n  footerTitle: string = appTitles.footerTitle;\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    {{ footerTitle }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ footerTitle }}  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordFormComponent.html":{"url":"components/ForgetPasswordFormComponent.html","title":"component - ForgetPasswordFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgetPasswordFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/forget-password-form/forget-password-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            ReactiveFormsModule\n                                TextInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forget-password-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forgetPasswordForm\n                            \n                            \n                                forgetPasswordTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    phone\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, toast: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/forms/forget-password-form/forget-password-form.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/forget-password-form/forget-password-form.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forgetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/forget-password-form/forget-password-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgetPasswordTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appTitles.appBrokenTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/forget-password-form/forget-password-form.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        phone\n                    \n                \n\n                \n                    \n                        getphone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/forget-password-form/forget-password-form.component.ts:45\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { appTitles } from 'app/constants/Titles';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { TextInputComponent } from \"../../shared/inputs/text-input/text-input.component\";\n\n@Component({\n  selector: 'app-forget-password-form',\n  imports: [ButtonModule,  ReactiveFormsModule, TextInputComponent],\n  templateUrl: './forget-password-form.component.html',\n  styleUrl: './forget-password-form.component.scss',\n})\nexport class ForgetPasswordFormComponent {\n  forgetPasswordForm: FormGroup;\n  forgetPasswordTitle: string = appTitles.appBrokenTitle;\n  onSubmit(): void {\n    if (this.forgetPasswordForm.valid) {\n      const isSuccess = Math.random() \n    \n\n    \n        \n  \n    \n\n    \n      شماره تلفنی که در سامانه برای شما ثبت شده است را وارد کنید و سپس منتظر\n      دریافت رمز خود از طریق سامانه پیامکی با سرشماره سامانه باشید.\n    \n  \n\n  \n\n  \n    \n      تایید\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                شماره تلفنی که در سامانه برای شما ثبت شده است را وارد کنید و سپس منتظر      دریافت رمز خود از طریق سامانه پیامکی با سرشماره سامانه باشید.                    تایید      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordPageComponent.html":{"url":"components/ForgetPasswordPageComponent.html","title":"component - ForgetPasswordPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgetPasswordPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/forget-password-page/forget-password-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password-page\n            \n\n\n            \n                imports\n                \n                                FullScreenBackgroundComponent\n                                FormCardComponent\n                                ForgetPasswordFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forget-password-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FullScreenBackgroundComponent } from \"app/components/shared/full-screen-background/full-screen-background.component\";\nimport { FormCardComponent } from \"app/components/shared/form-card/form-card.component\";\nimport { ForgetPasswordFormComponent } from \"app/components/forms/forget-password-form/forget-password-form.component\";\n\n@Component({\n  selector: 'app-forget-password-page',\n  imports: [FullScreenBackgroundComponent, FormCardComponent, ForgetPasswordFormComponent],\n  templateUrl: './forget-password-page.component.html',\n  styleUrl: './forget-password-page.component.scss'\n})\nexport class ForgetPasswordPageComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n \n   \n \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCardComponent.html":{"url":"components/FormCardComponent.html","title":"component - FormCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/form-card/form-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-card\n            \n\n\n            \n                imports\n                \n                            CardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardModule } from 'primeng/card';\n@Component({\n  selector: 'app-form-card',\n  imports: [CardModule],\n  templateUrl: './form-card.component.html',\n  styleUrl: './form-card.component.scss'\n})\n\nexport class FormCardComponent {\n\n}\n\n    \n\n    \n        \n\n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FpcManagementService.html":{"url":"injectables/FpcManagementService.html","title":"injectable - FpcManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FpcManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fpc-management/fpc-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ActivateFPCSms\n                            \n                            \n                                    Public\n                                    Async\n                                EditFPC\n                            \n                            \n                                    Public\n                                    Async\n                                FPCChangeActiveStatus\n                            \n                            \n                                    Public\n                                    Async\n                                FPCRegistering\n                            \n                            \n                                    Public\n                                    Async\n                                GetFPCInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetFPCsInfo\n                            \n                            \n                                    Public\n                                    Async\n                                ResetFPCUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ActivateFPCSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    ActivateFPCSms(fpcId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fpcId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditFPC\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditFPC(rawFPCInfo: FPCInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rawFPCInfo\n                                            \n                                                            FPCInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        FPCChangeActiveStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    FPCChangeActiveStatus(fpcId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fpcId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        FPCRegistering\n                        \n                    \n                \n            \n            \n                \n                        \n                    FPCRegistering(rawFPCInfo: FPCInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rawFPCInfo\n                                            \n                                                            FPCInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetFPCInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetFPCInfo(fpcId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fpcId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetFPCsInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetFPCsInfo(fpcNameToSearch: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fpcNameToSearch\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ResetFPCUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResetFPCUserPassword(fpcId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fpc-management/fpc-management.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fpcId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fpc-management/fpc-management.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fpc-management/fpc-management.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { FPCInfo } from 'app/data/model/fpc-info.model';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { mockFPCsInfo } from 'app/data/mock/fpc-info.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport {\n  APIUsernamePassword,\n  UsernamePassword,\n} from 'app/data/model/username-password.model';\nimport { mockAPIUsernamePassword } from 'app/data/mock/username-password.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FpcManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetFPCsInfo(\n    fpcNameToSearch: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.GetFPCs;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: fpcNameToSearch,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockFPCsInfo);\n    //#endregion\n  }\n\n  public async GetFPCInfo(fpcId: number): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.GetFPC;\n    const fpcInfo: FPCInfo = { FPCId: fpcId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      FPCId: fpcInfo.FPCId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockFPCsInfo[0]);\n    //#endregion\n  }\n\n  public async FPCRegistering(\n    rawFPCInfo: FPCInfo\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.FPCRegistering;\n    const fpcInfo: FPCInfo = rawFPCInfo;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawFPC: fpcInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditFPC(\n    rawFPCInfo: FPCInfo\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.EditFPC;\n    const fpcInfo: FPCInfo = rawFPCInfo;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawFPC: fpcInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ActivateFPCSms(\n    fpcId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.ActivateFPCSmsOwner;\n    const fpcInfo: FPCInfo = { FPCId: fpcId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      FPCId: fpcInfo.FPCId,\n    };\n    //#endregion\n\n    //#region  Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ResetFPCUserPassword(\n    fpcId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.ResetFPCUserPassword;\n    const fpcInfo: FPCInfo = { FPCId: fpcId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      FPCId: fpcInfo.FPCId,\n    };\n    //#endregion\n\n    //#region  Request\n    var response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockAPIUsernamePassword);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: {\n        Username: response.data?.UserShenaseh!,\n        Password: response.data?.UserPassword!,\n      },\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async FPCChangeActiveStatus(\n    fpcId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.FPC.FPCChangeActiveStatus;\n    const fpcInfo: FPCInfo = { FPCId: fpcId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      FPCId: fpcInfo.FPCId,\n    };\n    //#endregion\n\n    //#region  Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullScreenBackgroundComponent.html":{"url":"components/FullScreenBackgroundComponent.html","title":"component - FullScreenBackgroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FullScreenBackgroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/full-screen-background/full-screen-background.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-full-screen-background\n            \n\n\n            \n                imports\n                \n                            NgStyle\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./full-screen-background.component.html\n            \n\n\n\n            \n                styleUrl\n                ./full-screen-background.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundPosition\n                            \n                            \n                                backgroundSize\n                            \n                            \n                                blur\n                            \n                            \n                                imageUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backgroundPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"center\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/full-screen-background/full-screen-background.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        backgroundSize\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"cover\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/full-screen-background/full-screen-background.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/full-screen-background/full-screen-background.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imageUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'background_form_login.webp'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/full-screen-background/full-screen-background.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { NgStyle } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-full-screen-background',\n  imports: [NgStyle],\n  templateUrl: './full-screen-background.component.html',\n  styleUrl: './full-screen-background.component.scss'\n})\nexport class FullScreenBackgroundComponent {\n  @Input() imageUrl: string = 'background_form_login.webp';\n  @Input() backgroundSize:string = \"cover\";\n  @Input() backgroundPosition :string = \"center\";\n  @Input() blur: number = 0;\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FullScreenBackgroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headerData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headerData\n                    \n                \n                \n                    \n                        Type :         HeaderData\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: \"عنوان صفحه\",\n    icon: 'pi-user'\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/header/header.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openSidebar\n                        \n                    \n                \n            \n            \n                \nopenSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { HeaderData } from 'app/data/model/header-data.model';\nimport {openSidebar} from 'app/store/sidebar/sidebar.actions';\nimport { ButtonModule } from 'primeng/button';\n@Component({\n  selector: 'app-header',\n  imports: [ButtonModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  @Input() headerData: HeaderData = {\n    title: \"عنوان صفحه\",\n    icon: 'pi-user'\n  }\n  constructor(private store:Store) {\n\n  }\n\n  openSidebar() {\n    this.store.dispatch(openSidebar())\n  }\n}\n\n    \n\n    \n        \n  \n      \n  \n  \n      {{headerData.title}}\n      \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{headerData.title}}        '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderData.html":{"url":"interfaces/HeaderData.html","title":"interface - HeaderData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HeaderData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/header-data.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HeaderData {\n  title:string,\n  icon:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            PanelModule\n                            AnimateOnScroll\n                                TerminalCardComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allLoadAnnouncementPlaces\n                            \n                            \n                                currentSearchTerm\n                            \n                            \n                                displayedLoadAnnouncementPlaces\n                            \n                            \n                                filterAnnouncementPlaces\n                            \n                            \n                                headerTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSearch\n                            \n                            \n                                    Async\n                                initializeLoadAnnouncementPlaces\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(lap: LoadAnnouncementPlacesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home-page.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lap\n                                                  \n                                                        \n                                                                        LoadAnnouncementPlacesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSearch\n                        \n                    \n                \n            \n            \n                \nhandleSearch(result: LoadAnnouncementPlace[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            LoadAnnouncementPlace[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializeLoadAnnouncementPlaces\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeLoadAnnouncementPlaces()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home-page.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home-page.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allLoadAnnouncementPlaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadAnnouncementPlace[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSearchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedLoadAnnouncementPlaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadAnnouncementPlace[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterAnnouncementPlaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appTitles.appOnLineTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoadAnnouncementPlace } from 'app/data/model/load-announcement-place.model';\nimport { AnimateOnScroll } from 'primeng/animateonscroll';\nimport { TerminalCardComponent } from 'app/components/shared/terminal-card/terminal-card.component';\nimport { ButtonModule } from 'primeng/button';\nimport { SearchInputComponent } from '../../components/shared/inputs/search-input/search-input.component';\nimport { CommonModule } from '@angular/common';\nimport { PanelModule } from 'primeng/panel';\nimport { appTitles } from 'app/constants/Titles';\nimport { LoadAnnouncementPlacesService } from 'app/services/LoadAnnouncementPlaces/load-announcement-places.service';\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    PanelModule,\n    AnimateOnScroll,\n    TerminalCardComponent,\n    SearchInputComponent,\n  ],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss',\n})\nexport class HomePageComponent implements OnInit {\n  allLoadAnnouncementPlaces: LoadAnnouncementPlace[] = [];\n  displayedLoadAnnouncementPlaces: LoadAnnouncementPlace[] = [];\n\n  currentSearchTerm: string = '';\n  headerTitle: string = appTitles.appOnLineTitle;\n\n  constructor(private lap: LoadAnnouncementPlacesService) {}\n\n  async ngOnInit(): Promise {\n    await this.initializeLoadAnnouncementPlaces();\n  }\n\n  async initializeLoadAnnouncementPlaces() {\n    const terminals = await this.lap.getLoadAnnouncementPlaces();\n    this.allLoadAnnouncementPlaces = terminals.data!;\n    this.displayedLoadAnnouncementPlaces = this.allLoadAnnouncementPlaces;\n  }\n\n  filterAnnouncementPlaces = (\n    announcementPlace: LoadAnnouncementPlace,\n    query: string\n  ) =>\n    announcementPlace.LAPTitle.includes(query) ||\n    announcementPlace.Description.includes(query);\n\n  handleSearch(result: LoadAnnouncementPlace[]): void {\n    this.displayedLoadAnnouncementPlaces = result;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ headerTitle }}\n    \n  \n\n  \n    \n      \n    \n  \n\n\n\n  @for (terminal of displayedLoadAnnouncementPlaces; track $index) {\n  \n    \n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ headerTitle }}                          @for (terminal of displayedLoadAnnouncementPlaces; track $index) {          }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LADPlace.html":{"url":"interfaces/LADPlace.html","title":"interface - LADPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LADPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/lad-place.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DischargingActive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LADPlaceAddress\n                                        \n                                \n                                \n                                        \n                                            LADPlaceId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LADPlaceTel\n                                        \n                                \n                                \n                                        \n                                            LADPlaceTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoadingActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DischargingActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DischargingActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LADPlaceAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LADPlaceAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LADPlaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LADPlaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LADPlaceTel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LADPlaceTel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LADPlaceTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LADPlaceTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadingActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadingActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LADPlace {\n  LADPlaceId: number;\n  LADPlaceTitle: string;\n  LADPlaceTel?: string;\n  LADPlaceAddress?: string;\n  LoadingActive?: boolean;\n  DischargingActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LADPlaceManagementService.html":{"url":"injectables/LADPlaceManagementService.html","title":"injectable - LADPlaceManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LADPlaceManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/lad-place-management/lad-place-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeDischargingPlaceStatus\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeLoadingPlaceStatus\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteLADPlace\n                            \n                            \n                                    Public\n                                    Async\n                                GetLADPlace\n                            \n                            \n                                    Public\n                                    Async\n                                GetLADPlaces\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewLADPlace\n                            \n                            \n                                    Public\n                                    Async\n                                UpdateLADPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeDischargingPlaceStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeDischargingPlaceStatus(ladPlaceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ladPlaceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeLoadingPlaceStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeLoadingPlaceStatus(ladPlaceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ladPlaceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteLADPlace\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteLADPlace(ladPlaceId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ladPlaceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLADPlace\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLADPlace(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLADPlaces\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLADPlaces(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewLADPlace\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewLADPlace(ladPlaceInfo: LADPlace)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ladPlaceInfo\n                                            \n                                                            LADPlace\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        UpdateLADPlace\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateLADPlace(ladPlaceInfo: LADPlace)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/lad-place-management/lad-place-management.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ladPlaceInfo\n                                            \n                                                            LADPlace\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/lad-place-management/lad-place-management.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/lad-place-management/lad-place-management.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { LADPlace } from 'app/data/model/lad-place.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockLADPlaces } from 'app/data/mock/lad-place.mock';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LADPlaceManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetLADPlaces(title: string): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LADPlaces.GetLADPlaces;\n    const ladPlaceInfo: LADPlace = {\n      LADPlaceId: 0,\n      LADPlaceTitle: title,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: ladPlaceInfo.LADPlaceTitle,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLADPlaces);\n    //#endregion\n  }\n\n  public async GetLADPlace(id: number): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LADPlaces.GetLADPlace;\n    const ladPlaceInfo: LADPlace = {\n      LADPlaceId: id,\n      LADPlaceTitle: '',\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LADPlaceId: ladPlaceInfo.LADPlaceId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLADPlaces[0]);\n    //#endregion\n  }\n\n  public async RegisterNewLADPlace(\n    ladPlaceInfo: LADPlace\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LADPlaces.RegisterLADPlace;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawLADPlaceInf: ladPlaceInfo,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLADPlaces[0].LADPlaceId);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: {\n        LADPlaceId: response.data?.LADPlaceId ?? 0,\n        LADPlaceTitle: '',\n      },\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async UpdateLADPlace(\n    ladPlaceInfo: LADPlace\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LADPlaces.UpdateLADPlace;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawLADPlaceInf: ladPlaceInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteLADPlace(\n    ladPlaceId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LADPlaces.DeleteLADPlace;\n    const ladPlaceInfo: LADPlace = {\n      LADPlaceId: ladPlaceId,\n      LADPlaceTitle: '',\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LADPlaceId: ladPlaceInfo.LADPlaceId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeLoadingPlaceStatus(\n    ladPlaceId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.LADPlaces.ChangeLoadingPlaceStatus;\n    const ladPlaceInfo: LADPlace = {\n      LADPlaceId: ladPlaceId,\n      LADPlaceTitle: '',\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LADPlaceId: ladPlaceInfo.LADPlaceId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeDischargingPlaceStatus(\n    ladPlaceId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.LADPlaces.ChangeDischargingPlaceStatus;\n    const ladPlaceInfo: LADPlace = {\n      LADPlaceId: ladPlaceId,\n      LADPlaceTitle: '',\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LADPlaceId: ladPlaceInfo.LADPlaceId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoadAnnouncementPlace.html":{"url":"interfaces/LoadAnnouncementPlace.html","title":"interface - LoadAnnouncementPlace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoadAnnouncementPlace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/load-announcement-place.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            LAPIconName\n                                        \n                                \n                                \n                                        \n                                            LAPTitle\n                                        \n                                \n                                \n                                        \n                                            LAPURL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LAPIconName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LAPIconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LAPTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LAPTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LAPURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LAPURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoadAnnouncementPlace {\n  LAPTitle: string;\n  LAPIconName: string;\n  LAPURL: string;\n  Description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadAnnouncementPlacesService.html":{"url":"injectables/LoadAnnouncementPlacesService.html","title":"injectable - LoadAnnouncementPlacesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadAnnouncementPlacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/LoadAnnouncementPlaces/load-announcement-places.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getLoadAnnouncementPlaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getLoadAnnouncementPlaces\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoadAnnouncementPlaces()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/LoadAnnouncementPlaces/load-announcement-places.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/LoadAnnouncementPlaces/load-announcement-places.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockCargoTerminals } from 'app/data/mock/cargo-terminal.mock';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { LoadAnnouncementPlace } from 'app/data/model/load-announcement-place.model';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadAnnouncementPlacesService {\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async getLoadAnnouncementPlaces(): Promise\n  > {\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Driver.LoadAnnouncementPlaces;\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Get(apiUrl, mockCargoTerminals);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadCapacitorFormComponent.html":{"url":"components/LoadCapacitorFormComponent.html","title":"component - LoadCapacitorFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadCapacitorFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-load-capacitor-form\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                TextInputComponent\n                            ButtonModule\n                            TableModule\n                            Checkbox\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./load-capacitor-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./load-capacitor-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                capacitorForm\n                            \n                            \n                                    Private\n                                capacitorService\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                ptpFormArray\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createPTPGroup\n                            \n                            \n                                editOrRegister\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                    Async\n                                loadCapacitorForm\n                            \n                            \n                                    Private\n                                populateCapacitorForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    barcode\n                                \n                                \n                                    announceDate\n                                \n                                \n                                    loadStatusId\n                                \n                                \n                                    loadStatusTitle\n                                \n                                \n                                    goodId\n                                \n                                \n                                    goodTitle\n                                \n                                \n                                    loadAnnouncementGroupId\n                                \n                                \n                                    loadAnnouncementGroupTitle\n                                \n                                \n                                    loadAnnouncementSubGroupId\n                                \n                                \n                                    loadAnnouncementSubGroupTitle\n                                \n                                \n                                    sourceCityId\n                                \n                                \n                                    sourceCityTitle\n                                \n                                \n                                    targetCityId\n                                \n                                \n                                    targetCityTitle\n                                \n                                \n                                    loadingPlaceId\n                                \n                                \n                                    loadingPlaceTitle\n                                \n                                \n                                    dischargingPlaceId\n                                \n                                \n                                    dischargingPlaceTitle\n                                \n                                \n                                    transportCompanyId\n                                \n                                \n                                    transportCompanyTitle\n                                \n                                \n                                    totalNumber\n                                \n                                \n                                    tonaj\n                                \n                                \n                                    recipient\n                                \n                                \n                                    tarrif\n                                \n                                \n                                    address\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createPTPGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPTPGroup(item: PTPInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            PTPInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editOrRegister\n                        \n                    \n                \n            \n            \n                \neditOrRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadCapacitorForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCapacitorForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateCapacitorForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateCapacitorForm(load: LoadInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                load\n                                            \n                                                            LoadInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '9rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capacitorForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    announceDate: ['',ValidationSchema.announceDate], // زمان ثبت بار\n\n    // وضعیت نهایی بار\n    loadStatusId: [0,ValidationSchema.id],\n    loadStatusTitle: [''],\n\n    // نوع بار\n    goodId: [0,ValidationSchema.id],\n    goodTitle: ['',ValidationSchema.good],\n\n    // گروه اعلام بار\n    loadAnnouncementGroupId: [0,ValidationSchema.id],\n    loadAnnouncementGroupTitle: ['',ValidationSchema.loadAnnouncementGroup],\n\n    // زیر گروه اعلام بار\n    loadAnnouncementSubGroupId: [0],\n    loadAnnouncementSubGroupTitle: ['',ValidationSchema.loadAnnouncementSubGroup],\n\n    // شهر مبدا\n    sourceCityId: [0,ValidationSchema.id],\n    sourceCityTitle: ['',ValidationSchema.sourceCity],\n\n    // شهر مقصد\n    targetCityId: [0,ValidationSchema.id],\n    targetCityTitle: ['',ValidationSchema.targetCity],\n\n    // مبدا بارگیری,\n    loadingPlaceId: [0,ValidationSchema.id],\n    loadingPlaceTitle: ['',ValidationSchema.loadingPlace],\n\n    // مقصد تخلیه\n    dischargingPlaceId: [0,ValidationSchema.id],\n    dischargingPlaceTitle: ['',ValidationSchema.dischargingPlace],\n\n    // شرکت اعلام کننده بار\n    transportCompanyId: [0,ValidationSchema.id],\n    transportCompanyTitle: ['',ValidationSchema.transportCompany],\n\n    // تعداد، تناژ، گیرنده، تعرفه\n    totalNumber: [0,ValidationSchema.totalNumber],\n    tonaj: [0,ValidationSchema.tonaj],\n    recipient: ['',ValidationSchema.recipient],\n    tarrif: [0,ValidationSchema.tariff],\n\n    // آدرس و توضیحات\n    address: ['',ValidationSchema.address],\n    description: ['',ValidationSchema.description],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        capacitorService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadCapacitorManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ptpFormArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                \n                    \n                        Default value : this.fb.array([])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    barcode: ['', ValidationSchema.id], // کدبار\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        barcode\n                    \n                \n\n                \n                    \n                        getbarcode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:170\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        announceDate\n                    \n                \n\n                \n                    \n                        getannounceDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:174\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadStatusId\n                    \n                \n\n                \n                    \n                        getloadStatusId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:178\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadStatusTitle\n                    \n                \n\n                \n                    \n                        getloadStatusTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:181\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        goodId\n                    \n                \n\n                \n                    \n                        getgoodId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        goodTitle\n                    \n                \n\n                \n                    \n                        getgoodTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:188\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadAnnouncementGroupId\n                    \n                \n\n                \n                    \n                        getloadAnnouncementGroupId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:192\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadAnnouncementGroupTitle\n                    \n                \n\n                \n                    \n                        getloadAnnouncementGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:195\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadAnnouncementSubGroupId\n                    \n                \n\n                \n                    \n                        getloadAnnouncementSubGroupId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:199\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadAnnouncementSubGroupTitle\n                    \n                \n\n                \n                    \n                        getloadAnnouncementSubGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:203\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sourceCityId\n                    \n                \n\n                \n                    \n                        getsourceCityId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:209\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sourceCityTitle\n                    \n                \n\n                \n                    \n                        getsourceCityTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        targetCityId\n                    \n                \n\n                \n                    \n                        gettargetCityId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:216\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        targetCityTitle\n                    \n                \n\n                \n                    \n                        gettargetCityTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:219\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadingPlaceId\n                    \n                \n\n                \n                    \n                        getloadingPlaceId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:223\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadingPlaceTitle\n                    \n                \n\n                \n                    \n                        getloadingPlaceTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:226\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dischargingPlaceId\n                    \n                \n\n                \n                    \n                        getdischargingPlaceId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:230\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dischargingPlaceTitle\n                    \n                \n\n                \n                    \n                        getdischargingPlaceTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:233\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transportCompanyId\n                    \n                \n\n                \n                    \n                        gettransportCompanyId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:237\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transportCompanyTitle\n                    \n                \n\n                \n                    \n                        gettransportCompanyTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:240\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalNumber\n                    \n                \n\n                \n                    \n                        gettotalNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:244\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tonaj\n                    \n                \n\n                \n                    \n                        gettonaj()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:247\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        recipient\n                    \n                \n\n                \n                    \n                        getrecipient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:250\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tarrif\n                    \n                \n\n                \n                    \n                        gettarrif()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:253\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:257\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/load-capacitor-form/load-capacitor-form.component.ts:260\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { LoadInfo } from 'app/data/model/load-info.model';\nimport { PTPInfo } from 'app/data/model/ptp-info-model';\nimport { LoadCapacitorManagementService } from 'app/services/load-capacitor-management/load-capacitor-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ButtonModule } from 'primeng/button';\nimport { Checkbox } from 'primeng/checkbox';\nimport { TableModule } from 'primeng/table';\n\n@Component({\n  selector: 'app-load-capacitor-form',\n  imports: [ ReactiveFormsModule,CommonModule, TextInputComponent, ButtonModule, TableModule, Checkbox],\n  templateUrl: './load-capacitor-form.component.html',\n  styleUrl: './load-capacitor-form.component.scss',\n})\nexport class LoadCapacitorFormComponent {\n  private fb = inject(FormBuilder);\n  private capacitorService = inject(LoadCapacitorManagementService);\n  private toast = inject(ToastService);\n\n  addonWidth = '9rem';\n  searchForm = this.fb.group({\n    barcode: ['', ValidationSchema.id], // کدبار\n  });\n\n  ptpFormArray: FormArray = this.fb.array([]);\n\n  capacitorForm = this.fb.group({\n    announceDate: ['',ValidationSchema.announceDate], // زمان ثبت بار\n\n    // وضعیت نهایی بار\n    loadStatusId: [0,ValidationSchema.id],\n    loadStatusTitle: [''],\n\n    // نوع بار\n    goodId: [0,ValidationSchema.id],\n    goodTitle: ['',ValidationSchema.good],\n\n    // گروه اعلام بار\n    loadAnnouncementGroupId: [0,ValidationSchema.id],\n    loadAnnouncementGroupTitle: ['',ValidationSchema.loadAnnouncementGroup],\n\n    // زیر گروه اعلام بار\n    loadAnnouncementSubGroupId: [0],\n    loadAnnouncementSubGroupTitle: ['',ValidationSchema.loadAnnouncementSubGroup],\n\n    // شهر مبدا\n    sourceCityId: [0,ValidationSchema.id],\n    sourceCityTitle: ['',ValidationSchema.sourceCity],\n\n    // شهر مقصد\n    targetCityId: [0,ValidationSchema.id],\n    targetCityTitle: ['',ValidationSchema.targetCity],\n\n    // مبدا بارگیری,\n    loadingPlaceId: [0,ValidationSchema.id],\n    loadingPlaceTitle: ['',ValidationSchema.loadingPlace],\n\n    // مقصد تخلیه\n    dischargingPlaceId: [0,ValidationSchema.id],\n    dischargingPlaceTitle: ['',ValidationSchema.dischargingPlace],\n\n    // شرکت اعلام کننده بار\n    transportCompanyId: [0,ValidationSchema.id],\n    transportCompanyTitle: ['',ValidationSchema.transportCompany],\n\n    // تعداد، تناژ، گیرنده، تعرفه\n    totalNumber: [0,ValidationSchema.totalNumber],\n    tonaj: [0,ValidationSchema.tonaj],\n    recipient: ['',ValidationSchema.recipient],\n    tarrif: [0,ValidationSchema.tariff],\n\n    // آدرس و توضیحات\n    address: ['',ValidationSchema.address],\n    description: ['',ValidationSchema.description],\n  });\n  loading: any;\n\n  async loadCapacitorForm(): Promise {\n    if (this.searchForm.invalid) return;\n    const response = await this.capacitorService.GetLoad(this.barcode.value);\n    if (!this.isSuccessful(response)) return;\n    this.populateCapacitorForm(response.data!);\n\n    this.ptpFormArray.clear();\n    response.data?.TPTParams.map((params) => {\n      this.ptpFormArray.push(this.createPTPGroup(params));\n    });\n  }\n\n\n  editOrRegister() {\n    this.toast.info(\"اطلاعیه\",'در دست توسعه');\n  }\n\n  private populateCapacitorForm(load: LoadInfo): void {\n    this.capacitorForm.setValue({\n      announceDate: load.AnnounceDate,\n\n      loadStatusId: load.LoadStatusId,\n      loadStatusTitle: load.LoadStatusTitle,\n\n      goodId: load.GoodId,\n      goodTitle: load.GoodTitle,\n\n      loadAnnouncementGroupId: load.LoadAnnouncementGroupId,\n      loadAnnouncementGroupTitle: load.LoadAnnouncementGroupTitle,\n\n      loadAnnouncementSubGroupId: load.LoadAnnouncementSubGroupId,\n      loadAnnouncementSubGroupTitle: load.LoadAnnouncementSubGroupTitle,\n\n      sourceCityId: load.SourceCityId,\n      sourceCityTitle: load.SourceCityTitle,\n\n      targetCityId: load.TargetCityId,\n      targetCityTitle: load.TargetCityTitle,\n\n      loadingPlaceId: load.LoadingPlaceId,\n      loadingPlaceTitle: load.LoadingPlaceTitle,\n\n      dischargingPlaceId: load.DischargingPlaceId,\n      dischargingPlaceTitle: load.DischargingPlaceTitle,\n\n      transportCompanyId: load.TransportCompanyId,\n      transportCompanyTitle: load.TransportCompanyTitle,\n\n      totalNumber: load.TotalNumber,\n      tonaj: load.Tonaj,\n      recipient: load.Recipient,\n      tarrif: load.Tarrif,\n\n      address: load.Address,\n      description: load.Description,\n    });\n  }\n\n  private createPTPGroup(item: PTPInfo): FormGroup {\n    return this.fb.group({\n      TPTPDId: [item.TPTPDId],\n      TPTPTitle: [item.TPTPTitle],\n      Cost: [item.Cost, [Validators.required]],\n      Checked: [item.Checked],\n    });\n  }\n\n\n  private isSuccessful(response: ApiResponse): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  get barcode(): FormControl {\n    return this.searchForm.get('barcode') as FormControl;\n  }\n\n  get announceDate(): FormControl {\n    return this.capacitorForm.get('announceDate') as FormControl;\n  }\n\n  get loadStatusId(): FormControl {\n    return this.capacitorForm.get('loadStatusId') as FormControl;\n  }\n  get loadStatusTitle(): FormControl {\n    return this.capacitorForm.get('loadStatusTitle') as FormControl;\n  }\n\n  get goodId(): FormControl {\n    return this.capacitorForm.get('goodId') as FormControl;\n  }\n  get goodTitle(): FormControl {\n    return this.capacitorForm.get('goodTitle') as FormControl;\n  }\n\n  get loadAnnouncementGroupId(): FormControl {\n    return this.capacitorForm.get('loadAnnouncementGroupId') as FormControl;\n  }\n  get loadAnnouncementGroupTitle(): FormControl {\n    return this.capacitorForm.get('loadAnnouncementGroupTitle') as FormControl;\n  }\n\n  get loadAnnouncementSubGroupId(): FormControl {\n    return this.capacitorForm.get('loadAnnouncementSubGroupId') as FormControl;\n  }\n\n  get loadAnnouncementSubGroupTitle(): FormControl {\n    return this.capacitorForm.get(\n      'loadAnnouncementSubGroupTitle'\n    ) as FormControl;\n  }\n\n  get sourceCityId(): FormControl {\n    return this.capacitorForm.get('sourceCityId') as FormControl;\n  }\n  get sourceCityTitle(): FormControl {\n    return this.capacitorForm.get('sourceCityTitle') as FormControl;\n  }\n\n  get targetCityId(): FormControl {\n    return this.capacitorForm.get('targetCityId') as FormControl;\n  }\n  get targetCityTitle(): FormControl {\n    return this.capacitorForm.get('targetCityTitle') as FormControl;\n  }\n\n  get loadingPlaceId(): FormControl {\n    return this.capacitorForm.get('loadingPlaceId') as FormControl;\n  }\n  get loadingPlaceTitle(): FormControl {\n    return this.capacitorForm.get('loadingPlaceTitle') as FormControl;\n  }\n\n  get dischargingPlaceId(): FormControl {\n    return this.capacitorForm.get('dischargingPlaceId') as FormControl;\n  }\n  get dischargingPlaceTitle(): FormControl {\n    return this.capacitorForm.get('dischargingPlaceTitle') as FormControl;\n  }\n\n  get transportCompanyId(): FormControl {\n    return this.capacitorForm.get('transportCompanyId') as FormControl;\n  }\n  get transportCompanyTitle(): FormControl {\n    return this.capacitorForm.get('transportCompanyTitle') as FormControl;\n  }\n\n  get totalNumber(): FormControl {\n    return this.capacitorForm.get('totalNumber') as FormControl;\n  }\n  get tonaj(): FormControl {\n    return this.capacitorForm.get('tonaj') as FormControl;\n  }\n  get recipient(): FormControl {\n    return this.capacitorForm.get('recipient') as FormControl;\n  }\n  get tarrif(): FormControl {\n    return this.capacitorForm.get('tarrif') as FormControl;\n  }\n\n  get address(): FormControl {\n    return this.capacitorForm.get('address') as FormControl;\n  }\n  get description(): FormControl {\n    return this.capacitorForm.get('description') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n  @if (loading) {\n  \n    \n    \n  \n  }\n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n      \n\n      \n      \n    \n\n    \n      \n\n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n      \n      \n      \n    \n\n    \n      \n      \n    \n\n    پارامترهای موثر\n    \n      \n        \n          \n            \n            \n              \n              {{ control.get(\"TPTPDId\")?.value }}\n            \n          \n          {{ control.get(\"TPTPTitle\")?.value }}\n          \n            {{ control.get(\"Cost\")?.value | number : \"1.0-0\" }}\n          \n        \n      \n    \n\n    \n    \n      \n\n      \n\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (loading) {              }                                                                                                                                                                                                                                پارامترهای موثر                                                                                {{ control.get(\"TPTPDId\")?.value }}                                {{ control.get(\"TPTPTitle\")?.value }}                      {{ control.get(\"Cost\")?.value | number : \"1.0-0\" }}                                                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadCapacitorFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadCapacitorManagementService.html":{"url":"injectables/LoadCapacitorManagementService.html","title":"injectable - LoadCapacitorManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadCapacitorManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/load-capacitor-management/load-capacitor-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLoad\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLoad(loadId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/load-capacitor-management/load-capacitor-management.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loadId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/load-capacitor-management/load-capacitor-management.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/load-capacitor-management/load-capacitor-management.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { LoadInfo } from 'app/data/model/load-info.model';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { mockLoadInfo } from 'app/data/mock/load-info.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadCapacitorManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetLoad(loadId: number): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LoadCapacitor.GetLoad;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LoadId: loadId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLoadInfo);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoadInfo.html":{"url":"interfaces/LoadInfo.html","title":"interface - LoadInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoadInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/load-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Address\n                                        \n                                \n                                \n                                        \n                                            AnnounceDate\n                                        \n                                \n                                \n                                        \n                                            AnnounceTime\n                                        \n                                \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            DischargingPlaceId\n                                        \n                                \n                                \n                                        \n                                            DischargingPlaceTitle\n                                        \n                                \n                                \n                                        \n                                            GoodId\n                                        \n                                \n                                \n                                        \n                                            GoodTitle\n                                        \n                                \n                                \n                                        \n                                            LoadAnnouncementGroupId\n                                        \n                                \n                                \n                                        \n                                            LoadAnnouncementGroupTitle\n                                        \n                                \n                                \n                                        \n                                            LoadAnnouncementSubGroupId\n                                        \n                                \n                                \n                                        \n                                            LoadAnnouncementSubGroupTitle\n                                        \n                                \n                                \n                                        \n                                            LoadId\n                                        \n                                \n                                \n                                        \n                                            LoadingPlaceId\n                                        \n                                \n                                \n                                        \n                                            LoadingPlaceTitle\n                                        \n                                \n                                \n                                        \n                                            LoadStatusId\n                                        \n                                \n                                \n                                        \n                                            LoadStatusTitle\n                                        \n                                \n                                \n                                        \n                                            Recipient\n                                        \n                                \n                                \n                                        \n                                            SourceCityId\n                                        \n                                \n                                \n                                        \n                                            SourceCityTitle\n                                        \n                                \n                                \n                                        \n                                            TargetCityId\n                                        \n                                \n                                \n                                        \n                                            TargetCityTitle\n                                        \n                                \n                                \n                                        \n                                            Tarrif\n                                        \n                                \n                                \n                                        \n                                            Tonaj\n                                        \n                                \n                                \n                                        \n                                            TotalNumber\n                                        \n                                \n                                \n                                        \n                                            TPTParams\n                                        \n                                \n                                \n                                        \n                                            TransportCompanyId\n                                        \n                                \n                                \n                                        \n                                            TransportCompanyTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnounceDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnounceDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnounceTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnounceTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DischargingPlaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DischargingPlaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DischargingPlaceTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DischargingPlaceTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GoodId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GoodId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GoodTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GoodTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadAnnouncementGroupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadAnnouncementGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadAnnouncementGroupTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadAnnouncementGroupTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadAnnouncementSubGroupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadAnnouncementSubGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadAnnouncementSubGroupTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadAnnouncementSubGroupTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadingPlaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadingPlaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadingPlaceTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadingPlaceTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadStatusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadStatusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoadStatusTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoadStatusTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Recipient\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Recipient:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tarrif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tarrif:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tonaj\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tonaj:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TotalNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TotalNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TPTParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TPTParams:         PTPInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PTPInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransportCompanyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransportCompanyId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransportCompanyTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransportCompanyTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PTPInfo } from './ptp-info-model';\n\nexport interface LoadInfo {\n  LoadId: number; // کد بار\n  AnnounceDate: string; // تاریخ ثبت بار\n  AnnounceTime: string; // ساعت ثبت بار\n  TransportCompanyId: number; // کد شرکت اعلام کننده بار\n  TransportCompanyTitle: string; // عنوان شرکت اعلام کننده بار\n  GoodId: number; // کد کالا\n  GoodTitle: string; // عنوان کالا\n  LoadAnnouncementGroupId: number; // کد گروه اعلام بار\n  LoadAnnouncementGroupTitle: string; // عنوان گروه اعلام بار\n  LoadAnnouncementSubGroupId: number; // کد زیرگروه اعلام بار\n  LoadAnnouncementSubGroupTitle: string; // عنوان زیرگروه اعلام بار\n  SourceCityId: number; // کد شهر مبدا\n  SourceCityTitle: string; // عنوان شهر مبدا\n  TargetCityId: number; // کد شهر مقصد\n  TargetCityTitle: string; // عنوان شهر مقصد\n  LoadingPlaceId: number; // کد مبدا بارگیری\n  LoadingPlaceTitle: string; // عنوان مبدا بارگیری\n  DischargingPlaceId: number; // کد مقصد تخلیه\n  DischargingPlaceTitle: string; // عنوان مقصد تخلیه\n  TotalNumber: number; // تعداد کل\n  Tonaj: number; // تناژ بار\n  Tarrif: number; // تعرفه حمل\n  Recipient: string; // گیرنده\n  Address: string; // آدرس\n  Description: string; // توضیحات\n  LoadStatusId: number; // کد وضعیت نهایی بار\n  LoadStatusTitle: string; // عنوان وضعیت نهایی بار\n  TPTParams: PTPInfo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoaderType.html":{"url":"interfaces/LoaderType.html","title":"interface - LoaderType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoaderType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader-types/model/loader-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeFixStatusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeFixStatusTitle\n                                        \n                                \n                                \n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeOrganizationId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeFixStatusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeFixStatusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeFixStatusTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeFixStatusTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeOrganizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeOrganizationId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoaderType {\n  LoaderTypeId: number;\n  LoaderTypeTitle?: string;\n  LoaderTypeOrganizationId?: number;\n  LoaderTypeFixStatusId?: number;\n  LoaderTypeFixStatusTitle?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderTypeFormComponent.html":{"url":"components/LoaderTypeFormComponent.html","title":"component - LoaderTypeFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderTypeFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/loader-type-form/loader-type-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader-type-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ButtonModule\n                            ReactiveFormsModule\n                                TextInputComponent\n                            CheckboxModule\n                            TableModule\n                \n            \n\n            \n                styleUrls\n                ./loader-type-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader-type-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loadersFormArray\n                            \n                            \n                                    Private\n                                loaderTypeService\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createLoaderGroup\n                            \n                            \n                                getCheckedControl\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                    Async\n                                loadLoadersType\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChangeCheckBox\n                            \n                            \n                                    Async\n                                searchLoaders\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createLoaderGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLoaderGroup(item: LoaderType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            LoaderType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckedControl\n                        \n                    \n                \n            \n            \n                \ngetCheckedControl(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormControl\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLoadersType\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLoadersType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChangeCheckBox\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChangeCheckBox(control: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchLoaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchLoaders(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadersFormArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                \n                    \n                        Default value : this.fb.array([])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderTypeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    title: ['', [Validators.required, Validators.minLength(2)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchTitle\n                    \n                \n\n                \n                    \n                        getsearchTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/loader-type-form/loader-type-form.component.ts:117\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\nimport { LoaderTypesService } from 'app/services/loader-types/loader-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ButtonModule } from 'primeng/button';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { TableModule } from 'primeng/table';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-loader-type-form',\n  standalone: true,\n  imports: [\n    ButtonModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n    CheckboxModule,\n    TableModule,\n  ],\n  templateUrl: './loader-type-form.component.html',\n  styleUrls: ['./loader-type-form.component.scss'],\n})\nexport class LoaderTypeFormComponent {\n  private fb = inject(FormBuilder);\n  private toast = inject(ToastService);\n  private loaderTypeService = inject(LoaderTypesService);\n  private loadingService = inject(LoadingService);\n  private destroy$ = new Subject();\n\n  loading = false;\n  loadersFormArray: FormArray = this.fb.array([]);\n  searchForm = this.fb.group({\n    title: ['', [Validators.required, Validators.minLength(2)]],\n  });\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async searchLoaders(query: string): Promise {\n    const response = await this.loaderTypeService.GetLoaderTypesInfo(query);\n    if (!this.isSuccessful(response)) {\n      this.loadersFormArray.clear();\n    }\n    this.loadersFormArray.clear();\n    response.data!.forEach((loader: any) =>\n      this.loadersFormArray.push(this.createLoaderGroup(loader))\n    );\n  }\n\n  async loadLoadersType() {\n    if (this.searchForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      await this.searchLoaders(this.searchTitle.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  async onChangeCheckBox(control: FormGroup) {\n    const id = control.get('id')?.value ?? -1;\n    const status = control.get('status')?.value ?? false;\n\n    const response = await this.loaderTypeService.ChangeLoaderTypeStatus(id);\n    if (!this.isSuccessful(response) && control.get('status')) {\n      control.get('status')?.setValue(!status);\n      return;\n    }\n\n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private createLoaderGroup(item: LoaderType): FormGroup {\n    return this.fb.group({\n      id: [item.LoaderTypeId],\n      code: [item.LoaderTypeOrganizationId],\n      title: [item.LoaderTypeTitle],\n      type: [item.LoaderTypeTitle],\n      status: [item.Active],\n    });\n  }\n\n  private isSuccessful(response: ApiResponse): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  getCheckedControl(index: number): FormControl {\n    return this.loadersFormArray.at(index).get('status') as FormControl;\n  }\n\n  get searchTitle(): FormControl {\n    return this.searchForm.get('title') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n  @if (loading) {\n  \n    \n    \n  \n  }\n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n      \n        \n          فعال و غیر فعال\n          کد\n          کد سازمانی\n          عنوان بارگیر\n          بارگیر ثابت و غیر ثابت\n        \n      \n      \n        \n          \n            \n          \n          {{ control.get(\"id\")?.value }}\n          {{ control.get(\"code\")?.value }}\n          {{ control.get(\"title\")?.value }}\n          {{ control.get(\"type\")?.value }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./loader-type-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (loading) {              }                                                          فعال و غیر فعال          کد          کد سازمانی          عنوان بارگیر          بارگیر ثابت و غیر ثابت                                                                      {{ control.get(\"id\")?.value }}          {{ control.get(\"code\")?.value }}          {{ control.get(\"title\")?.value }}          {{ control.get(\"type\")?.value }}                    '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderTypeFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoaderTypeInRelation.html":{"url":"interfaces/LoaderTypeInRelation.html","title":"interface - LoaderTypeInRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoaderTypeInRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-loaderType.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfSequentialTurnToLoaderType {\n  SeqTurnId: number;\n  SeqTurnTitle?: string;\n  LoaderTypes: LoaderTypeInRelation[];\n}\n\nexport interface LoaderTypeInRelation {\n  LoaderTypeId: number;\n  LoaderTypeTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderTypesService.html":{"url":"injectables/LoaderTypesService.html","title":"injectable - LoaderTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader-types/loader-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeLoaderTypeStatus\n                            \n                            \n                                    Public\n                                    Async\n                                GetLoaderTypeInfoForSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                GetLoaderTypesInfo\n                            \n                            \n                                    Private\n                                TrimLoaderType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeLoaderTypeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeLoaderTypeStatus(loaderTypeId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader-types/loader-types.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLoaderTypeInfoForSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLoaderTypeInfoForSoftwareUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader-types/loader-types.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLoaderTypesInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLoaderTypesInfo(searchString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader-types/loader-types.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        TrimLoaderType\n                        \n                    \n                \n            \n            \n                \n                        \n                    TrimLoaderType(loaderType: LoaderType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader-types/loader-types.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderType\n                                            \n                                                            LoaderType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LoaderType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader-types/loader-types.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader-types/loader-types.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { mockLoaderTypes } from './mock/loader-type.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderTypesService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetLoaderTypesInfo(\n    searchString: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.LoaderTypes.GetLoaderTypes;\n    const loaderTypesInfo: LoaderType = {\n      LoaderTypeId: 0,\n      LoaderTypeTitle: searchString,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: loaderTypesInfo.LoaderTypeTitle,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLoaderTypes);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((loaderType) => this.TrimLoaderType(loaderType)),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetLoaderTypeInfoForSoftwareUser(): Promise\n  > {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.LoaderTypes.GetLoaderTypeInfoForSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockLoaderTypes);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimLoaderType(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private TrimLoaderType(loaderType: LoaderType): LoaderType {\n    return {\n      LoaderTypeId: loaderType.LoaderTypeId,\n      LoaderTypeTitle: loaderType.LoaderTypeTitle?.trim(),\n      LoaderTypeOrganizationId: loaderType.LoaderTypeOrganizationId,\n      LoaderTypeFixStatusId: loaderType.LoaderTypeFixStatusId,\n      LoaderTypeFixStatusTitle: loaderType.LoaderTypeFixStatusTitle?.trim(),\n      Active: loaderType.Active,\n    };\n  }\n\n  public async ChangeLoaderTypeStatus(\n    loaderTypeId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.LoaderTypes.ChangeLoaderTypeStatus;\n    const loaderTypeInfo: LoaderType = {\n      LoaderTypeId: loaderTypeId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LoaderTypeId: loaderTypeInfo.LoaderTypeId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            ProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/loading/loading.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/loading/loading.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/loading/loading.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-loading',\n  imports: [AsyncPipe,ProgressSpinnerModule],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.scss',\n})\nexport class LoadingComponent implements OnInit {\n  private loadingService = inject(LoadingService);\n  loading$!:Observable;\n \n  ngOnInit(): void {\n   this.loading$ =  this.loadingService.loading$;\n  }\n}\n\n    \n\n    \n        @if (loading$ | async) {\n\n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading$ | async) {  }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading-service/loading-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(isLoading: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading-service/loading-service.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isLoading\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading-service/loading-service.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading-service/loading-service.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject(false);\n  public readonly loading$: Observable = this.loadingSubject.asObservable();\n\n  setLoading(isLoading: boolean): void {\n    this.loadingSubject.next(isLoading);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/login-form/login-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            ButtonModule\n                                CaptchaInputComponent\n                                TextInputComponent\n                                PasswordInputComponent\n                                CheckboxInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                captchaComponent\n                            \n                            \n                                    Private\n                                cryptography\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                hrefForgetPassword\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginTitle\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                    Async\n                                resetLoginForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                                \n                                    sessionId\n                                \n                                \n                                    captcha\n                                \n                                \n                                    rememberMe\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/login-form/login-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        resetLoginForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetLoginForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/login-form/login-form.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        captchaComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CaptchaInputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('captchaRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cryptography\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CryptographyService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hrefForgetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : APP_ROUTES.AUTH.FORGET_PASSWORD\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', ValidationSchema.username],\n    password: ['', ValidationSchema.password],\n    sessionId: ['', [Validators.required]],\n    captcha: ['', [Validators.required]],\n    rememberMe: [true],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appTitles.appBrokenTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/login-form/login-form.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/login-form/login-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/login-form/login-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sessionId\n                    \n                \n\n                \n                    \n                        getsessionId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/login-form/login-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        captcha\n                    \n                \n\n                \n                    \n                        getcaptcha()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/login-form/login-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rememberMe\n                    \n                \n\n                \n                    \n                        getrememberMe()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/login-form/login-form.component.ts:101\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  Validators,\n  ReactiveFormsModule,\n  FormControl,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordInputComponent } from 'app/components/shared/inputs/password-input/password-input.component';\nimport { CaptchaInputComponent } from 'app/components/shared/inputs/captcha-input/captcha-input.component';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { CryptographyService } from 'app/services/cryptography-service/cryptography.service';\nimport { UserAuthService } from 'app/services/user-auth-service/user-auth.service';\nimport { APP_ROUTES } from 'app/constants/routes';\nimport { appTitles } from 'app/constants/Titles';\nimport { TextInputComponent } from '../../shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { CheckboxInputComponent } from '../../shared/inputs/checkbox-input/checkbox-input.component';\n\n@Component({\n  selector: 'app-login-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    CaptchaInputComponent,\n    TextInputComponent,\n    PasswordInputComponent,\n    CheckboxInputComponent,\n  ],\n  templateUrl: './login-form.component.html',\n  styleUrl: './login-form.component.scss',\n})\nexport class LoginFormComponent {\n  private fb = inject(FormBuilder);\n  private toast = inject(ToastService);\n  private userAuth = inject(UserAuthService);\n  private cryptography = inject(CryptographyService);\n  private router = inject(Router);\n\n  @ViewChild('captchaRef') captchaComponent!: CaptchaInputComponent;\n  hrefForgetPassword: string = APP_ROUTES.AUTH.FORGET_PASSWORD;\n  loginTitle: string = appTitles.appBrokenTitle;\n  loginForm = this.fb.group({\n    username: ['', ValidationSchema.username],\n    password: ['', ValidationSchema.password],\n    sessionId: ['', [Validators.required]],\n    captcha: ['', [Validators.required]],\n    rememberMe: [true],\n  });\n\n  async onSubmit(): Promise {\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    const formValue = this.loginForm.value;\n    const loginResult = await this.userAuth.login({\n      username: this.cryptography.SHA256(formValue.username!),\n      password: this.cryptography.SHA256(formValue.password!),\n      rememberMe: formValue?.rememberMe!,\n      sessionId: formValue?.sessionId!,\n      captcha: formValue?.captcha!,\n    });\n\n    if (loginResult.success || !loginResult.error) {\n      this.toast.success('موفق', 'ورود موفقیت آمیز بود.');\n      this.router.navigate([APP_ROUTES.DASHBOARD.HOME]);\n      return;\n    }\n\n    this.toast.error('خطا', loginResult.error?.message);\n    await this.resetLoginForm();\n  }\n\n  public async resetLoginForm(): Promise {\n    this.password.reset();\n    this.username.reset();\n    this.captcha.reset();\n    this.sessionId.reset();\n    await this.captchaComponent.getCaptchaInformation();\n  }\n\n  get username() {\n    return this.loginForm.get('username') as FormControl;\n  }\n\n  get password() {\n    return this.loginForm.get('password') as FormControl;\n  }\n\n  get sessionId() {\n    return this.loginForm.get('sessionId') as FormControl;\n  }\n\n  get captcha() {\n    return this.loginForm.get('captcha') as FormControl;\n  }\n  get rememberMe() {\n    return this.loginForm.get('rememberMe') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n\n    \n      \n\n      \n        \n          \n        \n      \n    \n  \n\n  \n\n  \n    \n    \n      ورود\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                ورود      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/login-form-data.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            captcha\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            rememberMe\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        captcha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        captcha:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rememberMe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginFormData {\n  username: string;\n  password: string;\n  rememberMe:boolean,\n  sessionId:string,\n  captcha: string,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                LoginFormComponent\n                                FullScreenBackgroundComponent\n                                FormCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from 'app/components/forms/login-form/login-form.component';\nimport { FullScreenBackgroundComponent } from 'app/components/shared/full-screen-background/full-screen-background.component';\nimport { FormCardComponent } from 'app/components/shared/form-card/form-card.component';\n\n@Component({\n  selector: 'app-login-page',\n  imports: [CommonModule,LoginFormComponent,FullScreenBackgroundComponent,FormCardComponent],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\n\nexport class LoginPageComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n \n   \n \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/main-view/main-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-tab\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-view.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-tab',\n  imports: [],\n  templateUrl: './main-view.component.html',\n  styleUrl: './main-view.component.scss'\n})\n\nexport class MainViewComponent {\n\n}\n\n    \n\n    \n        \n    صغحه اصلی\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    صغحه اصلی'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemData.html":{"url":"interfaces/MenuItemData.html","title":"interface - MenuItemData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItemData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/menu-item.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        command\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        command\n                        \n                    \n                \n            \n            \n                \ncommand()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/model/menu-item.model.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemData {\n  label: string,\n  icon: string,\n  command(): void;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewPasswordDialogComponent.html":{"url":"components/NewPasswordDialogComponent.html","title":"component - NewPasswordDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewPasswordDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/dialog/new-password-dialog/new-password-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-password-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-password-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/dialog/new-password-dialog/new-password-dialog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/dialog/new-password-dialog/new-password-dialog.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyToClipboard\n                        \n                    \n                \n            \n            \n                \ncopyToClipboard(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/dialog/new-password-dialog/new-password-dialog.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/dialog/new-password-dialog/new-password-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\n\n@Component({\n  selector: 'app-reset-password-dialog',\n  imports: [DialogModule,ButtonModule],\n  templateUrl: './new-password-dialog.component.html',\n  styleUrl: './new-password-dialog.component.scss',\n})\nexport class NewPasswordDialogComponent {\n  private toast = inject(ToastService);\n  @Input() username: string = '';\n  @Input() password: string = '';\n\n  copyToClipboard(text: string) {\n    this.toast.success('متن در کلیپبورد ذخیره شد', '');\n    navigator.clipboard.writeText(text);\n  }\n}\n\n    \n\n    \n        \n  \n     شناسه کابری: \n    \n      {{ username }}\n    \n  \n\n  \n     رمز عبور جدید \n    \n      {{ password }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       شناسه کابری:           {{ username }}             رمز عبور جدید           {{ password }}      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewPasswordDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PTPInfo.html":{"url":"interfaces/PTPInfo.html","title":"interface - PTPInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PTPInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/ptp-info-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Checked\n                                        \n                                \n                                \n                                        \n                                            Cost\n                                        \n                                \n                                \n                                        \n                                            TPTPDId\n                                        \n                                \n                                \n                                        \n                                            TPTPTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TPTPDId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TPTPDId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TPTPTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TPTPTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PTPInfo {\n  TPTPDId: number; // کد پارامتر های ماثر در حمل بار\n  TPTPTitle: string; // عنوان پارامتر های ماثر در حمل بار\n  Cost: number; // مبلغ\n  Checked: boolean; // فعال یا غیرفعال\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageGroup.html":{"url":"interfaces/PageGroup.html","title":"interface - PageGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/page-group.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            processes\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        processes:         WebProcess[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WebProcess[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WebProcess } from './web-process.model';\n\nexport interface PageGroup {\n  id: number;\n  title: string;\n  icon: string;\n  processes: WebProcess[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordInputComponent.html":{"url":"components/PasswordInputComponent.html","title":"component - PasswordInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/password-input/password-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            InputGroupModule\n                            ReactiveFormsModule\n                            InputGroupAddonModule\n                            MessageModule\n                                TextInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                            \n                                validationField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-user'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'رمز عبور'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validationField\n                    \n                \n                \n                    \n                        Type :         ValidationField | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/password-input/password-input.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { MessageModule } from 'primeng/message';\nimport { TextInputComponent } from '../text-input/text-input.component';\nimport { ValidationField } from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-password-input',\n  standalone: true,\n  imports: [\n    InputGroupModule,\n    ReactiveFormsModule,\n    InputGroupAddonModule,\n    MessageModule,\n    TextInputComponent,\n  ],\n  templateUrl: './password-input.component.html',\n  styleUrl: './password-input.component.scss',\n})\nexport class PasswordInputComponent {\n  @Input() control: FormControl = new FormControl('');\n  @Input() validationField: ValidationField | null = null;\n  @Input() placeholder: string = 'رمز عبور';\n  @Input() readOnly: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() icon: string = 'pi pi-user';\n  @Input() label: string = '';\n  @Input() addonWidth: string | null = null;\n\n  hidePassword: boolean = true;\n\n  togglePassword(): void {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrimitiveTokens.html":{"url":"interfaces/PrimitiveTokens.html","title":"interface - PrimitiveTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PrimitiveTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/theme.model.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/data/model/theme.model.ts:2\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        interface PrimitiveTokens {\n  [key: string]: string;\n}\n\n// Semantic tokens provide contextual meaning to primitive tokens\ninterface SemanticTokens {\n  primary?: {\n    [shade: number]: string;\n  };\n  colorScheme?: {\n    light?: ColorScheme;\n    dark?: ColorScheme;\n  };\n  [key: string]: any;\n}\n\n// Defines the structure for color schemes\ninterface ColorScheme {\n  primary?: {\n    color?: string;\n    inverseColor?: string;\n    hoverColor?: string;\n    activeColor?: string;\n  };\n  highlight?: {\n    background?: string;\n    focusBackground?: string;\n    color?: string;\n    focusColor?: string;\n  };\n  [key: string]: any;\n}\n\n// Component tokens allow customization at the component level\ninterface ComponentTokens {\n  [componentName: string]: {\n    [property: string]: string;\n  };\n}\n\n// The complete theme preset combining all token types\nexport interface ThemePreset {\n  name?: string;\n  primitives?: PrimitiveTokens;\n  semantic?: SemanticTokens;\n  components?: ComponentTokens;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/product-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ProductActive\n                                        \n                                \n                                \n                                        \n                                            ProductId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ProductTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ProductActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductType {\n  ProductTypeId: number;\n  ProductTypeTitle?: string;\n  ProductTypeActive?: boolean;\n  Products?: Product[];\n}\n\nexport interface Product {\n  ProductId: number;\n  ProductTitle?: string;\n  ProductActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductFormComponent.html":{"url":"components/ProductFormComponent.html","title":"component - ProductFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/product-form/product-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            TreeTableModule\n                                TreeTableCheckboxComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cachedProducts\n                            \n                            \n                                cacheKeyLength\n                            \n                            \n                                cachingEnabled\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                productTypeService\n                            \n                            \n                                selectionKey\n                            \n                            \n                                startKey\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToTreeNode\n                            \n                            \n                                    Private\n                                    Async\n                                handleProductChange\n                            \n                            \n                                    Private\n                                    Async\n                                handleProductTypeChange\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChangeProduct\n                            \n                            \n                                    Async\n                                searchProduct\n                            \n                            \n                                    Private\n                                    Async\n                                updateProductsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToTreeNode\n                        \n                    \n                \n            \n            \n                \nconvertToTreeNode(productsType: ProductType[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productsType\n                                            \n                                                        ProductType[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TreeNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleProductChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleProductChange(productId: number, active: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleProductTypeChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleProductTypeChange(productTypeId: number, active: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChangeProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChangeProduct(change: TreeTableChangedData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                change\n                                            \n                                                            TreeTableChangedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchProduct(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        updateProductsInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProductsInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/product-form/product-form.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cachedProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cacheKeyLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cachingEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productTypeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/product-form/product-form.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { TreeNode } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport {\n  TreeTableChangedData,\n  TreeTableCheckboxComponent,\n} from '../../trees/tree-table-checkbox/tree-table-checkbox.component';\nimport { ProductType } from 'app/data/model/product-type.model';\nimport { ProductTypesService } from 'app/services/product-types/product-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ErrorCodes } from 'app/constants/error-messages';\n\nexport interface ProductParent {\n  ProductTypeId: number;\n  ProductTypeTitle: string;\n  ProductTypeActive: boolean;\n}\n\ninterface SelectionOption {\n  checked: boolean;\n  partialChecked?: boolean;\n}\n\n@Component({\n  selector: 'app-product-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    TreeTableModule,\n    TreeTableCheckboxComponent,\n  ],\n  templateUrl: './product-form.component.html',\n  styleUrl: './product-form.component.scss',\n})\nexport class ProductFormComponent implements OnInit {\n  private productTypeService = inject(ProductTypesService);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private destroy$ = new Subject();\n  private loading: boolean = false;\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  products: TreeNode[] = [];\n  cachedProducts: TreeNode[] = [];\n  selectionKey!: Record;\n  cacheKeyLength: number = 3;\n  cachingEnabled: boolean = true;\n  startKey: string = '';\n\n  async searchProduct(query: string): Promise {\n    if (query.length  ({\n      data: {\n        ProductTypeId: productType.ProductTypeId,\n        ProductTypeTitle: productType.ProductTypeTitle,\n        ProductTypeActive: productType.ProductTypeActive,\n      },\n      children:\n        productType.Products?.map((product) => ({\n          data: product,\n        })) ?? [],\n    }));\n  }\n\n  async onChangeProduct(change: TreeTableChangedData) {\n    if (this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const parent = change.parent;\n      const children = change.children;\n     \n      if (!parent && children.length == 0)\n        return;  \n      \n\n      // Handle only-child case\n      if (!parent && children.length > 0) {\n        const { ProductId, ProductActive } = children[0];\n        const response = await this.handleProductChange(ProductId, ProductActive);\n        if (!this.isSuccessful(response)) return;\n        this.toast.success('موفق',response.data?.Message??'');\n        return;\n      }\n\n      // Handle parent is inactive\n      if (!parent.ProductTypeActive) {\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n        return;\n      }\n\n      // Handle parent is active\n      if (parent.ProductTypeActive) {\n        const requests = children.map(({ ProductId, ProductActive }) =>\n          this.handleProductChange(ProductId, ProductActive)\n        );\n        const results = await Promise.allSettled(requests);\n\n        const firstError = results.find((r) => r.status === 'rejected') as\n          | PromiseRejectedResult\n          | undefined;\n\n        if (firstError) {\n          const error =\n            (firstError.reason as any)?.error?.message ??\n            'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n          this.toast.error('خطا', error);\n          await this.updateProductsInfo();\n          return;\n        }\n\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n  \n  private async handleProductTypeChange(\n    productTypeId: number,\n    active: boolean\n  ) {\n    const response = await this.productTypeService.ChangeProductTypeStatus(\n      productTypeId,\n      active\n    );\n    if (!this.isSuccessful(response)) {\n      // await this.updateProductsInfo()\n      return;\n    };\n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private async handleProductChange(productId: number, active: boolean) {\n    const response = await this.productTypeService.ChangeProductStatus(\n      productId,\n      active\n    );\n    return response;\n  }\n\n  private async updateProductsInfo() {\n    if (this.startKey.length ): boolean {\n    \n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      console.log(response);\n      if (response.error?.code == ErrorCodes.NoRecordFound) {\n        \n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductParent.html":{"url":"interfaces/ProductParent.html","title":"interface - ProductParent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductParent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/product-form/product-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ProductTypeActive\n                                        \n                                \n                                \n                                        \n                                            ProductTypeId\n                                        \n                                \n                                \n                                        \n                                            ProductTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { TreeNode } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport {\n  TreeTableChangedData,\n  TreeTableCheckboxComponent,\n} from '../../trees/tree-table-checkbox/tree-table-checkbox.component';\nimport { ProductType } from 'app/data/model/product-type.model';\nimport { ProductTypesService } from 'app/services/product-types/product-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ErrorCodes } from 'app/constants/error-messages';\n\nexport interface ProductParent {\n  ProductTypeId: number;\n  ProductTypeTitle: string;\n  ProductTypeActive: boolean;\n}\n\ninterface SelectionOption {\n  checked: boolean;\n  partialChecked?: boolean;\n}\n\n@Component({\n  selector: 'app-product-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    TreeTableModule,\n    TreeTableCheckboxComponent,\n  ],\n  templateUrl: './product-form.component.html',\n  styleUrl: './product-form.component.scss',\n})\nexport class ProductFormComponent implements OnInit {\n  private productTypeService = inject(ProductTypesService);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private destroy$ = new Subject();\n  private loading: boolean = false;\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  products: TreeNode[] = [];\n  cachedProducts: TreeNode[] = [];\n  selectionKey!: Record;\n  cacheKeyLength: number = 3;\n  cachingEnabled: boolean = true;\n  startKey: string = '';\n\n  async searchProduct(query: string): Promise {\n    if (query.length  ({\n      data: {\n        ProductTypeId: productType.ProductTypeId,\n        ProductTypeTitle: productType.ProductTypeTitle,\n        ProductTypeActive: productType.ProductTypeActive,\n      },\n      children:\n        productType.Products?.map((product) => ({\n          data: product,\n        })) ?? [],\n    }));\n  }\n\n  async onChangeProduct(change: TreeTableChangedData) {\n    if (this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const parent = change.parent;\n      const children = change.children;\n     \n      if (!parent && children.length == 0)\n        return;  \n      \n\n      // Handle only-child case\n      if (!parent && children.length > 0) {\n        const { ProductId, ProductActive } = children[0];\n        const response = await this.handleProductChange(ProductId, ProductActive);\n        if (!this.isSuccessful(response)) return;\n        this.toast.success('موفق',response.data?.Message??'');\n        return;\n      }\n\n      // Handle parent is inactive\n      if (!parent.ProductTypeActive) {\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n        return;\n      }\n\n      // Handle parent is active\n      if (parent.ProductTypeActive) {\n        const requests = children.map(({ ProductId, ProductActive }) =>\n          this.handleProductChange(ProductId, ProductActive)\n        );\n        const results = await Promise.allSettled(requests);\n\n        const firstError = results.find((r) => r.status === 'rejected') as\n          | PromiseRejectedResult\n          | undefined;\n\n        if (firstError) {\n          const error =\n            (firstError.reason as any)?.error?.message ??\n            'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n          this.toast.error('خطا', error);\n          await this.updateProductsInfo();\n          return;\n        }\n\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n  \n  private async handleProductTypeChange(\n    productTypeId: number,\n    active: boolean\n  ) {\n    const response = await this.productTypeService.ChangeProductTypeStatus(\n      productTypeId,\n      active\n    );\n    if (!this.isSuccessful(response)) {\n      // await this.updateProductsInfo()\n      return;\n    };\n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private async handleProductChange(productId: number, active: boolean) {\n    const response = await this.productTypeService.ChangeProductStatus(\n      productId,\n      active\n    );\n    return response;\n  }\n\n  private async updateProductsInfo() {\n    if (this.startKey.length ): boolean {\n    \n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      console.log(response);\n      if (response.error?.code == ErrorCodes.NoRecordFound) {\n        \n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductType.html":{"url":"interfaces/ProductType.html","title":"interface - ProductType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/product-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Products\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ProductTypeActive\n                                        \n                                \n                                \n                                        \n                                            ProductTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ProductTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Products:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProductTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProductTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductType {\n  ProductTypeId: number;\n  ProductTypeTitle?: string;\n  ProductTypeActive?: boolean;\n  Products?: Product[];\n}\n\nexport interface Product {\n  ProductId: number;\n  ProductTitle?: string;\n  ProductActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductTypesService.html":{"url":"injectables/ProductTypesService.html","title":"injectable - ProductTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/product-types/product-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeProductStatus\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeProductTypeStatus\n                            \n                            \n                                    Public\n                                    Async\n                                GetProductsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeProductStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeProductStatus(productId: number, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-types/product-types.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeProductTypeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeProductTypeStatus(productTypeId: number, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-types/product-types.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetProductsInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetProductsInfo(productTypeTitle: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/product-types/product-types.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productTypeTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/product-types/product-types.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/product-types/product-types.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Product, ProductType } from 'app/data/model/product-type.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockProductTypes } from 'app/data/mock/product-type.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductTypesService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetProductsInfo(\n    productTypeTitle: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.ProductTypes.GetProducts;\n    const productTypeInfo: ProductType = {\n      ProductTypeId: 0,\n      ProductTypeTitle: productTypeTitle,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: productTypeInfo.ProductTypeTitle,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockProductTypes);\n    //#endregion\n  }\n\n  public async ChangeProductTypeStatus(\n    productTypeId: number,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.ProductTypes.ChangeProductTypeStatus;\n    const productTypeInfo: ProductType = {\n      ProductTypeId: productTypeId,\n      ProductTypeActive: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      ProductTypeId: productTypeInfo.ProductTypeId,\n      ProductTypeActive: productTypeInfo.ProductTypeActive,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeProductStatus(\n    productId: number,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.ProductTypes.ChangeProductStatus;\n    const productInfo: Product = {\n      ProductId: productId,\n      ProductActive: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      ProductId: productInfo.ProductId,\n      ProductActive: productInfo.ProductActive,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Province.html":{"url":"interfaces/Province.html","title":"interface - Province","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Province\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/province-city.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Cities\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ProvinceActive\n                                        \n                                \n                                \n                                        \n                                            ProvinceId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ProvinceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Cities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Cities:         City[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProvinceActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProvinceActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProvinceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProvinceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProvinceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProvinceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Province {\n  ProvinceId: number;\n  ProvinceName?: string;\n  ProvinceActive?: boolean;\n  Cities?: City[];\n}\n\nexport interface City {\n  CityCode: number;\n  CityTitle?: string;\n  CityActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceAndCityFormComponent.html":{"url":"components/ProvinceAndCityFormComponent.html","title":"component - ProvinceAndCityFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProvinceAndCityFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/province-and-city-form/province-and-city-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-province-and-city-form\n            \n\n\n            \n                imports\n                \n                            TreeTableModule\n                                TreeTableCheckboxComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./province-and-city-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./province-and-city-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cachedProvincesAndCites\n                            \n                            \n                                cacheKeyLength\n                            \n                            \n                                cachingEnabled\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                provincesAndCites\n                            \n                            \n                                    Private\n                                provincesAndCitesService\n                            \n                            \n                                selectionKey\n                            \n                            \n                                startKey\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertToTreeNode\n                            \n                            \n                                    Private\n                                    Async\n                                handleCityChange\n                            \n                            \n                                    Private\n                                    Async\n                                handleProvinceChange\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onChangeProvinceAndCity\n                            \n                            \n                                    Async\n                                searchProvinceAndCity\n                            \n                            \n                                    Private\n                                    Async\n                                updateProductsInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertToTreeNode\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertToTreeNode(provinces: Province[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provinces\n                                            \n                                                            Province[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TreeNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleCityChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCityChange(productId: number, active: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleProvinceChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleProvinceChange(provinceId: number, active: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provinceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onChangeProvinceAndCity\n                        \n                    \n                \n            \n            \n                \n                        \n                    onChangeProvinceAndCity(change: TreeTableChangedData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                change\n                                            \n                                                            TreeTableChangedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchProvinceAndCity\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchProvinceAndCity(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        updateProductsInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProductsInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cachedProvincesAndCites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cacheKeyLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cachingEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provincesAndCites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        provincesAndCitesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProvinceAndCityManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/province-and-city-form/province-and-city-form.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  TreeTableChangedData,\n  TreeTableCheckboxComponent,\n} from 'app/components/trees/tree-table-checkbox/tree-table-checkbox.component';\nimport { ErrorCodes } from 'app/constants/error-messages';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Province } from 'app/data/model/province-city.model';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ProvinceAndCityManagementService } from 'app/services/province-city-management/province-and-city-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { Subject, takeUntil } from 'rxjs';\n\ninterface SelectionOption {\n  checked: boolean;\n  partialChecked?: boolean;\n}\n\n@Component({\n  selector: 'app-province-and-city-form',\n  imports: [TreeTableModule, TreeTableCheckboxComponent],\n  templateUrl: './province-and-city-form.component.html',\n  styleUrl: './province-and-city-form.component.scss',\n})\nexport class ProvinceAndCityFormComponent implements OnDestroy, OnInit {\n  private provincesAndCitesService = inject(ProvinceAndCityManagementService);\n  private toast = inject(ToastService);\n  private loadingService = inject(LoadingService);\n  private loading = false;\n  private destroy$ = new Subject();\n\n  provincesAndCites: TreeNode[] = [];\n  cachedProvincesAndCites: TreeNode[] = [];\n  selectionKey!: Record;\n  cacheKeyLength: number = 2;\n  cachingEnabled: boolean = true;\n  startKey: string = '';\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async searchProvinceAndCity(query: string): Promise {\n    if (query.length  0) {\n        const { CityCode, CityActive } = children[0];\n        const response = await this.handleCityChange(CityCode, CityActive);\n        if (!this.isSuccessful(response)) return;\n        this.toast.success('موفق', response.data?.Message ?? '');\n        return;\n      }\n\n      // Handle parent is inactive\n      if (!parent.ProvinceActive) {\n        const { ProvinceId, ProvinceActive } = parent;\n        await this.handleProvinceChange(ProvinceId, ProvinceActive);\n        return;\n      }\n\n      // Handle parent is active\n      if (parent.ProvinceActive) {\n        const requests = children.map(({  CityCode, CityActive }) =>\n          this.handleCityChange(CityCode, CityActive)\n        );\n        const results = await Promise.allSettled(requests);\n\n        const firstError = results.find((r) => r.status === 'rejected') as\n          | PromiseRejectedResult\n          | undefined;\n\n        if (firstError) {\n          const error =\n            (firstError.reason as any)?.error?.message ??\n            'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n          this.toast.error('خطا', error);\n          await this.updateProductsInfo();\n          return;\n        }\n\n        const { ProvinceId, ProvinceActive  } = parent;\n        await this. handleProvinceChange(ProvinceId, ProvinceActive );\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private async handleProvinceChange(\n    provinceId: number,\n    active: boolean\n  ) {\n    const response = await this.provincesAndCitesService.ChangeProvinceStatus(\n      provinceId,\n      active\n    );\n\n    if(!this.isSuccessful(response)) {\n      // await this.updateProductsInfo()\n      return;\n    }\n    \n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private async handleCityChange(productId: number, active: boolean) {\n    const response = await this.provincesAndCitesService.ChangeCityStatus(\n      productId,\n      active\n    );\n    return response;\n  }\n\n  private async updateProductsInfo() {\n    if (this.startKey.length ): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      if (response.error?.code == ErrorCodes.NoRecordFound) {\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  private convertToTreeNode(provinces: Province[]): TreeNode[] {\n    return provinces.map((province) => ({\n      data: {\n        ProvinceId: province.ProvinceId,\n        ProvinceName: province.ProvinceName,\n        ProvinceActive: province.ProvinceActive,\n      },\n      children:\n        province.Cities?.map((city) => ({\n          data: city,\n        })) ?? [],\n    }));\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceAndCityFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProvinceAndCityManagementService.html":{"url":"injectables/ProvinceAndCityManagementService.html","title":"injectable - ProvinceAndCityManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProvinceAndCityManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/province-city-management/province-and-city-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeCityStatus\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeProvinceStatus\n                            \n                            \n                                    Public\n                                    Async\n                                GetProvincesAndCitiesInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeCityStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeCityStatus(cityCode: number, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/province-city-management/province-and-city-management.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeProvinceStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeProvinceStatus(provinceId: number, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/province-city-management/province-and-city-management.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provinceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetProvincesAndCitiesInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetProvincesAndCitiesInfo(provinceAndCityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/province-city-management/province-and-city-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provinceAndCityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/province-city-management/province-and-city-management.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/province-city-management/province-and-city-management.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockProvinceAndCities } from 'app/data/mock/province-city.mock';\nimport { City, Province } from 'app/data/model/province-city.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProvinceAndCityManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetProvincesAndCitiesInfo(\n    provinceAndCityName: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.ProvinceAndCities.GetCities;\n    const provinceAndCities: Province = {\n      ProvinceId: 0,\n      ProvinceName: provinceAndCityName,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: provinceAndCities.ProvinceName,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockProvinceAndCities);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((province) => ({\n        ProvinceId: province.ProvinceId,\n        ProvinceName: province.ProvinceName?.trim(),\n        ProvinceActive: province.ProvinceActive,\n        Cities: province.Cities,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async ChangeProvinceStatus(\n    provinceId: number,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.ProvinceAndCities.ChangeProvinceStatus;\n    const provinceInfo: Province = {\n      ProvinceId: provinceId,\n      ProvinceActive: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      ProvinceId: provinceInfo.ProvinceId,\n      ProvinceActive: provinceInfo.ProvinceActive,\n    };\n    //#endregion\n\n    //#region Request\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeCityStatus(\n    cityCode: number,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.ProvinceAndCities.ChangeCityStatus;\n    const cityInfo: City = {\n      CityCode: cityCode,\n      CityActive: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      CityId: cityInfo.CityCode,\n      CityActive: cityInfo.CityActive,\n    };\n    //#endregion\n\n    //#region Request\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RealTimeTurnsFormComponent.html":{"url":"components/RealTimeTurnsFormComponent.html","title":"component - RealTimeTurnsFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RealTimeTurnsFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-turns-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                                TurnsTruckInfoBaseFormComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./real-time-turns-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./real-time-turns-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                sequentialTurnId\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                truckId\n                            \n                            \n                                    Private\n                                turnManagementService\n                            \n                            \n                                    \n                                turnsBaseComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitRealTimeTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitRealTimeTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitRealTimeTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sequentialTurnId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [\n    Validators.required,\n    Validators.min(0),\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.min(0)])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        turnManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        turnsBaseComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TurnsTruckInfoBaseFormComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TurnsTruckInfoBaseFormComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input, ViewChild } from '@angular/core';\nimport { TurnsTruckInfoBaseFormComponent } from '../turns-truck-info-base-form/turns-truck-info-base-form.component';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { TurnManagementService } from 'app/services/turn-management/turn-management.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ToastService } from 'app/services/toast-service/toast.service';\n\n@Component({\n  selector: 'app-real-time-turns-form',\n  imports: [ButtonModule, TurnsTruckInfoBaseFormComponent],\n  templateUrl: './real-time-turns-form.component.html',\n  styleUrl: './real-time-turns-form.component.scss',\n})\nexport class RealTimeTurnsFormComponent {\n  @ViewChild(TurnsTruckInfoBaseFormComponent)\n  turnsBaseComponent!: TurnsTruckInfoBaseFormComponent;\n\n  private loadingService = inject(LoadingService);\n  private turnManagementService = inject(TurnManagementService);\n  private destroy$ = new Subject();\n  private toast = inject(ToastService);\n\n  sequentialTurnId = new FormControl('', [\n    Validators.required,\n    Validators.min(0),\n  ]);\n  truckId = new FormControl('', [Validators.required, Validators.min(0)]);\n  loading = false;\n\n  // ♻️ Cleanup subscription\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // 🚦 Listen to loading state on init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async submitRealTimeTurn() {\n    if (\n      this.sequentialTurnId.invalid ||\n      this.sequentialTurnId.invalid ||\n      this.loading\n    )\n      return;\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.turnManagementService.RealTimeTurnRegister(\n        Number(this.truckId.value),\n        Number(this.sequentialTurnId.value)\n      );\n      if (!checkAndToastError(response, this.toast)) return;\n      this.toast.success('موفق', response.data.Message);\n      this.turnsBaseComponent.resetTurnsBaseForm();\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RealTimeTurnsFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationOfAnnouncementGroupAndSubGroup.html":{"url":"interfaces/RelationOfAnnouncementGroupAndSubGroup.html","title":"interface - RelationOfAnnouncementGroupAndSubGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationOfAnnouncementGroupAndSubGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/announcement_group_subgroup_management/model/relation-of-announcement-group-subgroup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementId\n                                        \n                                \n                                \n                                        \n                                            AnnouncementSubGroups\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            AnnouncementTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSubGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSubGroups:     AnnouncementSubGroupInRelation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnnouncementSubGroupInRelation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfAnnouncementGroupAndSubGroup {\n  AnnouncementId: number;\n  AnnouncementTitle?: string;\n  AnnouncementSubGroups: AnnouncementSubGroupInRelation[];\n}\n\nexport interface AnnouncementSubGroupInRelation {\n  AnnouncementSGId: number;\n  AnnouncementSGTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelationOfAnnouncementGroupAndSubGroupComponent.html":{"url":"components/RelationOfAnnouncementGroupAndSubGroupComponent.html","title":"component - RelationOfAnnouncementGroupAndSubGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RelationOfAnnouncementGroupAndSubGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-relation-of-announcement-group-and-sub-group\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            ButtonModule\n                                SearchAutoCompleteComponent\n                            TableModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./relation-of-announcement-group-and-sub-group.component.html\n            \n\n\n\n            \n                styleUrl\n                ./relation-of-announcement-group-and-sub-group.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                announcementGroupAndSubGroupForm\n                            \n                            \n                                    Private\n                                announcementService\n                            \n                            \n                                cols\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                relationsAnnouncement\n                            \n                            \n                                searchAnnouncementGroup\n                            \n                            \n                                searchAnnouncementSubGroup\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteRelationAnnouncement\n                            \n                            \n                                    Private\n                                flattenAnnouncementRelations\n                            \n                            \n                                    Private\n                                    Async\n                                loadRelationOfAnnouncement\n                            \n                            \n                                onAutoCompleteChange\n                            \n                            \n                                onDelete\n                            \n                            \n                                    Async\n                                onSelectAnnouncement\n                            \n                            \n                                onSelectSubAnnouncement\n                            \n                            \n                                    Async\n                                registerRelationAnnouncement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    announcementGroupId\n                                \n                                \n                                    announcementGroupTitle\n                                \n                                \n                                    announcementSubGroupId\n                                \n                                \n                                    announcementSubGroupTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteRelationAnnouncement\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRelationAnnouncement(row: RowRelationOfAnnouncement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            RowRelationOfAnnouncement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flattenAnnouncementRelations\n                        \n                    \n                \n            \n            \n                \n                        \n                    flattenAnnouncementRelations(data: RelationOfAnnouncementGroupAndSubGroup[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        RelationOfAnnouncementGroupAndSubGroup[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RowRelationOfAnnouncement[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadRelationOfAnnouncement\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadRelationOfAnnouncement(announcementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                announcementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAutoCompleteChange\n                        \n                    \n                \n            \n            \n                \nonAutoCompleteChange(controller: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controller\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(row: RowRelationOfAnnouncement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            RowRelationOfAnnouncement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSelectAnnouncement\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSelectAnnouncement(announcement: AnnouncementGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                announcement\n                                            \n                                                            AnnouncementGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectSubAnnouncement\n                        \n                    \n                \n            \n            \n                \nonSelectSubAnnouncement(subGroup: AnnouncementSubGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subGroup\n                                            \n                                                            AnnouncementSubGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerRelationAnnouncement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerRelationAnnouncement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        announcementGroupAndSubGroupForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    announcementGroupId: [-1, Validators.min(0)],\n    announcementGroupTitle: ['', Validators.required],\n    announcementSubGroupId: [-1, Validators.min(0)],\n    announcementSubGroupTitle: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        announcementService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AnnouncementGroupSubgroupManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['حذف', 'گروه اعلام بار', 'زیر گروه اعلام بار']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationsAnnouncement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RowRelationOfAnnouncement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchAnnouncementGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchAnnouncementSubGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        announcementGroupId\n                    \n                \n\n                \n                    \n                        getannouncementGroupId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        announcementGroupTitle\n                    \n                \n\n                \n                    \n                        getannouncementGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        announcementSubGroupId\n                    \n                \n\n                \n                    \n                        getannouncementSubGroupId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        announcementSubGroupTitle\n                    \n                \n\n                \n                    \n                        getannouncementSubGroupTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts:90\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { AnnouncementGroupSubgroupManagementService } from 'app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service';\nimport { AnnouncementGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-group.model';\nimport { AnnouncementSubGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-subgroup.model';\nimport { RelationOfAnnouncementGroupAndSubGroup } from 'app/services/announcement_group_subgroup_management/model/relation-of-announcement-group-subgroup.model';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { TableModule } from 'primeng/table';\n\n// 📦 Interface for displaying flat relation data in table\ninterface RowRelationOfAnnouncement {\n  AnnouncementId: number;\n  AnnouncementTitle: string;\n  AnnouncementSGId: number;\n  AnnouncementSGTitle: string;\n}\n\n@Component({\n  selector: 'app-relation-of-announcement-group-and-sub-group',\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    SearchAutoCompleteComponent,\n    TableModule,\n    ConfirmDialogModule,\n  ],\n  providers: [ConfirmationService],\n  templateUrl: './relation-of-announcement-group-and-sub-group.component.html',\n  styleUrl: './relation-of-announcement-group-and-sub-group.component.scss',\n})\nexport class RelationOfAnnouncementGroupAndSubGroupComponent {\n  // 💉 Dependency Injection\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private confirmationService = inject(ConfirmationService);\n  private announcementService = inject(AnnouncementGroupSubgroupManagementService);\n\n  // 📊 UI State\n  loading = false;\n  addonWidth = '8rem';\n  cols = ['حذف', 'گروه اعلام بار', 'زیر گروه اعلام بار'];\n  relationsAnnouncement: RowRelationOfAnnouncement[] = [];\n\n  // 📄 Form Definition\n  announcementGroupAndSubGroupForm = this.fb.group({\n    announcementGroupId: [-1, Validators.min(0)],\n    announcementGroupTitle: ['', Validators.required],\n    announcementSubGroupId: [-1, Validators.min(0)],\n    announcementSubGroupTitle: ['', Validators.required],\n  });\n\n  // 🔍 Search Handlers\n  searchAnnouncementGroup = async (query: string) => {\n    const res = await this.announcementService.GetAnnouncementGroups(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchAnnouncementSubGroup = async (query: string) => {\n    const res = await this.announcementService.GetAnnouncementSupGroups(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  // 📥 Form Getters\n  get announcementGroupId(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementGroupId') as FormControl;\n  }\n\n  get announcementGroupTitle(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementGroupTitle') as FormControl;\n  }\n\n  get announcementSubGroupId(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementSubGroupId') as FormControl;\n  }\n\n  get announcementSubGroupTitle(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementSubGroupTitle') as FormControl;\n  }\n\n  // 🧹 Reset value when input is cleared\n  onAutoCompleteChange(controller: FormControl) {\n    controller.setValue(-1);\n  }\n\n  // 🔘 Group selected from autocomplete\n  async onSelectAnnouncement(announcement: AnnouncementGroup) {\n    this.announcementGroupId.setValue(announcement.AnnouncementId);\n    try {\n      this.loadingService.setLoading(true);\n      await this.loadRelationOfAnnouncement(announcement.AnnouncementId);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // 🔘 Subgroup selected from autocomplete\n  onSelectSubAnnouncement(subGroup: AnnouncementSubGroup) {\n    this.announcementSubGroupId.setValue(subGroup.AnnouncementSGId);\n  }\n\n  // 📡 Fetch relation data from backend\n  private async loadRelationOfAnnouncement(announcementId: number) {\n    const res = await this.announcementService.GetRelationOfAnnouncementGroupAndSubGroup(announcementId);\n    if (!checkAndToastError(res, this.toast)) return;\n    this.relationsAnnouncement = this.flattenAnnouncementRelations(res.data!);\n  }\n\n  // 🔃 Convert nested relations to flat format for display\n  private flattenAnnouncementRelations(data: RelationOfAnnouncementGroupAndSubGroup[]): RowRelationOfAnnouncement[] {\n    return data.flatMap(group =>\n      group.AnnouncementSubGroups.map(sub => ({\n        AnnouncementId: group.AnnouncementId,\n        AnnouncementTitle: group.AnnouncementTitle ?? '',\n        AnnouncementSGId: sub.AnnouncementSGId,\n        AnnouncementSGTitle: sub.AnnouncementSGTitle ?? '',\n      }))\n    );\n  }\n\n  // ❌ Delete confirmation dialog\n  onDelete(row: RowRelationOfAnnouncement) {\n    this.confirmationService.confirm({\n      message: `آیا می‌خواهید رکورد با کد گروه ${row.AnnouncementId} و کد زیرگروه ${row.AnnouncementSGId} را حذف کنید؟`,\n      header: 'حذف رکورد',\n      icon: 'pi pi-info-circle',\n      closable: true,\n      closeOnEscape: true,\n      rejectButtonProps: {\n        label: 'لغو',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'تایید',\n        severity: 'danger',\n      },\n      accept: async () => {\n        try {\n          this.loadingService.setLoading(true);\n          await this.deleteRelationAnnouncement(row);\n        } finally {\n          this.loadingService.setLoading(false);\n        }\n      },\n    });\n  }\n\n  // ❌ Delete relation from backend\n  private async deleteRelationAnnouncement(row: RowRelationOfAnnouncement) {\n    const res = await this.announcementService.DeleteRelationOfAnnouncementGroupAndSubGroup(\n      row.AnnouncementId,\n      row.AnnouncementSGId\n    );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.toast.success('موفق', res.data.Message);\n    await this.loadRelationOfAnnouncement(row.AnnouncementId);\n  }\n\n  // ✅ Register new relation\n  async registerRelationAnnouncement() {\n    if (this.announcementGroupAndSubGroupForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      const res = await this.announcementService.RegisterNewRelationOfAnnouncementGroupAndSubGroup(\n        this.announcementGroupId.value,\n        this.announcementSubGroupId.value\n      );\n      if (!checkAndToastError(res, this.toast)) return;\n      this.toast.success('موفق', res.data?.Message ?? '');\n      await this.loadRelationOfAnnouncement(this.announcementGroupId.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n\n\n\n  \n    \n      @for (col of columns; track $index) {\n      {{ col }}\n      }\n    \n  \n\n  \n    \n      \n        \n      \n      {{ rowData.AnnouncementTitle }}\n      {{ rowData.AnnouncementSGTitle }}\n    \n  \n\n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @for (col of columns; track $index) {      {{ col }}      }                                      {{ rowData.AnnouncementTitle }}      {{ rowData.AnnouncementSGTitle }}        '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelationOfAnnouncementGroupAndSubGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html":{"url":"interfaces/RelationOfSequentialTurnToAnnouncementSubGroup.html","title":"interface - RelationOfSequentialTurnToAnnouncementSubGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationOfSequentialTurnToAnnouncementSubGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-announcementSubGroup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementSubGroups\n                                        \n                                \n                                \n                                        \n                                            SeqTurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SeqTurnTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSubGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSubGroups:         announcementSubGroupInRelation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         announcementSubGroupInRelation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfSequentialTurnToAnnouncementSubGroup {\n  SeqTurnId: number;\n  SeqTurnTitle?: string;\n  AnnouncementSubGroups: announcementSubGroupInRelation[];\n}\nexport interface announcementSubGroupInRelation {\n  AnnouncementSGId: number;\n  AnnouncementSGTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationOfSequentialTurnToLoaderType.html":{"url":"interfaces/RelationOfSequentialTurnToLoaderType.html","title":"interface - RelationOfSequentialTurnToLoaderType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationOfSequentialTurnToLoaderType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-loaderType.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LoaderTypes\n                                        \n                                \n                                \n                                        \n                                            SeqTurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SeqTurnTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypes:     LoaderTypeInRelation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderTypeInRelation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfSequentialTurnToLoaderType {\n  SeqTurnId: number;\n  SeqTurnTitle?: string;\n  LoaderTypes: LoaderTypeInRelation[];\n}\n\nexport interface LoaderTypeInRelation {\n  LoaderTypeId: number;\n  LoaderTypeTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html":{"url":"components/RelationOfSequentialTurnToLoaderTypeFormComponent.html","title":"component - RelationOfSequentialTurnToLoaderTypeFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RelationOfSequentialTurnToLoaderTypeFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-relation-of-announcement-group-and-sub-group\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            ButtonModule\n                            ConfirmDialogModule\n                            TableModule\n                                SearchAutoCompleteComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./relation-of-sequential-turn-to-loader-type-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./relation-of-sequential-turn-to-loader-type-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                cols\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                    Private\n                                loaderTypeService\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                relationsAnnouncement\n                            \n                            \n                                relationSequentialToLoaderForm\n                            \n                            \n                                searchLoaderType\n                            \n                            \n                                searchSequentialTurn\n                            \n                            \n                                    Private\n                                sequentialTurnService\n                            \n                            \n                                    Private\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteRelationSequentialToLoader\n                            \n                            \n                                    Private\n                                flattenSequentialRelations\n                            \n                            \n                                    Private\n                                    Async\n                                loadRelationOfSequentialToLoader\n                            \n                            \n                                onAutoCompleteChange\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSelectLoaderType\n                            \n                            \n                                    Async\n                                onSelectSequentialTurn\n                            \n                            \n                                    Async\n                                registerRelationSequentialToLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sequentialId\n                                \n                                \n                                    sequentialTitle\n                                \n                                \n                                    loaderTypeId\n                                \n                                \n                                    loaderTypeTitle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteRelationSequentialToLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRelationSequentialToLoader(row: RowRelationOfSequentialToLoader)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:215\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            RowRelationOfSequentialToLoader\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flattenSequentialRelations\n                        \n                    \n                \n            \n            \n                \n                        \n                    flattenSequentialRelations(data: RelationOfSequentialTurnToLoaderType[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        RelationOfSequentialTurnToLoaderType[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     RowRelationOfSequentialToLoader[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadRelationOfSequentialToLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadRelationOfSequentialToLoader(sequentialId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAutoCompleteChange\n                        \n                    \n                \n            \n            \n                \nonAutoCompleteChange(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(row: RowRelationOfSequentialToLoader)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            RowRelationOfSequentialToLoader\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLoaderType\n                        \n                    \n                \n            \n            \n                \nonSelectLoaderType(loaderType: LoaderType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderType\n                                            \n                                                            LoaderType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSelectSequentialTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSelectSequentialTurn(sequentialTurn: SequentialTurn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurn\n                                            \n                                                            SequentialTurn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerRelationSequentialToLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerRelationSequentialToLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:231\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['حذف', 'صفوف نوبت دهی', 'بارگیرها']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderTypeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationsAnnouncement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RowRelationOfSequentialToLoader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationSequentialToLoaderForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    sequentialId: [-1, Validators.min(0)],\n    sequentialTitle: ['', Validators.required],\n    loaderTypeId: [-1, Validators.min(0)],\n    loaderTypeTitle: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchLoaderType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSequentialTurn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sequentialTurnService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SequentialTurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:61\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sequentialId\n                    \n                \n\n                \n                    \n                        getsequentialId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sequentialTitle\n                    \n                \n\n                \n                    \n                        getsequentialTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaderTypeId\n                    \n                \n\n                \n                    \n                        getloaderTypeId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaderTypeTitle\n                    \n                \n\n                \n                    \n                        getloaderTypeTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { TableModule } from 'primeng/table';\nimport { ConfirmationService } from 'primeng/api';\n\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { LoaderTypesService } from 'app/services/loader-types/loader-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { SequentialTurnManagementService } from 'app/services/sequential-turn-management/sequential-turn-management.service';\nimport { SequentialTurn } from 'app/services/sequential-turn-management/model/sequential-turn.model';\nimport { RelationOfSequentialTurnToLoaderType } from 'app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-loaderType.model';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ERROR_MESSAGES, ErrorCodes } from 'app/constants/error-messages';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\n\n// =======================\n// 📄 Table Row Interface\n// =======================\ninterface RowRelationOfSequentialToLoader {\n  SeqTurnId: number;\n  SeqTurnTitle: string;\n  LoaderTypeId: number;\n  LoaderTypeTitle: string;\n}\n\n// =======================\n// 🧩 Component Definition\n// =======================\n@Component({\n  selector: 'app-relation-of-announcement-group-and-sub-group',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    TableModule,\n    SearchAutoCompleteComponent,\n  ],\n  providers: [ConfirmationService],\n  templateUrl:\n    './relation-of-sequential-turn-to-loader-type-form.component.html',\n  styleUrl: './relation-of-sequential-turn-to-loader-type-form.component.scss',\n})\nexport class RelationOfSequentialTurnToLoaderTypeFormComponent {\n  // =======================\n  // 💉 Dependency Injection\n  // =======================\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private confirmationService = inject(ConfirmationService);\n  private loaderTypeService = inject(LoaderTypesService);\n  private sequentialTurnService = inject(SequentialTurnManagementService);\n\n  // =======================\n  // 📊 Component State\n  // =======================\n  loading = false;\n  addonWidth = '8rem';\n  cols = ['حذف', 'صفوف نوبت دهی', 'بارگیرها'];\n  relationsAnnouncement: RowRelationOfSequentialToLoader[] = [];\n\n  // =======================\n  // 📝 Reactive Form\n  // =======================\n  relationSequentialToLoaderForm = this.fb.group({\n    sequentialId: [-1, Validators.min(0)],\n    sequentialTitle: ['', Validators.required],\n    loaderTypeId: [-1, Validators.min(0)],\n    loaderTypeTitle: ['', Validators.required],\n  });\n\n  // =======================\n  // 📥 Form Getters\n  // =======================\n  get sequentialId() {\n    return this.relationSequentialToLoaderForm.get(\n      'sequentialId'\n    ) as FormControl;\n  }\n\n  get sequentialTitle() {\n    return this.relationSequentialToLoaderForm.get(\n      'sequentialTitle'\n    ) as FormControl;\n  }\n\n  get loaderTypeId() {\n    return this.relationSequentialToLoaderForm.get(\n      'loaderTypeId'\n    ) as FormControl;\n  }\n\n  get loaderTypeTitle() {\n    return this.relationSequentialToLoaderForm.get(\n      'loaderTypeTitle'\n    ) as FormControl;\n  }\n\n  // =======================\n  // 🔄 Reset Autocomplete\n  // =======================\n  onAutoCompleteChange(control: FormControl) {\n    control.setValue(-1);\n    if (this.sequentialId.invalid) {\n      this.loaderTypeTitle.reset('');\n      this.loaderTypeId.reset(-1);\n    }\n  }\n\n  // =======================\n  // 🎯 Autocomplete Selections\n  // =======================\n\n  // When a sequential turn is selected\n  async onSelectSequentialTurn(sequentialTurn: SequentialTurn) {\n    this.sequentialId.setValue(sequentialTurn.SeqTurnId);\n    this.loadingService.setLoading(true);\n    try {\n      await this.loadRelationOfSequentialToLoader(sequentialTurn.SeqTurnId);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // When a loader type is selected\n  onSelectLoaderType(loaderType: LoaderType) {\n    this.loaderTypeId.setValue(loaderType.LoaderTypeId);\n  }\n\n  // =======================\n  // 🔍 Autocomplete Search\n  // =======================\n  searchSequentialTurn = async (query: string) => {\n    const res = await this.sequentialTurnService.GetSequentialTurns(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchLoaderType = async (query: string) => {\n    const res = await this.loaderTypeService.GetLoaderTypesInfo(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  // =======================\n  // 🔗 Load Relation Data\n  // =======================\n  private async loadRelationOfSequentialToLoader(sequentialId: number) {\n    const res =\n      await this.sequentialTurnService.GetRelationOfSequentialTurnToLoaderTypes(\n        sequentialId\n      );\n    if (!checkAndToastError(res, this.toast)) {\n      this.relationsAnnouncement = [];\n    }\n    this.relationsAnnouncement = this.flattenSequentialRelations(res.data!);\n  }\n\n  // Convert nested backend data to flat rows for table\n  private flattenSequentialRelations(\n    data: RelationOfSequentialTurnToLoaderType[]\n  ): RowRelationOfSequentialToLoader[] {\n    return data.flatMap((group) =>\n      group.LoaderTypes.map((sub) => ({\n        SeqTurnId: group.SeqTurnId,\n        SeqTurnTitle: group.SeqTurnTitle ?? '',\n        LoaderTypeId: sub.LoaderTypeId,\n        LoaderTypeTitle: sub.LoaderTypeTitle ?? '',\n      }))\n    );\n  }\n\n  // =======================\n  // ❌ Delete a Relation\n  // =======================\n  onDelete(row: RowRelationOfSequentialToLoader) {\n    this.confirmationService.confirm({\n      message: `آیا می‌خواهید رکورد ${row.SeqTurnTitle} - ${row.LoaderTypeTitle} را حذف کنید؟`,\n      header: 'حذف رکورد',\n      icon: 'pi pi-info-circle',\n      closable: true,\n      closeOnEscape: true,\n      rejectButtonProps: {\n        label: 'لغو',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'تایید',\n        severity: 'danger',\n      },\n      accept: async () => {\n        this.loadingService.setLoading(true);\n        try {\n          await this.deleteRelationSequentialToLoader(row);\n        } finally {\n          this.loadingService.setLoading(false);\n        }\n      },\n    });\n  }\n\n  private async deleteRelationSequentialToLoader(\n    row: RowRelationOfSequentialToLoader\n  ) {\n    const res =\n      await this.sequentialTurnService.DeleteRelationOfSequentialTurnToLoaderType(\n        row.SeqTurnId,\n        row.LoaderTypeId\n      );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.toast.success('موفق', res.data.Message);\n    await this.loadRelationOfSequentialToLoader(row.SeqTurnId);\n  }\n\n  // =======================\n  // ✅ Register New Relation\n  // =======================\n  async registerRelationSequentialToLoader() {\n    if (this.relationSequentialToLoaderForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res =\n        await this.sequentialTurnService.RegisterNewRelationOfSequentialTurnToLoaderType(\n          this.sequentialId.value,\n          this.loaderTypeId.value\n        );\n      if (!checkAndToastError(res, this.toast)) return;\n      this.toast.success('موفق', res.data?.Message ?? '');\n      await this.loadRelationOfSequentialToLoader(this.sequentialId.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n  \n    \n      @for (col of columns; track $index) {\n      {{ col }}\n      }\n    \n  \n\n  \n    \n      \n        \n      \n      {{ rowData.SeqTurnTitle }}\n      {{ rowData.LoaderTypeTitle }}\n    \n  \n\n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @for (col of columns; track $index) {      {{ col }}      }                                      {{ rowData.SeqTurnTitle }}      {{ rowData.LoaderTypeTitle }}        '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResuscitateTurnsFormComponent.html":{"url":"components/ResuscitateTurnsFormComponent.html","title":"component - ResuscitateTurnsFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResuscitateTurnsFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-real-time-turns-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                                TurnsTruckInfoBaseFormComponent\n                                DatePickerInput\n                                TimePickerInput\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./resuscitate-turns-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resuscitate-turns-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                resuscitateTurnForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                turnManagementService\n                            \n                            \n                                    \n                                turnsBaseComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                            \n                                    Async\n                                submitResuscitateTurnForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    truckId\n                                \n                                \n                                    sequentialTurnId\n                                \n                                \n                                    date\n                                \n                                \n                                    time\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitResuscitateTurnForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitResuscitateTurnForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resuscitateTurnForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    sequentialTurnId: ['', [Validators.required, Validators.min(0)]],\n    truckId: ['', [Validators.required, Validators.min(0)]],\n    date: [''],\n    time: ['00:00:00'],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        turnManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        turnsBaseComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TurnsTruckInfoBaseFormComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TurnsTruckInfoBaseFormComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        truckId\n                    \n                \n\n                \n                    \n                        gettruckId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sequentialTurnId\n                    \n                \n\n                \n                    \n                        getsequentialTurnId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n\n                \n                    \n                        getdate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n\n                \n                    \n                        gettime()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component.ts:92\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, Input, ViewChild } from '@angular/core';\nimport { TurnsTruckInfoBaseFormComponent } from '../turns-truck-info-base-form/turns-truck-info-base-form.component';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { TurnManagementService } from 'app/services/turn-management/turn-management.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { DatePickerInput } from 'app/components/shared/inputs/date-picker-input/date-picker-input.component.component';\nimport { TimePickerInput } from 'app/components/shared/inputs/time-picker-input/time-picker-input.component.component';\n\n@Component({\n  selector: 'app-real-time-turns-form',\n  imports: [\n    ButtonModule,\n    TurnsTruckInfoBaseFormComponent,\n    DatePickerInput,\n    TimePickerInput,\n  ],\n  templateUrl: './resuscitate-turns-form.component.html',\n  styleUrl: './resuscitate-turns-form.component.scss',\n})\nexport class ResuscitateTurnsFormComponent {\n  @ViewChild(TurnsTruckInfoBaseFormComponent)\n  turnsBaseComponent!: TurnsTruckInfoBaseFormComponent;\n\n  private loadingService = inject(LoadingService);\n  private turnManagementService = inject(TurnManagementService);\n  private destroy$ = new Subject();\n  private toast = inject(ToastService);\n  private fb = inject(FormBuilder);\n\n  resuscitateTurnForm = this.fb.group({\n    sequentialTurnId: ['', [Validators.required, Validators.min(0)]],\n    truckId: ['', [Validators.required, Validators.min(0)]],\n    date: [''],\n    time: ['00:00:00'],\n  });\n\n  loading = false;\n\n  // ♻️ Cleanup subscription\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // 🚦 Listen to loading state on init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async submitResuscitateTurnForm() {    \n    if (this.resuscitateTurnForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.turnManagementService.ResuscitateReserveTurn(\n        Number(this.truckId.value),\n        Number(this.sequentialTurnId.value),\n        this.date.value,\n        this.time.value\n      );\n      if (!checkAndToastError(response, this.toast)) return;\n      this.toast.success('موفق', response.data.Message);\n      this.resetForm();\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private resetForm() {\n    this.turnsBaseComponent.resetTurnsBaseForm();\n    this.resuscitateTurnForm.reset({\n      truckId: '',\n      sequentialTurnId: '',\n      time: '00:00:00',\n    });\n  }\n\n  get truckId(): FormControl {\n    return this.resuscitateTurnForm.get('truckId') as FormControl;\n  }\n  get sequentialTurnId(): FormControl {\n    return this.resuscitateTurnForm.get('sequentialTurnId') as FormControl;\n  }\n  get date(): FormControl {\n    return this.resuscitateTurnForm.get('date') as FormControl;\n  }\n  get time(): FormControl {\n    return this.resuscitateTurnForm.get('time') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResuscitateTurnsFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowRelationOfAnnouncement.html":{"url":"interfaces/RowRelationOfAnnouncement.html","title":"interface - RowRelationOfAnnouncement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RowRelationOfAnnouncement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementId\n                                        \n                                \n                                \n                                        \n                                            AnnouncementSGId\n                                        \n                                \n                                \n                                        \n                                            AnnouncementSGTitle\n                                        \n                                \n                                \n                                        \n                                            AnnouncementTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { AnnouncementGroupSubgroupManagementService } from 'app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service';\nimport { AnnouncementGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-group.model';\nimport { AnnouncementSubGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-subgroup.model';\nimport { RelationOfAnnouncementGroupAndSubGroup } from 'app/services/announcement_group_subgroup_management/model/relation-of-announcement-group-subgroup.model';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { TableModule } from 'primeng/table';\n\n// 📦 Interface for displaying flat relation data in table\ninterface RowRelationOfAnnouncement {\n  AnnouncementId: number;\n  AnnouncementTitle: string;\n  AnnouncementSGId: number;\n  AnnouncementSGTitle: string;\n}\n\n@Component({\n  selector: 'app-relation-of-announcement-group-and-sub-group',\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    SearchAutoCompleteComponent,\n    TableModule,\n    ConfirmDialogModule,\n  ],\n  providers: [ConfirmationService],\n  templateUrl: './relation-of-announcement-group-and-sub-group.component.html',\n  styleUrl: './relation-of-announcement-group-and-sub-group.component.scss',\n})\nexport class RelationOfAnnouncementGroupAndSubGroupComponent {\n  // 💉 Dependency Injection\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private confirmationService = inject(ConfirmationService);\n  private announcementService = inject(AnnouncementGroupSubgroupManagementService);\n\n  // 📊 UI State\n  loading = false;\n  addonWidth = '8rem';\n  cols = ['حذف', 'گروه اعلام بار', 'زیر گروه اعلام بار'];\n  relationsAnnouncement: RowRelationOfAnnouncement[] = [];\n\n  // 📄 Form Definition\n  announcementGroupAndSubGroupForm = this.fb.group({\n    announcementGroupId: [-1, Validators.min(0)],\n    announcementGroupTitle: ['', Validators.required],\n    announcementSubGroupId: [-1, Validators.min(0)],\n    announcementSubGroupTitle: ['', Validators.required],\n  });\n\n  // 🔍 Search Handlers\n  searchAnnouncementGroup = async (query: string) => {\n    const res = await this.announcementService.GetAnnouncementGroups(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchAnnouncementSubGroup = async (query: string) => {\n    const res = await this.announcementService.GetAnnouncementSupGroups(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  // 📥 Form Getters\n  get announcementGroupId(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementGroupId') as FormControl;\n  }\n\n  get announcementGroupTitle(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementGroupTitle') as FormControl;\n  }\n\n  get announcementSubGroupId(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementSubGroupId') as FormControl;\n  }\n\n  get announcementSubGroupTitle(): FormControl {\n    return this.announcementGroupAndSubGroupForm.get('announcementSubGroupTitle') as FormControl;\n  }\n\n  // 🧹 Reset value when input is cleared\n  onAutoCompleteChange(controller: FormControl) {\n    controller.setValue(-1);\n  }\n\n  // 🔘 Group selected from autocomplete\n  async onSelectAnnouncement(announcement: AnnouncementGroup) {\n    this.announcementGroupId.setValue(announcement.AnnouncementId);\n    try {\n      this.loadingService.setLoading(true);\n      await this.loadRelationOfAnnouncement(announcement.AnnouncementId);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // 🔘 Subgroup selected from autocomplete\n  onSelectSubAnnouncement(subGroup: AnnouncementSubGroup) {\n    this.announcementSubGroupId.setValue(subGroup.AnnouncementSGId);\n  }\n\n  // 📡 Fetch relation data from backend\n  private async loadRelationOfAnnouncement(announcementId: number) {\n    const res = await this.announcementService.GetRelationOfAnnouncementGroupAndSubGroup(announcementId);\n    if (!checkAndToastError(res, this.toast)) return;\n    this.relationsAnnouncement = this.flattenAnnouncementRelations(res.data!);\n  }\n\n  // 🔃 Convert nested relations to flat format for display\n  private flattenAnnouncementRelations(data: RelationOfAnnouncementGroupAndSubGroup[]): RowRelationOfAnnouncement[] {\n    return data.flatMap(group =>\n      group.AnnouncementSubGroups.map(sub => ({\n        AnnouncementId: group.AnnouncementId,\n        AnnouncementTitle: group.AnnouncementTitle ?? '',\n        AnnouncementSGId: sub.AnnouncementSGId,\n        AnnouncementSGTitle: sub.AnnouncementSGTitle ?? '',\n      }))\n    );\n  }\n\n  // ❌ Delete confirmation dialog\n  onDelete(row: RowRelationOfAnnouncement) {\n    this.confirmationService.confirm({\n      message: `آیا می‌خواهید رکورد با کد گروه ${row.AnnouncementId} و کد زیرگروه ${row.AnnouncementSGId} را حذف کنید؟`,\n      header: 'حذف رکورد',\n      icon: 'pi pi-info-circle',\n      closable: true,\n      closeOnEscape: true,\n      rejectButtonProps: {\n        label: 'لغو',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'تایید',\n        severity: 'danger',\n      },\n      accept: async () => {\n        try {\n          this.loadingService.setLoading(true);\n          await this.deleteRelationAnnouncement(row);\n        } finally {\n          this.loadingService.setLoading(false);\n        }\n      },\n    });\n  }\n\n  // ❌ Delete relation from backend\n  private async deleteRelationAnnouncement(row: RowRelationOfAnnouncement) {\n    const res = await this.announcementService.DeleteRelationOfAnnouncementGroupAndSubGroup(\n      row.AnnouncementId,\n      row.AnnouncementSGId\n    );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.toast.success('موفق', res.data.Message);\n    await this.loadRelationOfAnnouncement(row.AnnouncementId);\n  }\n\n  // ✅ Register new relation\n  async registerRelationAnnouncement() {\n    if (this.announcementGroupAndSubGroupForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      const res = await this.announcementService.RegisterNewRelationOfAnnouncementGroupAndSubGroup(\n        this.announcementGroupId.value,\n        this.announcementSubGroupId.value\n      );\n      if (!checkAndToastError(res, this.toast)) return;\n      this.toast.success('موفق', res.data?.Message ?? '');\n      await this.loadRelationOfAnnouncement(this.announcementGroupId.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowRelationOfSequential.html":{"url":"interfaces/RowRelationOfSequential.html","title":"interface - RowRelationOfSequential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RowRelationOfSequential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-announcement-sub-groups/relation-of-sequential-turn-to-announcement-sub-groups-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementSGId\n                                        \n                                \n                                \n                                        \n                                            AnnouncementSGTitle\n                                        \n                                \n                                \n                                        \n                                            SeqTurnId\n                                        \n                                \n                                \n                                        \n                                            SeqTurnTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { AnnouncementGroupSubgroupManagementService } from 'app/services/announcement_group_subgroup_management/announcement-group-subgroup-management.service';\nimport { AnnouncementGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-group.model';\nimport { AnnouncementSubGroup } from 'app/services/announcement_group_subgroup_management/model/announcement-subgroup.model';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { RelationOfSequentialTurnToAnnouncementSubGroup } from 'app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-announcementSubGroup.model';\nimport { SequentialTurn } from 'app/services/sequential-turn-management/model/sequential-turn.model';\nimport { SequentialTurnManagementService } from 'app/services/sequential-turn-management/sequential-turn-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { TableModule } from 'primeng/table';\n\n// 📦 Interface for displaying flat relation data in table\ninterface RowRelationOfSequential {\n  SeqTurnId: number;\n  SeqTurnTitle: string;\n  AnnouncementSGId: number;\n  AnnouncementSGTitle: string;\n}\n\n@Component({\n  selector: 'app-relation-of-announcement-group-and-sub-group',\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    SearchAutoCompleteComponent,\n    TableModule,\n    ConfirmDialogModule,\n  ],\n  providers: [ConfirmationService],\n  templateUrl: './relation-of-sequential-turn-to-announcement-sub-groups-form.component.html',\n  styleUrl: './relation-of-sequential-turn-to-announcement-sub-groups-form.component.scss',\n})\nexport class RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent {\n  // 💉 Dependency Injection\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private confirmationService = inject(ConfirmationService);\n  private sequentialTurnService = inject(SequentialTurnManagementService);\n  private announcementService = inject(\n    AnnouncementGroupSubgroupManagementService\n  );\n\n  // 📊 UI State\n  loading = false;\n  addonWidth = '8rem';\n  cols = ['حذف', 'صف نوبت دهی', 'زیر گروه اعلام بار'];\n  relationsSequential: RowRelationOfSequential[] = [];\n\n  // 📄 Form Definition\n  sequentialTurnForm = this.fb.group({\n    sequentialTurnId: [-1, Validators.min(0)],\n    sequentialTurnTitle: ['', Validators.required],\n    announcementGroupId: [-1, Validators.min(0)],\n    announcementGroupTitle: ['', Validators.required],\n    announcementSubGroupId: [-1, Validators.min(0)],\n    announcementSubGroupTitle: ['', Validators.required],\n  });\n\n  // 🔍 Search Handlers\n  searchSequentialTurn = async (query: string) => {\n    const res = await this.sequentialTurnService.GetSequentialTurns(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchAnnouncementGroup = async (query: string) => {\n    const res = await this.announcementService.GetAnnouncementGroups(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchAnnouncementSubGroup = async (query: string) => {\n    if (this.announcementGroupId.invalid) return [];\n\n    const res =\n      await this.announcementService.GetRelationOfAnnouncementGroupAndSubGroup(\n        this.announcementGroupId.value\n      );\n\n    if (!checkAndToastError(res, this.toast)) return [];\n\n    return res.data.flatMap((group) =>\n      group.AnnouncementSubGroups.map((sub) => ({\n        AnnouncementSGId: sub.AnnouncementSGId,\n        AnnouncementSGTitle: sub.AnnouncementSGTitle,\n      }))\n    );\n  };\n\n  // 📥 Form Getters\n  get sequentialTurnId(): FormControl {\n    return this.sequentialTurnForm.get('sequentialTurnId') as FormControl;\n  }\n\n  get sequentialTurnTitle(): FormControl {\n    return this.sequentialTurnForm.get('sequentialTurnTitle') as FormControl;\n  }\n\n  get announcementGroupId(): FormControl {\n    return this.sequentialTurnForm.get('announcementGroupId') as FormControl;\n  }\n\n  get announcementGroupTitle(): FormControl {\n    return this.sequentialTurnForm.get('announcementGroupTitle') as FormControl;\n  }\n\n  get announcementSubGroupId(): FormControl {\n    return this.sequentialTurnForm.get('announcementSubGroupId') as FormControl;\n  }\n\n  get announcementSubGroupTitle(): FormControl {\n    return this.sequentialTurnForm.get(\n      'announcementSubGroupTitle'\n    ) as FormControl;\n  }\n\n  // 🧹 Reset value when input is cleared\n  onAutoCompleteChange(controller: FormControl) {\n    controller.setValue(-1);\n\n    if (this.sequentialTurnId.invalid) {\n      this.announcementGroupId.reset(-1);\n      this.announcementGroupTitle.reset('');\n    }\n\n    if (this.announcementGroupId.invalid) {\n      this.announcementSubGroupId.reset(-1);\n      this.announcementSubGroupTitle.reset('');\n    }\n  }\n\n  async onSelectSequentialTurn(sequentialTurn: SequentialTurn) {\n    await this.loadRelationOfSequentialTurns(sequentialTurn.SeqTurnId);\n    this.sequentialTurnId.setValue(sequentialTurn.SeqTurnId);\n  }\n\n  // 🔘 Group selected from autocomplete\n  onSelectAnnouncement(announcement: AnnouncementGroup) {\n    this.announcementGroupId.setValue(announcement.AnnouncementId);\n  }\n\n  // 🔘 Subgroup selected from autocomplete\n  onSelectSubAnnouncement(subGroup: AnnouncementSubGroup) {\n    this.announcementSubGroupId.setValue(subGroup.AnnouncementSGId);\n  }\n\n  // 📡 Fetch relation data from backend\n  private async loadRelationOfSequentialTurns(sequentialId: number) {\n    const res =\n      await this.sequentialTurnService.GetRelationOfSequentialTurnToAnnouncementSubGroups(\n        sequentialId\n      );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.relationsSequential = this.flattenAnnouncementRelations(res.data!);\n  }\n\n  // 🔃 Convert nested relations to flat format for display\n  private flattenAnnouncementRelations(\n    data: RelationOfSequentialTurnToAnnouncementSubGroup[]\n  ): RowRelationOfSequential[] {\n    return data.flatMap((group) =>\n      group.AnnouncementSubGroups.map((sub) => ({\n        SeqTurnId: group.SeqTurnId,\n        SeqTurnTitle: group.SeqTurnTitle ?? '',\n        AnnouncementSGId: sub.AnnouncementSGId,\n        AnnouncementSGTitle: sub.AnnouncementSGTitle ?? '',\n      }))\n    );\n  }\n\n  // ❌ Delete confirmation dialog\n  onDelete(row: RowRelationOfSequential) {\n    this.confirmationService.confirm({\n      message: `آیا می‌خواهید رکورد ${row.SeqTurnTitle} - ${row.AnnouncementSGTitle} را حذف کنید؟`,\n      header: 'حذف رکورد',\n      icon: 'pi pi-info-circle',\n      closable: true,\n      closeOnEscape: true,\n      rejectButtonProps: {\n        label: 'لغو',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'تایید',\n        severity: 'danger',\n      },\n      accept: async () => {\n        try {\n          this.loadingService.setLoading(true);\n          await this.deleteRelationAnnouncement(row);\n        } finally {\n          this.loadingService.setLoading(false);\n        }\n      },\n    });\n  }\n\n  // ❌ Delete relation from backend\n  private async deleteRelationAnnouncement(row: RowRelationOfSequential) {\n    const res =\n      await this.sequentialTurnService.DeleteRelationOfSequentialTurnToAnnouncementSubGroup(\n        row.SeqTurnId,\n        row.AnnouncementSGId\n      );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.toast.success('موفق', res.data.Message);\n    await this.loadRelationOfSequentialTurns(row.SeqTurnId);\n  }\n\n  // ✅ Register new relation\n  async registerRelationAnnouncement() {\n    if (this.sequentialTurnForm.invalid || this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n      const res =\n        await this.sequentialTurnService.RegisterNewRelationOfSequentialTurnToAnnouncementSubGroup(\n          this.sequentialTurnId.value,\n          this.announcementSubGroupId.value\n        );\n      if (!checkAndToastError(res, this.toast)) return;\n      this.toast.success('موفق', res.data.Message);\n      await this.loadRelationOfSequentialTurns(this.sequentialTurnId.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowRelationOfSequentialToLoader.html":{"url":"interfaces/RowRelationOfSequentialToLoader.html","title":"interface - RowRelationOfSequentialToLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RowRelationOfSequentialToLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                        \n                                            LoaderTypeTitle\n                                        \n                                \n                                \n                                        \n                                            SeqTurnId\n                                        \n                                \n                                \n                                        \n                                            SeqTurnTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { TableModule } from 'primeng/table';\nimport { ConfirmationService } from 'primeng/api';\n\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { LoaderTypesService } from 'app/services/loader-types/loader-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { SequentialTurnManagementService } from 'app/services/sequential-turn-management/sequential-turn-management.service';\nimport { SequentialTurn } from 'app/services/sequential-turn-management/model/sequential-turn.model';\nimport { RelationOfSequentialTurnToLoaderType } from 'app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-loaderType.model';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ERROR_MESSAGES, ErrorCodes } from 'app/constants/error-messages';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\n\n// =======================\n// 📄 Table Row Interface\n// =======================\ninterface RowRelationOfSequentialToLoader {\n  SeqTurnId: number;\n  SeqTurnTitle: string;\n  LoaderTypeId: number;\n  LoaderTypeTitle: string;\n}\n\n// =======================\n// 🧩 Component Definition\n// =======================\n@Component({\n  selector: 'app-relation-of-announcement-group-and-sub-group',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    TableModule,\n    SearchAutoCompleteComponent,\n  ],\n  providers: [ConfirmationService],\n  templateUrl:\n    './relation-of-sequential-turn-to-loader-type-form.component.html',\n  styleUrl: './relation-of-sequential-turn-to-loader-type-form.component.scss',\n})\nexport class RelationOfSequentialTurnToLoaderTypeFormComponent {\n  // =======================\n  // 💉 Dependency Injection\n  // =======================\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private confirmationService = inject(ConfirmationService);\n  private loaderTypeService = inject(LoaderTypesService);\n  private sequentialTurnService = inject(SequentialTurnManagementService);\n\n  // =======================\n  // 📊 Component State\n  // =======================\n  loading = false;\n  addonWidth = '8rem';\n  cols = ['حذف', 'صفوف نوبت دهی', 'بارگیرها'];\n  relationsAnnouncement: RowRelationOfSequentialToLoader[] = [];\n\n  // =======================\n  // 📝 Reactive Form\n  // =======================\n  relationSequentialToLoaderForm = this.fb.group({\n    sequentialId: [-1, Validators.min(0)],\n    sequentialTitle: ['', Validators.required],\n    loaderTypeId: [-1, Validators.min(0)],\n    loaderTypeTitle: ['', Validators.required],\n  });\n\n  // =======================\n  // 📥 Form Getters\n  // =======================\n  get sequentialId() {\n    return this.relationSequentialToLoaderForm.get(\n      'sequentialId'\n    ) as FormControl;\n  }\n\n  get sequentialTitle() {\n    return this.relationSequentialToLoaderForm.get(\n      'sequentialTitle'\n    ) as FormControl;\n  }\n\n  get loaderTypeId() {\n    return this.relationSequentialToLoaderForm.get(\n      'loaderTypeId'\n    ) as FormControl;\n  }\n\n  get loaderTypeTitle() {\n    return this.relationSequentialToLoaderForm.get(\n      'loaderTypeTitle'\n    ) as FormControl;\n  }\n\n  // =======================\n  // 🔄 Reset Autocomplete\n  // =======================\n  onAutoCompleteChange(control: FormControl) {\n    control.setValue(-1);\n    if (this.sequentialId.invalid) {\n      this.loaderTypeTitle.reset('');\n      this.loaderTypeId.reset(-1);\n    }\n  }\n\n  // =======================\n  // 🎯 Autocomplete Selections\n  // =======================\n\n  // When a sequential turn is selected\n  async onSelectSequentialTurn(sequentialTurn: SequentialTurn) {\n    this.sequentialId.setValue(sequentialTurn.SeqTurnId);\n    this.loadingService.setLoading(true);\n    try {\n      await this.loadRelationOfSequentialToLoader(sequentialTurn.SeqTurnId);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // When a loader type is selected\n  onSelectLoaderType(loaderType: LoaderType) {\n    this.loaderTypeId.setValue(loaderType.LoaderTypeId);\n  }\n\n  // =======================\n  // 🔍 Autocomplete Search\n  // =======================\n  searchSequentialTurn = async (query: string) => {\n    const res = await this.sequentialTurnService.GetSequentialTurns(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  searchLoaderType = async (query: string) => {\n    const res = await this.loaderTypeService.GetLoaderTypesInfo(query);\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  // =======================\n  // 🔗 Load Relation Data\n  // =======================\n  private async loadRelationOfSequentialToLoader(sequentialId: number) {\n    const res =\n      await this.sequentialTurnService.GetRelationOfSequentialTurnToLoaderTypes(\n        sequentialId\n      );\n    if (!checkAndToastError(res, this.toast)) {\n      this.relationsAnnouncement = [];\n    }\n    this.relationsAnnouncement = this.flattenSequentialRelations(res.data!);\n  }\n\n  // Convert nested backend data to flat rows for table\n  private flattenSequentialRelations(\n    data: RelationOfSequentialTurnToLoaderType[]\n  ): RowRelationOfSequentialToLoader[] {\n    return data.flatMap((group) =>\n      group.LoaderTypes.map((sub) => ({\n        SeqTurnId: group.SeqTurnId,\n        SeqTurnTitle: group.SeqTurnTitle ?? '',\n        LoaderTypeId: sub.LoaderTypeId,\n        LoaderTypeTitle: sub.LoaderTypeTitle ?? '',\n      }))\n    );\n  }\n\n  // =======================\n  // ❌ Delete a Relation\n  // =======================\n  onDelete(row: RowRelationOfSequentialToLoader) {\n    this.confirmationService.confirm({\n      message: `آیا می‌خواهید رکورد ${row.SeqTurnTitle} - ${row.LoaderTypeTitle} را حذف کنید؟`,\n      header: 'حذف رکورد',\n      icon: 'pi pi-info-circle',\n      closable: true,\n      closeOnEscape: true,\n      rejectButtonProps: {\n        label: 'لغو',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'تایید',\n        severity: 'danger',\n      },\n      accept: async () => {\n        this.loadingService.setLoading(true);\n        try {\n          await this.deleteRelationSequentialToLoader(row);\n        } finally {\n          this.loadingService.setLoading(false);\n        }\n      },\n    });\n  }\n\n  private async deleteRelationSequentialToLoader(\n    row: RowRelationOfSequentialToLoader\n  ) {\n    const res =\n      await this.sequentialTurnService.DeleteRelationOfSequentialTurnToLoaderType(\n        row.SeqTurnId,\n        row.LoaderTypeId\n      );\n    if (!checkAndToastError(res, this.toast)) return;\n    this.toast.success('موفق', res.data.Message);\n    await this.loadRelationOfSequentialToLoader(row.SeqTurnId);\n  }\n\n  // =======================\n  // ✅ Register New Relation\n  // =======================\n  async registerRelationSequentialToLoader() {\n    if (this.relationSequentialToLoaderForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res =\n        await this.sequentialTurnService.RegisterNewRelationOfSequentialTurnToLoaderType(\n          this.sequentialId.value,\n          this.loaderTypeId.value\n        );\n      if (!checkAndToastError(res, this.toast)) return;\n      this.toast.success('موفق', res.data?.Message ?? '');\n      await this.loadRelationOfSequentialToLoader(this.sequentialId.value);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchAutoCompleteComponent.html":{"url":"components/SearchAutoCompleteComponent.html","title":"component - SearchAutoCompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchAutoCompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-auto-complete\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            AutoCompleteModule\n                            InputGroupAddonModule\n                            InputGroupModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-auto-complete.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-auto-complete.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cachedResults\n                            \n                            \n                                focusedCached\n                            \n                            \n                                    Private\n                                lastSearchKey\n                            \n                            \n                                loading\n                            \n                            \n                                showEmptyMessage\n                            \n                            \n                                suggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCached\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurInput\n                            \n                            \n                                onFocusInput\n                            \n                            \n                                    Async\n                                onSearch\n                            \n                            \n                                onSelectAutoComplete\n                            \n                            \n                                onValueChanged\n                            \n                            \n                                    Private\n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                allOptions\n                            \n                            \n                                cachingEnabled\n                            \n                            \n                                cachingMode\n                            \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                lazySearch\n                            \n                            \n                                minLength\n                            \n                            \n                                optionLabel\n                            \n                            \n                                optionValue\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                            \n                                showIconOptionSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectSuggestion\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:69\n                            \n                        \n                \n                    \n                        Width CSS value for addon (icon/label)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        allOptions\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:87\n                            \n                        \n                \n                    \n                        List of all options for client-side filtering\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cachingEnabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:75\n                            \n                        \n                \n                    \n                        Enable or disable caching\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cachingMode\n                    \n                \n                \n                    \n                        Type :     \"CharacterPrefix\" | \"Focus\"\n\n                    \n                \n                \n                    \n                        Default value : 'CharacterPrefix'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:66\n                            \n                        \n                \n                    \n                        Caching strategy mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:72\n                            \n                        \n                \n                    \n                        Reactive FormControl bound to the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:57\n                            \n                        \n                \n                    \n                        Whether input is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:60\n                            \n                        \n                \n                    \n                        Icon CSS class to display in input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:63\n                            \n                        \n                \n                    \n                        Label text shown instead of icon (if provided)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazySearch\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:96\n                            \n                        \n                \n                    \n                        Optional asynchronous search function.\nShould return a promise resolving to filtered results based on query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:84\n                            \n                        \n                \n                    \n                        Minimum characters before triggering search\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'label'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:78\n                            \n                        \n                \n                    \n                        Object property used for displaying suggestion labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionValue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'value'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:81\n                            \n                        \n                \n                    \n                        Object property used as suggestion value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'جستجو'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:51\n                            \n                        \n                \n                    \n                        Placeholder text for the input box\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:54\n                            \n                        \n                \n                    \n                        Whether input is readonly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showIconOptionSelected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:90\n                            \n                        \n                \n                    \n                        Whether to show icon inside input for selected option\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectSuggestion\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:104\n                            \n                        \n                \n                    \n                        Emits the selected suggestion item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:101\n                            \n                        \n                \n                    \n                        Emits current input string value\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCached\n                        \n                    \n                \n            \n            \n                \nclearCached()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:249\n                        \n                    \n\n\n            \n                \n                        Clears the cache to reset lazy search results.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Detect changes on inputs such as disabled\nUpdate the FormControl state accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Initialize the component, update control disabled state\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlurInput\n                        \n                    \n                \n            \n            \n                \nonBlurInput(_: EventTarget | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:151\n                        \n                    \n\n\n            \n                \n                        On input blur event handler\nIf readonly, mark control untouched to prevent validation.\nReset focusedCached flag for caching logic.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        EventTarget | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusInput\n                        \n                    \n                \n            \n            \n                \nonFocusInput(input: EventTarget | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:138\n                        \n                    \n\n\n            \n                \n                        On input focus event handler\nImmediately blur if input is disabled to prevent interaction.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        EventTarget | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSearch(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Handles user input search events.\nUses client-side filtering or lazy async search with caching.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectAutoComplete\n                        \n                    \n                \n            \n            \n                \nonSelectAutoComplete(event: AutoCompleteSelectEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Emits the selected suggestion when user picks an item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        AutoCompleteSelectEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onValueChanged\n                        \n                    \n                \n            \n            \n                \nonValueChanged(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Emits the current input value on input changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Enable or disable the input control based on disabled input\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cachedResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusedCached\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastSearchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '7587ae60f0243cf7b6a15b4aa553d6d53c1ccf7401f6be1d5b8ad66ee7cf1d9d'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEmptyMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-auto-complete/search-auto-complete.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AutoCompleteModule,\n  AutoCompleteSelectEvent,\n} from 'primeng/autocomplete';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\n\n@Component({\n  selector: 'app-search-auto-complete',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AutoCompleteModule,\n    InputGroupAddonModule,\n    InputGroupModule,\n  ],\n  templateUrl: './search-auto-complete.component.html',\n  styleUrl: './search-auto-complete.component.scss',\n})\nexport class SearchAutoCompleteComponent>\n  implements OnInit, OnChanges\n{\n  // Cache for lazy search results to optimize repeated queries\n  private cachedResults: T[] = [];\n\n  // Cache key to compare and avoid redundant searches (default to some fixed hash)\n  private lastSearchKey =\n    '7587ae60f0243cf7b6a15b4aa553d6d53c1ccf7401f6be1d5b8ad66ee7cf1d9d';\n\n  suggestions: T[] = [];             // Current suggestions shown in dropdown\n  showEmptyMessage = false;          // Show \"No results found\" message flag\n  loading = false;                   // Loading state for async search\n\n  focusedCached = false;             // Flag to manage caching behavior on focus\n\n  // ---------- INPUTS ----------\n\n  /** Placeholder text for the input box */\n  @Input() placeholder = 'جستجو';\n\n  /** Whether input is readonly */\n  @Input() readOnly = false;\n\n  /** Whether input is disabled */\n  @Input() disabled = false;\n\n  /** Icon CSS class to display in input */\n  @Input() icon = 'pi pi-search';\n\n  /** Label text shown instead of icon (if provided) */\n  @Input() label = '';\n\n  /** Caching strategy mode */\n  @Input() cachingMode: 'CharacterPrefix' | 'Focus' = 'CharacterPrefix';\n\n  /** Width CSS value for addon (icon/label) */\n  @Input() addonWidth = '';\n\n  /** Reactive FormControl bound to the input */\n  @Input() control = new FormControl('');\n\n  /** Enable or disable caching */\n  @Input() cachingEnabled = true;\n\n  /** Object property used for displaying suggestion labels */\n  @Input() optionLabel = 'label';\n\n  /** Object property used as suggestion value */\n  @Input() optionValue = 'value';\n\n  /** Minimum characters before triggering search */\n  @Input() minLength = 3;\n\n  /** List of all options for client-side filtering */\n  @Input() allOptions: T[] = [];\n\n  /** Whether to show icon inside input for selected option */\n  @Input() showIconOptionSelected = false;\n\n  /**\n   * Optional asynchronous search function.\n   * Should return a promise resolving to filtered results based on query.\n   */\n  @Input() lazySearch?: (query: string) => Promise;\n\n  // ---------- OUTPUTS ----------\n\n  /** Emits current input string value */\n  @Output() valueChange = new EventEmitter();\n\n  /** Emits the selected suggestion item */\n  @Output() selectSuggestion = new EventEmitter();\n\n  // ---------- LIFECYCLE HOOKS ----------\n\n  /** Initialize the component, update control disabled state */\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  /**\n   * Detect changes on inputs such as disabled\n   * Update the FormControl state accordingly.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  // ---------- PRIVATE HELPERS ----------\n\n  /** Enable or disable the input control based on `disabled` input */\n  private setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n\n  /**\n   * On input focus event handler\n   * Immediately blur if input is disabled to prevent interaction.\n   */\n  onFocusInput(input: EventTarget | null): void {\n    const inputElement = input as HTMLInputElement;\n    if (this.disabled) {\n      inputElement?.blur();\n      return;\n    }\n  }\n\n  /**\n   * On input blur event handler\n   * If readonly, mark control untouched to prevent validation.\n   * Reset focusedCached flag for caching logic.\n   */\n  onBlurInput(_: EventTarget | null): void {\n    if (this.readOnly) {\n      this.control.markAsUntouched();\n      return;\n    }\n    if (this.cachingMode === \"Focus\") {\n      this.focusedCached = false;\n      this.clearCached();\n    }\n  }\n\n  // ---------- SEARCH HANDLER ----------\n\n  /**\n   * Handles user input search events.\n   * Uses client-side filtering or lazy async search with caching.\n   */\n  async onSearch(event: { query: string }) {\n    const query = event.query.trimStart();\n\n    // Clear suggestions if query is too short\n    if (query.length \n        (item[this.optionLabel] as string)\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      );\n      this.showEmptyMessage = this.suggestions.length === 0;\n      return;\n    }\n\n    // Lazy search mode with caching enabled\n    const currentKey = query.substring(0, this.minLength);\n\n    if (this.cachingEnabled) {\n      const isCharPrefixMatch =\n        this.cachingMode === 'CharacterPrefix' &&\n        currentKey === this.lastSearchKey;\n        \n      const isFocusMode = this.cachingMode === 'Focus' && this.focusedCached;\n      \n      if (isCharPrefixMatch || isFocusMode) {\n        if (currentKey === this.lastSearchKey) {\n          // Filter cached results to refine suggestions without calling lazySearch again\n          this.suggestions = this.cachedResults.filter((item) =>\n            (item[this.optionLabel] as string)\n          .toLowerCase()\n          .includes(query.toLowerCase())\n        );\n          this.showEmptyMessage = this.suggestions.length === 0;\n          return;\n        }\n      }\n    }\n\n    // Fetch fresh results asynchronously from lazySearch\n    try {\n      this.loading = true;\n\n      // Use cached key or full query depending on cachingEnabled flag\n      const searchQuery = this.cachingEnabled ? currentKey : query;\n      const result = await this.lazySearch(searchQuery);\n\n      // Update cache and suggestions\n      this.lastSearchKey = currentKey;\n      this.cachedResults = result;\n      this.suggestions = result;\n      this.focusedCached = true;\n      this.showEmptyMessage = result.length === 0;\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Emits the selected suggestion when user picks an item.\n   */\n  onSelectAutoComplete(event: AutoCompleteSelectEvent) {\n    this.selectSuggestion.emit(event.value);\n  }\n\n  /**\n   * Emits the current input value on input changes.\n   */\n  onValueChanged(input: any) {\n    this.valueChange.emit(input.value);\n  }\n\n  /**\n   * Clears the cache to reset lazy search results.\n   */\n  clearCached(): void {\n    this.lastSearchKey =\n      '7587ae60f0243cf7b6a15b4aa553d6d53c1ccf7401f6be1d5b8ad66ee7cf1d9d';\n    this.cachedResults = [];\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n      \n        \n          {{ label }}\n        \n      \n    \n\n    \n    \n\n    \n    \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ label }}                                                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchAutoCompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/search-input/search-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            InputGroupAddonModule\n                            InputGroupModule\n                            ButtonModule\n                                TextInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cachedResults\n                            \n                            \n                                    Private\n                                    Optional\n                                controlSubscription\n                            \n                            \n                                    Private\n                                lastCachedKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputChanged\n                            \n                            \n                                onSearchButtonClick\n                            \n                            \n                                    Async\n                                performSearch\n                            \n                            \n                                refreshSearch\n                            \n                            \n                                    Async\n                                triggerSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                asyncSearchFn\n                            \n                            \n                                autoTriggerSearch\n                            \n                            \n                                control\n                            \n                            \n                                debounceTimeMs\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSearchButton\n                            \n                            \n                                enableCaching\n                            \n                            \n                                fallbackToAllWhenQueryShort\n                            \n                            \n                                icon\n                            \n                            \n                                itemMatchesQuery\n                            \n                            \n                                label\n                            \n                            \n                                minSearchLength\n                            \n                            \n                                onSearchQuery\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                            \n                                searchButtonLabel\n                            \n                            \n                                staticData\n                            \n                            \n                                validationField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rawInput\n                            \n                            \n                                searchResult\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        asyncSearchFn\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoTriggerSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounceTimeMs\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 300\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSearchButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableCaching\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fallbackToAllWhenQueryShort\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemMatchesQuery\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minSearchLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSearchQuery\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchButtonLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'جستجو'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticData\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validationField\n                    \n                \n                \n                    \n                        Type :         ValidationField | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:43\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rawInput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchResult\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:73\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Subscribes to form control changes and triggers search if auto search is enabled.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanged\n                        \n                    \n                \n            \n            \n                \nonInputChanged(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Handle raw input value change — emits unprocessed string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchButtonClick\n                        \n                    \n                \n            \n            \n                \nonSearchButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Triggered when user clicks the search button manually.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        performSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    performSearch(query: string, forceRefresh)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Core search logic — chooses between static filtering, async search, or single-result search.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                forceRefresh\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSearch\n                        \n                    \n                \n            \n            \n                \nrefreshSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Exposed method to manually force refresh search results.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        triggerSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerSearch(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Trigger search and emit final results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cachedResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        controlSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastCachedKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/search-input/search-input.component.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { ButtonModule } from 'primeng/button';\nimport { debounceTime, distinctUntilChanged, Subscription } from 'rxjs';\n\nimport { ValidationField } from 'app/constants/validation-schema';\nimport { TextInputComponent } from '../text-input/text-input.component';\n\n@Component({\n  selector: 'app-search-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InputGroupAddonModule,\n    InputGroupModule,\n    ButtonModule,\n    TextInputComponent,\n  ],\n  templateUrl: './search-input.component.html',\n  styleUrl: './search-input.component.scss',\n})\nexport class SearchInputComponent implements OnInit, OnDestroy,OnChanges {\n  private controlSubscription?: Subscription;\n\n  // -------------------------\n  // 🔧 Form & Validation\n  // -------------------------\n  @Input() control = new FormControl('');\n  @Input() validationField: ValidationField | null = null;\n\n  // -------------------------\n  // 🎨 UI Customization\n  // -------------------------\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() icon = 'pi pi-search';\n  @Input() readOnly = false;\n  @Input() disabled = false;\n  @Input() addonWidth: string | null = null;\n  @Input() searchButtonLabel = 'جستجو';\n  @Input() disableSearchButton = false;\n\n  // -------------------------\n  // 🔍 Search Behavior\n  // -------------------------\n  @Input() staticData: T[] = [];\n  @Input() asyncSearchFn?: (query: string) => Promise;\n  @Input() onSearchQuery?: (query: string) => Promise;\n  @Input() itemMatchesQuery?: (item: T, query: string) => boolean;\n  @Input() minSearchLength = 3;\n  @Input() autoTriggerSearch = false;\n  @Input() enableCaching = true;\n  @Input() debounceTimeMs = 300;\n  @Input() fallbackToAllWhenQueryShort = false;\n\n  // -------------------------\n  // 📤 Output Events\n  @Output() rawInput = new EventEmitter(); // Emits raw user input\n  @Output() searchResult = new EventEmitter(); // Emits processed results\n\n  // -------------------------\n  // 🧠 Internal State\n  private cachedResults: T[] = [];\n  private lastCachedKey = '';\n\n  /**\n   * Subscribes to form control changes and triggers search if auto search is enabled.\n   */\n  ngOnInit(): void {\n    this.controlSubscription = this.control.valueChanges\n      .pipe(debounceTime(this.debounceTimeMs), distinctUntilChanged())\n      .subscribe((value) => {\n        if (this.autoTriggerSearch) {\n          this.triggerSearch(value ?? '');\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.controlSubscription?.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['staticData'] && !changes['staticData'].firstChange) {\n      const query = this.control?.value ?? '';\n      if (\n        !this.asyncSearchFn &&\n        this.autoTriggerSearch &&\n        query.length >= this.minSearchLength\n      ) {\n        this.triggerSearch(query);\n      }\n    }\n  }\n\n  /**\n   * Core search logic — chooses between static filtering, async search, or single-result search.\n   */\n  async performSearch(query: string, forceRefresh = false): Promise {\n    query = query.trimStart();\n\n    // Show fallback data if query is too short\n    if (query.length \n        this.itemMatchesQuery!(item, query)\n      );\n    }\n\n    // Cached async filtering\n    const queryKey = query.substring(0, this.minSearchLength);\n    if (\n      !forceRefresh &&\n      this.enableCaching &&\n      queryKey === this.lastCachedKey\n    ) {\n      return this.cachedResults.filter((item) =>\n        this.itemMatchesQuery!(item, query)\n      );\n    }\n\n    const freshData = await this.asyncSearchFn(query);\n    this.lastCachedKey = queryKey;\n    this.cachedResults = freshData;\n    return freshData;\n  }\n\n  /**\n   * Exposed method to manually force refresh search results.\n   */\n  refreshSearch(): Promise {\n    const query = this.control.value ?? '';\n    return this.performSearch(query, true);\n  }\n\n  /**\n   * Trigger search and emit final results.\n   */\n  async triggerSearch(query: string): Promise {\n    const results = await this.performSearch(query);\n    this.searchResult.emit(results);\n  }\n\n  /**\n   * Handle raw input value change — emits unprocessed string.\n   */\n  onInputChanged(event: Event): void {\n    const rawValue = (event.target as HTMLInputElement).value;\n    this.rawInput.emit(rawValue);\n  }\n\n  /**\n   * Triggered when user clicks the search button manually.\n   */\n  onSearchButtonClick(): void {\n    if (!this.autoTriggerSearch) {\n      this.control.markAllAsTouched();\n      this.triggerSearch(this.control.value ?? '');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectInputComponent.html":{"url":"components/SelectInputComponent.html","title":"component - SelectInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/select-input/select-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            SelectModule\n                            InputGroup\n                            InputGroupAddon\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./select-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./select-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compareFn\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurInput\n                            \n                            \n                                onFocusInput\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-user'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compareFn\n                        \n                    \n                \n            \n            \n                \ncompareFn(o1: any, o2: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                o1\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                o2\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlurInput\n                        \n                    \n                \n            \n            \n                \nonBlurInput(_: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusInput\n                        \n                    \n                \n            \n            \n                \nonFocusInput(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/select-input/select-input.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, SimpleChanges } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SelectModule } from 'primeng/select';\nimport { InputGroup } from 'primeng/inputgroup';\nimport { InputGroupAddon } from 'primeng/inputgroupaddon';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'app-select-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    SelectModule,\n    InputGroup,\n    InputGroupAddon,\n    NgClass,\n  ],\n  templateUrl: './select-input.component.html',\n  styleUrl: './select-input.component.scss',\n})\nexport class SelectInputComponent {\n  @Input() options: { label: string; value: any }[] = [];\n  @Input() control = new FormControl(null);\n  @Input() readOnly = false;\n  @Input() placeholder = '';\n  @Input() disabled = false;\n  @Input() icon: string = 'pi pi-user';\n  @Input() label = '';\n  @Input() addonWidth: string | null = null;\n\n  compareFn(o1: any, o2: any): boolean {\n    return o1 === o2;\n  }\n\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n\n  onFocusInput(input: HTMLInputElement): void {\n    if (this.disabled) {\n      input.blur();\n    }\n  }\n\n  onBlurInput(_: HTMLInputElement): void {\n    if (this.readOnly) {\n      this.control.markAsUntouched();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedNodes.html":{"url":"interfaces/SelectedNodes.html","title":"interface - SelectedNodes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectedNodes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:24\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { CommonModule } from '@angular/common';\nimport { UserManagementService } from 'app/services/user-management/user-management.service';\nimport { SearchInputComponent } from 'app/components/shared/inputs/search-input/search-input.component';\nimport { SoftwareUserInfo } from 'app/data/model/software-user-info.model';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ButtonModule } from 'primeng/button';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { TextInputComponent } from '../../../shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport {Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\n\ninterface SelectedNodes {\n  [key: string]: { checked: boolean; partialChecked?: boolean };\n}\n\n@Component({\n  selector: 'app-users-menu-access-form',\n  imports: [\n    TreeTableModule,\n    CommonModule,\n    SearchInputComponent,\n    ButtonModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n  ],\n  templateUrl: './users-menu-access-form.component.html',\n  styleUrl: './users-menu-access-form.component.scss',\n})\nexport class UsersMenuAccessFormComponent implements OnInit, OnDestroy {\n  private userManager = inject(UserManagementService);\n  private toast = inject(ToastService);\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private destroy$ = new Subject();\n\n  isLoading: boolean = false;\n  accessTable?: TreeNode[] = [];\n  selectedNodes: SelectedNodes = {};\n  selectedNodesCopy: SelectedNodes = {};\n  userInfo: SoftwareUserInfo = { UserId: 0 };\n\n  searchForm: FormGroup = this.fb.group({\n    searchPhone: ['', ValidationSchema.mobile],\n  });\n  cols = [\n    { field: 'PGTitle', header: 'نام منو' },\n    { field: 'Description', header: 'توضیحات' },\n  ];\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.isLoading = value));\n  }\n\n  async SaveChanges() {\n    if (this.isLoading) return;\n\n    this.loadingService.setLoading(true);\n\n    try {\n      // === Step 1: Disable old access (selectedNodesCopy, PAccess: false) ===\n      const disablePromises: Promise>[] = [];\n\n      for (const key in this.selectedNodesCopy) {\n        if (\n          this.selectedNodesCopy[key].checked ||\n          this.selectedNodesCopy[key].partialChecked\n        ) {\n          if (key.includes('-')) {\n            disablePromises.push(\n              this.userManager.ChangeUserWebProcessAccess(\n                this.userInfo.UserId,\n                Number(key.split('-')[1]),\n                false\n              )\n            );\n          } else {\n            disablePromises.push(\n              this.userManager.ChangeUserWebProcessGroupAccess(\n                this.userInfo.UserId,\n                Number(key),\n                false\n              )\n            );\n          }\n        }\n      }\n\n      const disableResults = await Promise.allSettled(disablePromises);\n      const firstDisableError = disableResults.find(\n        (r) => r.status === 'rejected'\n      ) as PromiseRejectedResult | undefined;\n\n      if (firstDisableError) {\n        const error =\n          (firstDisableError.reason as any)?.error?.message ??\n          'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n        this.toast.error('خطا', error);\n        return;\n      }\n\n      // === Step 2: Enable new access (selectedNodes, PAccess: true) ===\n      const enablePromises: Promise>[] = [];\n\n      for (const key in this.selectedNodes) {\n        if (\n          this.selectedNodes[key].checked ||\n          this.selectedNodes[key].partialChecked\n        ) {\n          if (key.includes('-')) {\n            enablePromises.push(\n              this.userManager.ChangeUserWebProcessAccess(\n                this.userInfo.UserId,\n                Number(key.split('-')[1]),\n                true\n              )\n            );\n          } else {\n            enablePromises.push(\n              this.userManager.ChangeUserWebProcessGroupAccess(\n                this.userInfo.UserId,\n                Number(key),\n                true\n              )\n            );\n          }\n        }\n      }\n\n      const enableResults = await Promise.allSettled(enablePromises);\n      const firstEnableError = enableResults.find(\n        (r) => r.status === 'rejected'\n      ) as PromiseRejectedResult | undefined;\n      const firstEnableSuccess = enableResults.find(\n        (r) => r.status === 'fulfilled'\n      ) as PromiseFulfilledResult> | undefined;\n\n      if (firstEnableError) {\n        const error =\n          (firstEnableError.reason as any)?.error?.message ??\n          'خطای غیرمنتظره‌ای در اعمال دسترسی رخ داد';\n        this.toast.error('خطا', error);\n      } else {\n        const message =\n          firstEnableSuccess?.value?.data?.Message ??\n          'دسترسی با موفقیت اعمال شد';\n        this.toast.success('موفق', message);\n      }\n\n      // === Reload the table ===\n      await this.LoadWebProcessGroups_WebProcessesTable();\n    } catch (err) {\n      this.toast.error('خطا', 'خطای بحرانی در ذخیره‌سازی رخ داد');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private async LoadWebProcessGroups_WebProcessesTable(): Promise {\n    const response = await this.userManager.GetWebProcessGroups_WebProcesses(\n      this.userInfo.MobileNumber!\n    );\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطا در هنگام براگزاری اطلاعات'\n      );\n      this.accessTable = [];\n      return;\n    }\n\n    const loadedTable = response.data;\n    this.accessTable =\n      loadedTable.map((x) => ({\n        key: x.PGId.toString(),\n        data: {\n          PGTitle: x.PGTitle,\n          Description: '',\n        },\n        checked: x.PGAccess === true,\n        children: x.WebProcesses?.map((y) => ({\n          key: x.PGId.toString() + '-' + y.PId.toString(),\n          data: {\n            PGTitle: y.PTitle,\n            Description: y.Description,\n          },\n          checked: y.PAccess === true,\n          children: [],\n        })),\n      })) ?? [];\n\n    this.accessTable.forEach((parentNode) => {\n      this.selectedNodes[parentNode.key!] = {\n        checked: parentNode.checked!,\n        partialChecked: parentNode.partialSelected,\n      };\n      parentNode.children?.forEach((childNode) => {\n        this.selectedNodes[childNode.key!] = {\n          checked: childNode.checked!,\n          partialChecked: childNode.partialSelected,\n        };\n      });\n    });\n\n    this.selectedNodesCopy = structuredClone(this.selectedNodes);\n  }\n\n  async getUserAccessMenu() {\n    if (this.searchForm.invalid || this.isLoading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const response = await this.userManager.GetSoftwareUserInfo(\n        this.searchPhone.value\n      );\n      if (!response.success || !response.data) {\n        this.toast.error(\n          'خطا',\n          response.error?.message ?? 'خطا در هنگام براگزاری اطلاعات'\n        );\n        this.accessTable = [];\n        return;\n      }\n\n      this.userInfo = {\n        UserId: response.data?.UserId,\n        MobileNumber: response.data?.MobileNumber,\n      };\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n\n    this.loadingService.setLoading(true);\n    await this.LoadWebProcessGroups_WebProcessesTable();\n    this.loadingService.setLoading(false);\n  }\n\n  get searchPhone() {\n    return this.searchForm.get('searchPhone') as FormControl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectionKey.html":{"url":"interfaces/SelectionKey.html","title":"interface - SelectionKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectionKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            isHidden\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            partialChecked\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isHidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isHidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partialChecked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partialChecked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgClass } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTable, TreeTableModule } from 'primeng/treetable';\nimport { SearchInputComponent } from '../../shared/inputs/search-input/search-input.component';\nimport { ButtonModule } from 'primeng/button';\nimport { FormControl } from '@angular/forms';\n\ninterface SelectionKey {\n  checked: boolean;\n  partialChecked?: boolean;\n  isHidden: boolean;\n}\n\nexport interface TreeTableChangedData {\n  parent?: any;\n  children: any[];\n}\n\n@Component({\n  selector: 'app-tree-table-checkbox',\n  templateUrl: './tree-table-checkbox.component.html',\n  styleUrl: './tree-table-checkbox.component.scss',\n  imports: [TreeTableModule, NgClass, ButtonModule,SearchInputComponent],\n})\nexport class TreeTableCheckboxComponent implements OnInit, OnChanges {\n  @ViewChild('treeTable') tt!: TreeTable;\n\n  @Input() tree: TreeNode[] = [];\n  @Input() parentField = '';\n  @Input() childField = '';\n  @Input() cols: string[] = [];\n  @Input() rows: string[][] = [];\n  @Input() enabledSearch = false;\n  @Input() searchFields: string[] = [];\n  @Input() searchPlaceholder = '';\n  @Input() paginator = false;\n  @Input() rowsPerPage = 10;\n  @Input() paginatorLocale = 'en';\n  @Input() enabledAutoSearch: boolean = true;\n\n  @Output() onTableCheckBoxChange = new EventEmitter();\n  @Output() onSearch = new EventEmitter();\n\n  treeMap = new Map();\n  selectionKeys: Record = {};\n  lastSelectionKeys: Record = {};\n  searchTerm = new FormControl('');\n\n  ngOnInit(): void {\n    this.tree = this.initializeTree();\n    this.buildTreeMap(this.tree);\n    this.lastSelectionKeys = structuredClone(this.selectionKeys);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['tree']) {\n      this.tree = this.initializeTree();\n      this.buildTreeMap(this.tree);\n      this.lastSelectionKeys = structuredClone(this.selectionKeys);\n    }\n  }\n\n  selectionKeysChanged(newKeys: Record): void {\n    const allKeys = new Set([\n      ...Object.keys(this.lastSelectionKeys),\n      ...Object.keys(newKeys),\n    ]);\n\n    const children: any[] = [];\n    let parent: any | null = null;\n\n    for (const key of allKeys) {\n      const old = this.lastSelectionKeys[key];\n      const current = newKeys[key];\n\n      const oldChecked = old?.checked ?? false;\n      const oldPartial = old?.partialChecked ?? false;\n      const newChecked = current?.checked ?? false;\n      const newPartial = current?.partialChecked ?? false;\n\n      const hasChanged = oldChecked !== newChecked || oldPartial !== newPartial;\n      if (!hasChanged) continue;\n\n      const node = this.treeMap.get(key);\n      if (!node) continue;\n\n      const isParent = key.length  this.setKeysRecursively(node, `${i}`));\n  }\n\n  private setKeysRecursively(node: TreeNode, path: string): TreeNode {\n    const parentChecked = !!node.data?.[this.parentField];\n    let hasCheckedChild = false;\n    let hasUncheckedChild = false;\n\n    const children =\n      node.children?.map((child, i) => {\n        const childKey = `${path}-${i}`;\n        const checked = !!child.data?.[this.childField];\n        this.selectionKeys[childKey] = { checked, isHidden: false };\n\n        checked ? (hasCheckedChild = true) : (hasUncheckedChild = true);\n\n        return { ...child, key: childKey };\n      }) ?? [];\n\n    const partialChecked = hasCheckedChild && hasUncheckedChild;\n    const checked = partialChecked ? false : parentChecked;\n\n    this.selectionKeys[path] = { checked, partialChecked, isHidden: false };\n    return { ...node, key: path, children };\n  }\n\n  private buildTreeMap(nodes: TreeNode[]): void {\n    for (const node of nodes) {\n      if (!node.key) continue;\n      this.treeMap.set(node.key, node);\n      if (node.children?.length) {\n        this.buildTreeMap(node.children);\n      }\n    }\n  }\n\n  filterTree(query: string): void {\n    if (this.enabledAutoSearch) {\n      this.filters(query);\n      this.onSearch.emit(query);\n    }\n  }\n\n  onClickSearch() {\n    if (!this.enabledAutoSearch) {\n      this.filters(this.searchTerm.value ?? '');\n      this.onSearch.emit(this.searchTerm.value ?? '');\n    }\n  }\n\n  private filters(query: string) {\n    const q = query.trim().toLowerCase();\n    this.tree.forEach((node) => {\n      const parentMatch = this.searchFields.some((filed) =>\n        node.data?.[filed]?.toLowerCase().includes(q)\n      );\n\n      let matchedChild = false;\n\n      node.children?.forEach((child) => {\n        const childMatch = this.searchFields.some((filed) =>\n          child.data?.[filed]?.toLowerCase().includes(q)\n        );\n        if (childMatch) {\n          child.styleClass = '';\n          matchedChild = true;\n        } else {\n          child.styleClass = 'hidden';\n        }\n      });\n\n      if (parentMatch || matchedChild) {\n        node.styleClass = '';\n      } else {\n        node.styleClass = 'hidden';\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectionOption.html":{"url":"interfaces/SelectionOption.html","title":"interface - SelectionOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectionOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/product-form/product-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            partialChecked\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partialChecked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partialChecked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { TreeNode } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport {\n  TreeTableChangedData,\n  TreeTableCheckboxComponent,\n} from '../../trees/tree-table-checkbox/tree-table-checkbox.component';\nimport { ProductType } from 'app/data/model/product-type.model';\nimport { ProductTypesService } from 'app/services/product-types/product-types.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ErrorCodes } from 'app/constants/error-messages';\n\nexport interface ProductParent {\n  ProductTypeId: number;\n  ProductTypeTitle: string;\n  ProductTypeActive: boolean;\n}\n\ninterface SelectionOption {\n  checked: boolean;\n  partialChecked?: boolean;\n}\n\n@Component({\n  selector: 'app-product-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    TreeTableModule,\n    TreeTableCheckboxComponent,\n  ],\n  templateUrl: './product-form.component.html',\n  styleUrl: './product-form.component.scss',\n})\nexport class ProductFormComponent implements OnInit {\n  private productTypeService = inject(ProductTypesService);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private destroy$ = new Subject();\n  private loading: boolean = false;\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  products: TreeNode[] = [];\n  cachedProducts: TreeNode[] = [];\n  selectionKey!: Record;\n  cacheKeyLength: number = 3;\n  cachingEnabled: boolean = true;\n  startKey: string = '';\n\n  async searchProduct(query: string): Promise {\n    if (query.length  ({\n      data: {\n        ProductTypeId: productType.ProductTypeId,\n        ProductTypeTitle: productType.ProductTypeTitle,\n        ProductTypeActive: productType.ProductTypeActive,\n      },\n      children:\n        productType.Products?.map((product) => ({\n          data: product,\n        })) ?? [],\n    }));\n  }\n\n  async onChangeProduct(change: TreeTableChangedData) {\n    if (this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const parent = change.parent;\n      const children = change.children;\n     \n      if (!parent && children.length == 0)\n        return;  \n      \n\n      // Handle only-child case\n      if (!parent && children.length > 0) {\n        const { ProductId, ProductActive } = children[0];\n        const response = await this.handleProductChange(ProductId, ProductActive);\n        if (!this.isSuccessful(response)) return;\n        this.toast.success('موفق',response.data?.Message??'');\n        return;\n      }\n\n      // Handle parent is inactive\n      if (!parent.ProductTypeActive) {\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n        return;\n      }\n\n      // Handle parent is active\n      if (parent.ProductTypeActive) {\n        const requests = children.map(({ ProductId, ProductActive }) =>\n          this.handleProductChange(ProductId, ProductActive)\n        );\n        const results = await Promise.allSettled(requests);\n\n        const firstError = results.find((r) => r.status === 'rejected') as\n          | PromiseRejectedResult\n          | undefined;\n\n        if (firstError) {\n          const error =\n            (firstError.reason as any)?.error?.message ??\n            'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n          this.toast.error('خطا', error);\n          await this.updateProductsInfo();\n          return;\n        }\n\n        const { ProductTypeId, ProductTypeActive } = parent;\n        await this.handleProductTypeChange(ProductTypeId, ProductTypeActive);\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n  \n  private async handleProductTypeChange(\n    productTypeId: number,\n    active: boolean\n  ) {\n    const response = await this.productTypeService.ChangeProductTypeStatus(\n      productTypeId,\n      active\n    );\n    if (!this.isSuccessful(response)) {\n      // await this.updateProductsInfo()\n      return;\n    };\n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private async handleProductChange(productId: number, active: boolean) {\n    const response = await this.productTypeService.ChangeProductStatus(\n      productId,\n      active\n    );\n    return response;\n  }\n\n  private async updateProductsInfo() {\n    if (this.startKey.length ): boolean {\n    \n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      console.log(response);\n      if (response.error?.code == ErrorCodes.NoRecordFound) {\n        \n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectionOption-1.html":{"url":"interfaces/SelectionOption-1.html","title":"interface - SelectionOption-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectionOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/province-and-city-form/province-and-city-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            partialChecked\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partialChecked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partialChecked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  TreeTableChangedData,\n  TreeTableCheckboxComponent,\n} from 'app/components/trees/tree-table-checkbox/tree-table-checkbox.component';\nimport { ErrorCodes } from 'app/constants/error-messages';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { Province } from 'app/data/model/province-city.model';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ProvinceAndCityManagementService } from 'app/services/province-city-management/province-and-city-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { Subject, takeUntil } from 'rxjs';\n\ninterface SelectionOption {\n  checked: boolean;\n  partialChecked?: boolean;\n}\n\n@Component({\n  selector: 'app-province-and-city-form',\n  imports: [TreeTableModule, TreeTableCheckboxComponent],\n  templateUrl: './province-and-city-form.component.html',\n  styleUrl: './province-and-city-form.component.scss',\n})\nexport class ProvinceAndCityFormComponent implements OnDestroy, OnInit {\n  private provincesAndCitesService = inject(ProvinceAndCityManagementService);\n  private toast = inject(ToastService);\n  private loadingService = inject(LoadingService);\n  private loading = false;\n  private destroy$ = new Subject();\n\n  provincesAndCites: TreeNode[] = [];\n  cachedProvincesAndCites: TreeNode[] = [];\n  selectionKey!: Record;\n  cacheKeyLength: number = 2;\n  cachingEnabled: boolean = true;\n  startKey: string = '';\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  async searchProvinceAndCity(query: string): Promise {\n    if (query.length  0) {\n        const { CityCode, CityActive } = children[0];\n        const response = await this.handleCityChange(CityCode, CityActive);\n        if (!this.isSuccessful(response)) return;\n        this.toast.success('موفق', response.data?.Message ?? '');\n        return;\n      }\n\n      // Handle parent is inactive\n      if (!parent.ProvinceActive) {\n        const { ProvinceId, ProvinceActive } = parent;\n        await this.handleProvinceChange(ProvinceId, ProvinceActive);\n        return;\n      }\n\n      // Handle parent is active\n      if (parent.ProvinceActive) {\n        const requests = children.map(({  CityCode, CityActive }) =>\n          this.handleCityChange(CityCode, CityActive)\n        );\n        const results = await Promise.allSettled(requests);\n\n        const firstError = results.find((r) => r.status === 'rejected') as\n          | PromiseRejectedResult\n          | undefined;\n\n        if (firstError) {\n          const error =\n            (firstError.reason as any)?.error?.message ??\n            'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n          this.toast.error('خطا', error);\n          await this.updateProductsInfo();\n          return;\n        }\n\n        const { ProvinceId, ProvinceActive  } = parent;\n        await this. handleProvinceChange(ProvinceId, ProvinceActive );\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private async handleProvinceChange(\n    provinceId: number,\n    active: boolean\n  ) {\n    const response = await this.provincesAndCitesService.ChangeProvinceStatus(\n      provinceId,\n      active\n    );\n\n    if(!this.isSuccessful(response)) {\n      // await this.updateProductsInfo()\n      return;\n    }\n    \n    this.toast.success('موفق', response.data?.Message ?? '');\n  }\n\n  private async handleCityChange(productId: number, active: boolean) {\n    const response = await this.provincesAndCitesService.ChangeCityStatus(\n      productId,\n      active\n    );\n    return response;\n  }\n\n  private async updateProductsInfo() {\n    if (this.startKey.length ): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      if (response.error?.code == ErrorCodes.NoRecordFound) {\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  private convertToTreeNode(provinces: Province[]): TreeNode[] {\n    return provinces.map((province) => ({\n      data: {\n        ProvinceId: province.ProvinceId,\n        ProvinceName: province.ProvinceName,\n        ProvinceActive: province.ProvinceActive,\n      },\n      children:\n        province.Cities?.map((city) => ({\n          data: city,\n        })) ?? [],\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SemanticTokens.html":{"url":"interfaces/SemanticTokens.html","title":"interface - SemanticTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SemanticTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/theme.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            primary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/data/model/theme.model.ts:14\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PrimitiveTokens {\n  [key: string]: string;\n}\n\n// Semantic tokens provide contextual meaning to primitive tokens\ninterface SemanticTokens {\n  primary?: {\n    [shade: number]: string;\n  };\n  colorScheme?: {\n    light?: ColorScheme;\n    dark?: ColorScheme;\n  };\n  [key: string]: any;\n}\n\n// Defines the structure for color schemes\ninterface ColorScheme {\n  primary?: {\n    color?: string;\n    inverseColor?: string;\n    hoverColor?: string;\n    activeColor?: string;\n  };\n  highlight?: {\n    background?: string;\n    focusBackground?: string;\n    color?: string;\n    focusColor?: string;\n  };\n  [key: string]: any;\n}\n\n// Component tokens allow customization at the component level\ninterface ComponentTokens {\n  [componentName: string]: {\n    [property: string]: string;\n  };\n}\n\n// The complete theme preset combining all token types\nexport interface ThemePreset {\n  name?: string;\n  primitives?: PrimitiveTokens;\n  semantic?: SemanticTokens;\n  components?: ComponentTokens;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SequentialTurn.html":{"url":"interfaces/SequentialTurn.html","title":"interface - SequentialTurn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SequentialTurn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/model/sequential-turn.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                        \n                                            SeqTurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SeqTurnKeyWord\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SeqTurnTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnKeyWord\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnKeyWord:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SeqTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SeqTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SequentialTurn {\n  SeqTurnId: number;\n  SeqTurnTitle?: string;\n  SeqTurnKeyWord?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SequentialTurnManagementService.html":{"url":"injectables/SequentialTurnManagementService.html","title":"injectable - SequentialTurnManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SequentialTurnManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/sequential-turn-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                DeleteRelationOfSequentialTurnToAnnouncementSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteRelationOfSequentialTurnToLoaderType\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteSequentialTurn\n                            \n                            \n                                    Public\n                                    Async\n                                EditSequentialTurn\n                            \n                            \n                                    Public\n                                    Async\n                                GetRelationOfSequentialTurnToAnnouncementSubGroups\n                            \n                            \n                                    Public\n                                    Async\n                                GetRelationOfSequentialTurnToLoaderTypes\n                            \n                            \n                                    Public\n                                    Async\n                                GetSequentialTurns\n                            \n                            \n                                    Public\n                                    Async\n                                GetSequentialTurnWithLoaderType\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewRelationOfSequentialTurnToAnnouncementSubGroup\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewRelationOfSequentialTurnToLoaderType\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewSequentialTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteRelationOfSequentialTurnToAnnouncementSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteRelationOfSequentialTurnToAnnouncementSubGroup(sequentialTurnId: number, announcementSubGroupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:378\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                announcementSubGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteRelationOfSequentialTurnToLoaderType\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteRelationOfSequentialTurnToLoaderType(sequentialTurnId: number, loaderTypeId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteSequentialTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteSequentialTurn(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditSequentialTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditSequentialTurn(id: number, title: string, keyWord: string, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keyWord\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetRelationOfSequentialTurnToAnnouncementSubGroups\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetRelationOfSequentialTurnToAnnouncementSubGroups(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:301\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetRelationOfSequentialTurnToLoaderTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetRelationOfSequentialTurnToLoaderTypes(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetSequentialTurns\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetSequentialTurns(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetSequentialTurnWithLoaderType\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetSequentialTurnWithLoaderType(loaderTypeId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:258\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewRelationOfSequentialTurnToAnnouncementSubGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewRelationOfSequentialTurnToAnnouncementSubGroup(sequentialTurnId: number, announcementSubGroupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:345\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                announcementSubGroupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewRelationOfSequentialTurnToLoaderType\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewRelationOfSequentialTurnToLoaderType(sequentialTurnId: number, loaderTypeId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewSequentialTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewSequentialTurn(id: number, title: string, keyWord: string, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keyWord\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/sequential-turn-management/sequential-turn-management.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { SequentialTurn } from './model/sequential-turn.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { mockSequentialTurns } from './mock/sequential-turn.mock';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { RelationOfSequentialTurnToLoaderType } from './model/relation-of-sequentialTurn-to-loaderType.model';\nimport { mockRelationOfSequentialTurnToLoaderTypes } from './mock/relation-of-sequentialTurn-to-loaderType.mock';\nimport { RelationOfSequentialTurnToAnnouncementSubGroup } from './model/relation-of-sequentialTurn-to-announcementSubGroup.model';\nimport { mockRelationOfSequentialTurnToAnnouncementSubGroups } from './mock/relation-of-sequentialTurn-to-announcementSubGroup.mock';\nimport { LoaderType } from '../loader-types/model/loader-type.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SequentialTurnManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  //#region Sequential Turn\n\n  public async GetSequentialTurns(\n    title: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.GetSequentialTurns;\n    const SequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: 0,\n      SeqTurnTitle: title,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SearchString: SequentialTurnInfo.SeqTurnTitle,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSequentialTurns);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        SeqTurnId: data.SeqTurnId,\n        SeqTurnTitle: data.SeqTurnTitle?.trim(),\n        SeqTurnKeyWord: data.SeqTurnKeyWord,\n        Active: data.Active,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewSequentialTurn(\n    id: number,\n    title: string,\n    keyWord: string,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.RegisterSequentialTurn;\n    const sequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: id,\n      SeqTurnTitle: title,\n      SeqTurnKeyWord: keyWord,\n      Active: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawSequentialTurn: sequentialTurnInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditSequentialTurn(\n    id: number,\n    title: string,\n    keyWord: string,\n    status: boolean\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.EditSequentialTurn;\n    const sequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: id,\n      SeqTurnTitle: title,\n      SeqTurnKeyWord: keyWord,\n      Active: status,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawSequentialTurn: sequentialTurnInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteSequentialTurn(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.DeleteSequentialTurn;\n    const sequentialTurnInfo: SequentialTurn = { SeqTurnId: id };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId: sequentialTurnInfo.SeqTurnId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region To LoaderType Relation\n\n  public async GetRelationOfSequentialTurnToLoaderTypes(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.RelationToLoaderTypes\n        .GetRelationToLoaderTypes;\n    const relationOfSequentialToLoaderTypeInfo: RelationOfSequentialTurnToLoaderType =\n      {\n        SeqTurnId: id,\n        LoaderTypes: [],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId: relationOfSequentialToLoaderTypeInfo.SeqTurnId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockRelationOfSequentialTurnToLoaderTypes);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        SeqTurnId: data.SeqTurnId,\n        SeqTurnTitle: data.SeqTurnTitle?.trim(),\n        LoaderTypes: data.LoaderTypes.map((subData) => ({\n          LoaderTypeId: subData.LoaderTypeId,\n          LoaderTypeTitle: subData.LoaderTypeTitle?.trim(),\n        })),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewRelationOfSequentialTurnToLoaderType(\n    sequentialTurnId: number,\n    loaderTypeId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.RelationToLoaderTypes\n        .RegisterRelationToLoaderType;\n    const relationOfSequentialToLoaderTypeInfo: RelationOfSequentialTurnToLoaderType =\n      {\n        SeqTurnId: sequentialTurnId,\n        LoaderTypes: [{ LoaderTypeId: loaderTypeId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId: relationOfSequentialToLoaderTypeInfo.SeqTurnId,\n      LoaderTypeId:\n        relationOfSequentialToLoaderTypeInfo.LoaderTypes[0].LoaderTypeId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteRelationOfSequentialTurnToLoaderType(\n    sequentialTurnId: number,\n    loaderTypeId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.RelationToLoaderTypes\n        .DeleteRelationToLoaderType;\n    const relationOfSequentialTurnToLoaderTypeInfo: RelationOfSequentialTurnToLoaderType =\n      {\n        SeqTurnId: sequentialTurnId,\n        LoaderTypes: [{ LoaderTypeId: loaderTypeId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId: relationOfSequentialTurnToLoaderTypeInfo.SeqTurnId,\n      LoaderTypeId:\n        relationOfSequentialTurnToLoaderTypeInfo.LoaderTypes[0].LoaderTypeId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async GetSequentialTurnWithLoaderType(\n    loaderTypeId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns.RelationToLoaderTypes\n        .GetSequentialTurnWithLoaderType;\n    const loaderTypeInfo: LoaderType = {\n      LoaderTypeId: loaderTypeId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LoaderTypeId: loaderTypeInfo.LoaderTypeId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSequentialTurns);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        SeqTurnId: data.SeqTurnId,\n        SeqTurnTitle: data.SeqTurnTitle?.trim(),\n        SeqTurnKeyWord: data.SeqTurnKeyWord?.trim(),\n        Active: data.Active,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region To AnnouncementSubGroup Relation\n\n  public async GetRelationOfSequentialTurnToAnnouncementSubGroups(\n    id: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns\n        .RelationToAnnouncementSubGroups.GetRelationToAnnouncementSubGroups;\n    const relationOfSequentialTurnToAnnouncementSubGroupInfo: RelationOfSequentialTurnToAnnouncementSubGroup =\n      {\n        SeqTurnId: id,\n        AnnouncementSubGroups: [],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId:\n        relationOfSequentialTurnToAnnouncementSubGroupInfo.SeqTurnId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockRelationOfSequentialTurnToAnnouncementSubGroups);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        SeqTurnId: data.SeqTurnId,\n        SeqTurnTitle: data.SeqTurnTitle?.trim(),\n        AnnouncementSubGroups: data.AnnouncementSubGroups.map((subData) => ({\n          AnnouncementSGId: subData.AnnouncementSGId,\n          AnnouncementSGTitle: subData.AnnouncementSGTitle?.trim(),\n        })),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async RegisterNewRelationOfSequentialTurnToAnnouncementSubGroup(\n    sequentialTurnId: number,\n    announcementSubGroupId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns\n        .RelationToAnnouncementSubGroups.RegisterRelationToAnnouncementSubGroup;\n    const relationOfSequentialTurnToAnnouncementSubGroupInfo: RelationOfSequentialTurnToAnnouncementSubGroup =\n      {\n        SeqTurnId: sequentialTurnId,\n        AnnouncementSubGroups: [{ AnnouncementSGId: announcementSubGroupId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId:\n        relationOfSequentialTurnToAnnouncementSubGroupInfo.SeqTurnId,\n      AnnouncementSGId:\n        relationOfSequentialTurnToAnnouncementSubGroupInfo\n          .AnnouncementSubGroups[0].AnnouncementSGId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteRelationOfSequentialTurnToAnnouncementSubGroup(\n    sequentialTurnId: number,\n    announcementSubGroupId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.SequentialTurns\n        .RelationToAnnouncementSubGroups\n        .DeleteRelationToAnnouncementSubGroupDeleting;\n    const relationOfSequentialTurnToAnnouncementSubGroupInfo: RelationOfSequentialTurnToAnnouncementSubGroup =\n      {\n        SeqTurnId: sequentialTurnId,\n        AnnouncementSubGroups: [{ AnnouncementSGId: announcementSubGroupId }],\n      };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SequentialTurnId:\n        relationOfSequentialTurnToAnnouncementSubGroupInfo.SeqTurnId,\n      AnnouncementSGId:\n        relationOfSequentialTurnToAnnouncementSubGroupInfo\n          .AnnouncementSubGroups[0].AnnouncementSGId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShortResponse.html":{"url":"interfaces/ShortResponse.html","title":"interface - ShortResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShortResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/short-response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ShortResponse {\n  Message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            NgTemplateOutlet\n                            DrawerModule\n                                SidebarMenuComponent\n                                TabBarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                isOpen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDrawerClose\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                updateIsMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/sidebar/sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menuItems\n                    \n                \n                \n                    \n                        Type :         MenuItemData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/sidebar/sidebar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '18rem'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/sidebar/sidebar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/sidebar/sidebar.component.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/sidebar/sidebar.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrawerClose\n                        \n                    \n                \n            \n            \n                \nonDrawerClose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/sidebar/sidebar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize')\n                \n            \n\n                    \n                        \n                            Defined in src/app/components/shared/sidebar/sidebar.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIsMobile\n                        \n                    \n                \n            \n            \n                \nupdateIsMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/sidebar/sidebar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/sidebar/sidebar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/sidebar/sidebar.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { MenuItemData } from 'app/data/model/menu-item.model';\nimport { selectIsSidebarOpen } from 'app/store/sidebar/sidebar.selectors';\nimport { closeSidebar } from 'app/store/sidebar/sidebar.actions';\nimport {DrawerModule} from \"primeng/drawer\"\nimport { AsyncPipe,NgTemplateOutlet } from '@angular/common';\nimport { SidebarMenuComponent } from '../sidebar-menu/sidebar-menu.component';\nimport { TabBarComponent } from \"../tab-bar/tab-bar.component\";\n\n@Component({\n  selector: 'app-sidebar',\n  imports: [AsyncPipe, NgTemplateOutlet, DrawerModule, SidebarMenuComponent, TabBarComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrl: './sidebar.component.scss'\n})\nexport class SidebarComponent implements OnInit {\n  @Input() width: string = '18rem';\n  @Input() menuItems: MenuItemData[] = [];\n\n  isMobile = false;\n  isOpen$!: Observable;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    this.updateIsMobile();\n    this.isOpen$ = this.store.select(selectIsSidebarOpen);\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.updateIsMobile();\n  }\n\n  updateIsMobile() {\n    this.isMobile = window.innerWidth \n    \n\n    \n        \n\n  \n\n\n@if (isMobile) {\n\n  \n\n\n\n\n  \n\n}\n@else {\n\n  \n  \n    \n  \n\n  \n  \n    \n    \n  \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isMobile) {    }@else {                        }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarMenuComponent.html":{"url":"components/SidebarMenuComponent.html","title":"component - SidebarMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/sidebar-menu/sidebar-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-menu\n            \n\n\n            \n                imports\n                \n                            PanelMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         MenuItemData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/sidebar-menu/sidebar-menu.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuItemData } from 'app/data/model/menu-item.model';\nimport { PanelMenuModule } from 'primeng/panelmenu';\n\n@Component({\n  selector: 'app-sidebar-menu',\n  imports: [PanelMenuModule],\n  templateUrl: './sidebar-menu.component.html',\n  styleUrl: './sidebar-menu.component.scss'\n})\nexport class SidebarMenuComponent {\n  @Input() items:MenuItemData[] = [];\n\n}\n\n    \n\n    \n        \n  @for (item of items; track $index) {\n    \n      \n      {{ item.label }}\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (item of items; track $index) {                {{ item.label }}      }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidebarState.html":{"url":"interfaces/SidebarState.html","title":"interface - SidebarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SidebarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/sidebar/sidebar.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isOpen\n                                        \n                                \n                                \n                                        \n                                            pageGroups\n                                        \n                                \n                                \n                                        \n                                            selectedPageGroupId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageGroups:         PageGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedPageGroupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedPageGroupId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport * as SidebarActions from 'app/store/sidebar/sidebar.actions';\nimport { PageGroup } from 'app/data/model/page-group.model';\n\nexport interface SidebarState {\n  isOpen: boolean;\n  pageGroups: PageGroup[];\n  selectedPageGroupId: number;\n}\n\nconst initialState: SidebarState = {\n  isOpen: false,\n  pageGroups: [],\n  selectedPageGroupId: 0,\n};\n\nexport const sidebarReducer = createReducer(\n  initialState,\n  on(SidebarActions.openSidebar, (state) => ({ ...state, isOpen: true })),\n  on(SidebarActions.closeSidebar, (state) => ({ ...state, isOpen: false })),\n  on(SidebarActions.toggleSidebar, (state) => ({\n    ...state,\n    isOpen: !state.isOpen,\n  })),\n  on(SidebarActions.setPageGroups, (state, { groups }) => {\n    const validId =\n      groups.find((g) => g.id === state.selectedPageGroupId)?.id ||\n      groups[0]?.id ||\n      0;\n    return { ...state, pageGroups: groups, selectedPageGroupId: validId };\n  }),\n  on(SidebarActions.selectPageGroup, (state, { id }) => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'auto',\n    });    \n    const exists = state.pageGroups.some((g) => g.id === id);\n    return exists ? { ...state, selectedPageGroupId: id } : state;\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SoftwareUserInfo.html":{"url":"interfaces/SoftwareUserInfo.html","title":"interface - SoftwareUserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SoftwareUserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/software-user-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            MobileNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SMSOwnerActive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            UserActive\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            UserName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            UserTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            UserTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MobileNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MobileNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SMSOwnerActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SMSOwnerActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SoftwareUserInfo {\n  UserId: number;\n  UserName?: string;\n  MobileNumber?: string;\n  UserTypeId?: number;\n  UserActive?: boolean;\n  SMSOwnerActive?: boolean;\n  UserTypeTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubMenuComponent.html":{"url":"components/SubMenuComponent.html","title":"component - SubMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SubMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/sub-menu/sub-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sub-menu\n            \n\n\n            \n                imports\n                \n                            CardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sub-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sub-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClickSubMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                processes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        processes\n                    \n                \n                \n                    \n                        Type :         WebProcess[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/sub-menu/sub-menu.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClickSubMenu\n                        \n                    \n                \n            \n            \n                \nonClickSubMenu(process: WebProcess)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/sub-menu/sub-menu.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                process\n                                            \n                                                            WebProcess\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/sub-menu/sub-menu.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TabComponentKey, TabComponentRegistry } from 'app/constants/tab-component-registry';\nimport { WebProcess } from 'app/data/model/web-process.model';\nimport { addTab } from 'app/store/tabs/tabs.actions';\nimport { CardModule } from 'primeng/card';\n\n@Component({\n  selector: 'app-sub-menu',\n  imports: [CardModule],\n  templateUrl: './sub-menu.component.html',\n  styleUrl: './sub-menu.component.scss'\n})\nexport class SubMenuComponent {\n  private store = inject(Store);\n\n  @Input() processes: WebProcess[] = [];\n\n\n  onClickSubMenu(process: WebProcess) {\n  // console.log(process.title);\n\n  let componentToLoad:TabComponentKey = TabComponentKey.Main; \n  if (Object.values(TabComponentKey).includes(process.id)) {\n    componentToLoad = process.id as TabComponentKey;\n  }\n  \n  this.store.dispatch(addTab({\n    title: process.title,\n    closable: true,\n    component: componentToLoad,\n  }));\n}\n}\n\n    \n\n    \n        \n  @for (process of processes; track $index) {\n    \n      \n        \n        \n          \n            {{ process.title }}\n            \n            \n          \n          \n          \n          \n            {{ process.description }}\n          \n        \n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (process of processes; track $index) {                                                {{ process.title }}                                                                            {{ process.description }}                        }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportButtonComponent.html":{"url":"components/SupportButtonComponent.html","title":"component - SupportButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/support-button/support-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support-button\n            \n\n\n            \n                imports\n                \n                            ScrollTopModule\n                            ButtonModule\n                            PopoverModule\n                                CaptchaInputComponent\n                                TextAreaInputComponent\n                            DialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./support-button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support-button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyToClipboard\n                            \n                            \n                                    Async\n                                showDialog\n                            \n                            \n                                showTicketDialog\n                            \n                            \n                                submitTicket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: UserAuthService, toast: ToastService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/support-button/support-button.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyToClipboard\n                        \n                    \n                \n            \n            \n                \ncopyToClipboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/support-button/support-button.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/support-button/support-button.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTicketDialog\n                        \n                    \n                \n            \n            \n                \nshowTicketDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/support-button/support-button.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitTicket\n                        \n                    \n                \n            \n            \n                \nsubmitTicket()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/support-button/support-button.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/support-button/support-button.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/support-button/support-button.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ScrollTopModule } from 'primeng/scrolltop';\nimport { ButtonModule } from 'primeng/button';\nimport { PopoverModule } from 'primeng/popover';\nimport { UserAuthService } from 'app/services/user-auth-service/user-auth.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { Router } from '@angular/router';\nimport { APP_ROUTES } from 'app/constants/routes';\nimport { CaptchaInputComponent } from '../inputs/captcha-input/captcha-input.component';\nimport { TextAreaInputComponent } from '../inputs/text-area-input/text-area-input.component';\nimport { DialogModule } from 'primeng/dialog';\n\n@Component({\n  selector: 'app-support-button',\n  imports: [\n    ScrollTopModule,\n    ButtonModule,\n    PopoverModule,\n    CaptchaInputComponent,\n    TextAreaInputComponent,\n    DialogModule,\n  ],\n  templateUrl: './support-button.component.html',\n  styleUrl: './support-button.component.scss',\n})\nexport class SupportButtonComponent {\n  dialog: boolean = false;\n  visible: boolean = false;\n\n  constructor(\n    private auth: UserAuthService,\n    private toast: ToastService,\n    private router: Router\n  ) {}\n  async showDialog() {\n    await this.auth.isLoggedIn();\n    this.visible = true;\n  }\n  showTicketDialog() {\n    this.dialog = true;\n    this.visible = false;\n  }\n\n  submitTicket() {\n    this.toast.success('تیکت ارسال شد', 'لطفا منتظر جواب همکاران ما باشد.');\n    this.dialog = false;\n  }\n\n  copyToClipboard() {\n    this.toast.success('متن در کلیپبورد ذخیره شد', '');\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n      \n        \n          انجمن رانندگان\n          \n        \n        \n          انجمن کامیونداران\n          \n        \n        \n          انجمن شرکت‌ها\n          \n        \n      \n    \n\n    \n      \n    \n  \n\n\n\n  لطفا بعد از پر کردن اطلاعات، متن تیکت خود را وارد نمایید.همکاران\n    ما در اسرع وقت پاسخگو خواهند بود.\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    انجمن رانندگان                                    انجمن کامیونداران                                    انجمن شرکت‌ها                                              لطفا بعد از پر کردن اطلاعات، متن تیکت خود را وارد نمایید.همکاران    ما در اسرع وقت پاسخگو خواهند بود.                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabBarComponent.html":{"url":"components/TabBarComponent.html","title":"component - TabBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/tab-bar/tab-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab-bar\n            \n\n\n            \n                imports\n                \n                            AsyncPipe\n                            TabsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tab-bar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tab-bar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                    Private\n                                store\n                            \n                            \n                                tabActive$\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseTab\n                            \n                            \n                                onTabClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseTab\n                        \n                    \n                \n            \n            \n                \nonCloseTab(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTabClick\n                        \n                    \n                \n            \n            \n                \nonTabClick(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Store)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabActive$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TabItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-bar/tab-bar.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, NgClass } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TabItem } from 'app/data/model/tabs.model';\nimport { activeTab, closeTab } from 'app/store/tabs/tabs.actions';\nimport { selectActiveTab, selectAllTabs } from 'app/store/tabs/tabs.selectors';\nimport { TabsModule } from 'primeng/tabs'\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-tab-bar',\n  imports: [AsyncPipe, TabsModule,NgClass],\n  templateUrl: './tab-bar.component.html',\n  styleUrl: './tab-bar.component.scss'\n})\n\nexport class TabBarComponent implements OnInit {\n\n  private store = inject(Store);\n  render = true;\n  tabs: TabItem[] = [];\n  tabActive$!: Observable;\n\n  ngOnInit(): void {\n    this.store.select(selectAllTabs).subscribe((tabs) => {\n      this.tabs = tabs;\n    });\n    this.tabActive$ = this.store.select(selectActiveTab);\n  }\n\n  onCloseTab(id: number) {\n    this.store.dispatch(closeTab({ id }));\n  }\n\n  onTabClick(id: number) {\n    this.store.dispatch(activeTab({ id }))\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @for (tab of tabs; track tab.id) {\n        \n          \n            \n              {{ tab.title }}\n            \n          \n\n          @if (tab.closable) {\n          \n          }\n        \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @for (tab of tabs; track tab.id) {                                            {{ tab.title }}                                @if (tab.closable) {                    }                }            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TabItem.html":{"url":"interfaces/TabItem.html","title":"interface - TabItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TabItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/tabs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            closable\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         TabComponentKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TabComponentKey\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TabComponentKey } from \"app/constants/tab-component-registry\";\n\nexport interface TabItem {\n    id:number,\n    title:string,\n    closable:boolean\n    component:TabComponentKey,  \n    active:boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TabView.html":{"url":"interfaces/TabView.html","title":"interface - TabView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TabView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/constants/tab-component-registry.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { UserInfoFormComponent } from 'app/components/forms/user-management-form/user-Info-form/user-info-form.component';\nimport { TruckInfoFormComponent } from 'app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component';\nimport { DriverInfoFormComponent } from 'app/components/forms/truck-driver-manages-form/driver-info-form/driver-info-form.component';\nimport { UsersMenuAccessFormComponent } from 'app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component';\nimport { DriverTruckWalletFormComponent } from 'app/components/forms/truck-driver-manages-form/driver-truck-wallet-form/driver-truck-wallet-form.component';\nimport { FactoriesAndFreightFormComponent } from 'app/components/forms/factories-production-centers-form/factories-production-centers-form.component';\nimport { LoadCapacitorFormComponent } from 'app/components/forms/load-capacitor-form/load-capacitor-form.component';\nimport { LoaderTypeFormComponent } from 'app/components/forms/loader-type-form/loader-type-form.component';\nimport { ProvinceAndCityFormComponent } from 'app/components/forms/province-and-city-form/province-and-city-form.component';\nimport { ProductFormComponent } from 'app/components/forms/product-form/product-form.component';\nimport { LadPlacesFormComponent } from 'app/components/forms/lad-places-form/lad-places-form.component';\nimport { TravelTimeFormComponent } from 'app/components/forms/travel-time-form/travel-time-form.component';\nimport { TariffsFormComponent } from 'app/components/forms/tariffs-manages-form/tariffs-form.component';\nimport { AnnouncementGroupFormComponent } from 'app/components/forms/announcement-management-form/announcement-group-form/announcement-group-form.component';\nimport { AnnouncementSubGroupFormComponent } from 'app/components/forms/announcement-management-form/announcement-sub-group-form/announcement-sub-group-form.component';\nimport { RelationOfAnnouncementGroupAndSubGroupComponent } from 'app/components/forms/announcement-management-form/relation-of-announcement-group-and-sub-group/relation-of-announcement-group-and-sub-group.component';\nimport { SequentialTurnsFormComponent } from 'app/components/forms/sequential-turns-management-form/sequential-turns-form/sequential-turns-form.component';\nimport { RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent } from 'app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-announcement-sub-groups/relation-of-sequential-turn-to-announcement-sub-groups-form.component';\nimport { MainViewComponent } from 'app/components/shared/main-view/main-view.component';\nimport { RelationOfSequentialTurnToLoaderTypeFormComponent } from 'app/components/forms/sequential-turns-management-form/relation-of-sequential-turn-to-loader-type-form/relation-of-sequential-turn-to-loader-type-form.component';\nimport { TruckAndDriverInformationFormComponent } from 'app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component';\nimport { TurnsListFormComponent } from 'app/components/forms/turns-management-form/turns-list-form/turns-list-form.component';\nimport { RealTimeTurnsFormComponent } from 'app/components/forms/turns-management-form/real-time-turns-form/real-time-turns-form.component';\nimport { EmergencyTurnsFormComponent } from 'app/components/forms/turns-management-form/emergency-time-turns-form copy/emergency-turns-form.component';\nimport { ResuscitateTurnsFormComponent } from 'app/components/forms/turns-management-form/resuscitate-time-turns-form/resuscitate-turns-form.component';\n\nexport enum TabComponentKey {\n  Main = -1,\n  UserManagement = 0,\n  TruckDriverManagement = 1,\n  SequentialTurnManagement = 4,\n  FactoriesAndFreightManagement = 6,\n  AnnouncementManagement = 11,\n  LoaderTypeManagement = 12,\n  LADPlaceManagementService = 7,\n  ProvinceAndCityManagement = 8,\n  ProductTypesManagement = 9,\n  LoaderManagement = 13,\n  TravelTimeManagement = 14,\n  TurnsManagement = 19,\n  LoadCapacitorManagement = 35,\n  TariffsManagement = 53,\n  Driver_TruckManagement = 10,\n}\nexport interface TabView {\n  title: string;\n  component: Type;\n  data?: object;\n}\n\nexport const TabComponentRegistry: Record = {\n  [TabComponentKey.Main]: [\n    { title: 'صفحه اصلی', component:MainViewComponent },\n  ],\n\n  [TabComponentKey.UserManagement]: [\n    {\n      title: 'مدیریت کاربران',\n      component: UserInfoFormComponent,\n    },\n    {\n      title: 'مدریت دسترسی کابران',\n      component: UsersMenuAccessFormComponent,\n    },\n  ],\n\n  [TabComponentKey.TruckDriverManagement]: [\n    {\n      title: 'راننده',\n      component: DriverInfoFormComponent,\n    },\n    {\n      title: 'ناوگان',\n      component: TruckInfoFormComponent,\n    },\n    {\n      title: 'راننده ناوگان کیف پول',\n      component: DriverTruckWalletFormComponent,\n    },\n  ],\n  [TabComponentKey.FactoriesAndFreightManagement]: [\n    {\n      title: 'کارخانجات و مراکز تولید بار ',\n      component: FactoriesAndFreightFormComponent,\n    },\n  ],\n  [TabComponentKey.LoadCapacitorManagement]: [\n    {\n      title: 'مخزن بار',\n      component: LoadCapacitorFormComponent,\n    },\n  ],\n  [TabComponentKey.LoaderManagement]: [\n    {\n      title: 'بارگیر',\n      component: LoaderTypeFormComponent,\n    },\n  ],\n  [TabComponentKey.ProvinceAndCityManagement]: [\n    {\n      title: 'استان شهرها',\n      component: ProvinceAndCityFormComponent,\n    },\n  ],\n  [TabComponentKey.LoaderTypeManagement]: [\n    {\n      title: 'بارگیرها',\n      component: LoaderTypeFormComponent,\n    },\n  ],\n  [TabComponentKey.ProductTypesManagement]: [\n    {\n      title: 'کالاها',\n      component: ProductFormComponent,\n    },\n  ],\n  [TabComponentKey.LADPlaceManagementService]: [\n    {\n      title: 'مبادی و مقاصد حمل بار',\n      component: LadPlacesFormComponent,\n    },\n  ],\n  [TabComponentKey.TravelTimeManagement]: [\n    {\n      title: 'مدت سفر',\n      component: TravelTimeFormComponent,\n    },\n  ],\n  [TabComponentKey.TariffsManagement]: [\n    {\n      title: 'تعرفه های حمل بار',\n      component: TariffsFormComponent,\n    },\n  ],\n  [TabComponentKey.AnnouncementManagement]: [\n    { title: 'گروه ها اعلام بار', component: AnnouncementGroupFormComponent },\n    {\n      title: 'زیر گروه ها اعلام بار',\n      component: AnnouncementSubGroupFormComponent,\n    },\n    {\n      title: 'گروه و زیرگروه اعلام بار',\n      component: RelationOfAnnouncementGroupAndSubGroupComponent,\n    },\n  ],\n  [TabComponentKey.SequentialTurnManagement]: [\n    { title: 'صفوف نوبت دهی', component: SequentialTurnsFormComponent },\n    {\n      title: 'صفوف نوبت دهی و بارگیرها',\n      component: RelationOfSequentialTurnToLoaderTypeFormComponent,\n    },\n    {\n      title: 'صفوف نوبت دهی - زیرگروه اعلام بار',\n      component: RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent,\n    },\n  ],\n  [TabComponentKey.Driver_TruckManagement]: [\n    {\n      title: 'ناوگان',\n      component: TruckAndDriverInformationFormComponent,\n      data: {\n        insideTabType: 'Truck',\n      },\n    },\n    {\n      title: 'بارگیر',\n      component: TruckAndDriverInformationFormComponent,\n      data: {\n        insideTabType: 'LoaderType',\n      },\n    },\n    {\n      title: 'راننده',\n      component: TruckAndDriverInformationFormComponent,\n      data: {\n        insideTabType: 'Driver',\n      },\n    },\n  ],\n  [TabComponentKey.TurnsManagement]: [\n    {\n      title: 'لیست نوبت ها',\n      component: TurnsListFormComponent,\n    },\n    {\n      title: 'نوبت دهی بلادرنگ',\n      component: RealTimeTurnsFormComponent,\n    },\n    {\n      title: 'نوبت دهی - نوبت اضطراری',\n      component: EmergencyTurnsFormComponent,\n    },\n    {\n      title: 'نوبت دهی - احیای نوبت رزور',\n      component: ResuscitateTurnsFormComponent,\n    }\n  ],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabViewComponent.html":{"url":"components/TabViewComponent.html","title":"component - TabViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/tab-view/tab-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab-view\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TabsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tab-view.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tab-view.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeIndex\n                            \n                            \n                                    Private\n                                componentCache\n                            \n                            \n                                    Optional\n                                componentRef\n                            \n                            \n                                    \n                                    Optional\n                                singleContainer\n                            \n                            \n                                    \n                                    Optional\n                                tabContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onTabChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        views\n                    \n                \n                \n                    \n                        Type :         TabView[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/tab-view/tab-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadComponent\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadComponent(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-view/tab-view.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-view/tab-view.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTabChange\n                        \n                    \n                \n            \n            \n                \nonTabChange(index: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/tab-view/tab-view.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-view/tab-view.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        componentCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-view/tab-view.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        componentRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ComponentRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-view/tab-view.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        singleContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('singleContainer', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-view/tab-view.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tabContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tabContainer', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/tab-view/tab-view.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabsModule } from 'primeng/tabs';\nimport { TabView } from 'app/constants/tab-component-registry';\n\n@Component({\n  selector: 'app-tab-view',\n  standalone: true,\n  imports: [CommonModule, TabsModule],\n  templateUrl: './tab-view.component.html',\n  styleUrl: './tab-view.component.scss',\n})\nexport class TabViewComponent implements AfterViewInit {\n  @Input() views: TabView[] = [];\n  @ViewChild('singleContainer', { read: ViewContainerRef })\n  singleContainer?: ViewContainerRef;\n  @ViewChild('tabContainer', { read: ViewContainerRef })\n  tabContainer?: ViewContainerRef;\n\n  private componentCache = new Map>();\n\n  activeIndex = 0;\n  componentRef?: ComponentRef;\n\n  ngAfterViewInit(): void {\n    if (this.views.length === 1 && this.singleContainer) {\n      this.singleContainer.createComponent(this.views[0].component);\n    } else {\n      this.loadComponent(this.activeIndex);\n    }\n  }\n\n  onTabChange(index: number | string) {\n    if (typeof index == 'string') return;\n    this.loadComponent(index);\n  }\n\n  private loadComponent(index: number) {\n    if (!this.tabContainer || !this.views[index]) return;\n    if (this.tabContainer.length > 0) this.tabContainer.detach(0);\n\n    const cached = this.componentCache.get(index);\n\n    if (cached) {\n      this.tabContainer.insert(cached.hostView);\n      return;\n    }\n\n    const view = this.views[index];\n    const compRef = this.tabContainer.createComponent(view.component);\n\n    if (view.data) {\n      Object.assign(compRef.instance, view.data);\n    }\n    this.tabContainer.insert(compRef.hostView);\n    this.componentCache.set(index, compRef);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n    \n      \n        @for (view of views; track $index) {\n          {{ view.title }}\n        }\n      \n    \n  \n\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      @for (view of views; track $index) {          {{ view.title }}        }                      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TabsState.html":{"url":"interfaces/TabsState.html","title":"interface - TabsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TabsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/tabs/tabs.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lastClosedTabId\n                                        \n                                \n                                \n                                        \n                                            tabs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastClosedTabId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastClosedTabId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tabs:         TabItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TabItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { TabItem } from 'app/data/model/tabs.model';\nimport * as TabsActions from './tabs.actions';\nimport { TabComponentKey } from 'app/constants/tab-component-registry';\n\nexport interface TabsState {\n  tabs: TabItem[];\n  lastClosedTabId: number | null;\n}\n\nconst initialState: TabsState = {\n  tabs: [\n    {\n      id: 0,\n      title: 'صفحه اصلی',\n      closable: false,\n      component: TabComponentKey.Main,\n      active: true,\n    },\n  ],\n  lastClosedTabId: null,\n};\n\nlet idCounter = 1;\n\nexport const tabReducer = createReducer(\n  initialState,\n\n  on(TabsActions.addTab, (state, { title, closable, component }) => {\n    const newTab: TabItem = {\n      id: idCounter++,\n      title,\n      closable,\n      component,\n      active: true,\n    };\n\n    // deactivate all other tabs and add new one\n    return {\n      ...state,\n      tabs: [...state.tabs.map((tab) => ({ ...tab, active: false })), newTab],\n    };\n  }),\n\n  on(TabsActions.closeTab, (state, { id }) => {\n    const filtered = state.tabs.filter((tab) => tab.id !== id);\n    if (filtered.length === 0) {\n      return state; // prevent empty tab list\n    }\n\n    // در صورت بدستن تب کناری انتخاب شود\n    const wasActive = state.tabs.find((tab) => tab.id === id)?.active;\n    if (wasActive) {\n      filtered[filtered.length - 1] = {\n        ...filtered[filtered.length - 1],\n        active: true,\n      };\n    }\n\n    return {\n      ...state,\n      tabs: filtered,\n      lastClosedTabId: id,\n    };\n  }),\n\n  on(TabsActions.closeAllTab, (state) => {\n    return {\n      ...state,\n      tabs: [{ ...state.tabs[0] }],\n    };\n  }),\n\n  on(TabsActions.activeTab, (state, { id }) => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'auto',\n    });\n    return {\n      ...state,\n      tabs: state.tabs.map((tab) => ({\n        ...tab,\n        active: tab.id === id,\n      })),\n    };\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tariff.html":{"url":"interfaces/Tariff.html","title":"interface - Tariff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tariff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/tariff.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            BaseTonnag\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            CalculationReference\n                                        \n                                \n                                \n                                        \n                                            GoodId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            GoodTitle\n                                        \n                                \n                                \n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeTitle\n                                        \n                                \n                                \n                                        \n                                            SourceCityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SourceCityTitle\n                                        \n                                \n                                \n                                        \n                                            TargetCityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TargetCityTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Tariff\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BaseTonnag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BaseTonnag:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CalculationReference\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CalculationReference:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GoodId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GoodId:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GoodTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        GoodTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityId:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityId:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tariff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Tariff:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tariff {\n  LoaderTypeId: number;\n  SourceCityId: number | undefined;\n  TargetCityId: number | undefined;\n  GoodId: number | undefined;\n  LoaderTypeTitle?: string;\n  SourceCityTitle?: string;\n  TargetCityTitle?: string;\n  GoodTitle?: string;\n  Tariff?: number;\n  BaseTonnag?: number;\n  CalculationReference?: string;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TariffsManagementService.html":{"url":"injectables/TariffsManagementService.html","title":"injectable - TariffsManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TariffsManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Tariffs-management/tariffs-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                AddPercentageToTariffs\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeTariffsStatus\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteTariffs\n                            \n                            \n                                    Public\n                                    Async\n                                EditTariffs\n                            \n                            \n                                    Public\n                                    Async\n                                GetTariffs\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterTariff\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        AddPercentageToTariffs\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddPercentageToTariffs(tariffs: Tariff[], percentage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tariffs\n                                            \n                                                            Tariff[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                percentage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeTariffsStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTariffsStatus(tariffs: Tariff[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tariffs\n                                            \n                                                            Tariff[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteTariffs\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteTariffs(tariffs: Tariff[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tariffs\n                                            \n                                                            Tariff[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditTariffs\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditTariffs(tariff: Tariff)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tariff\n                                            \n                                                            Tariff\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTariffs\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTariffs(loaderTypeId: number, sourceCityId: number | undefined, targetCityId: number | undefined, productId: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productId\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterTariff\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterTariff(tariff: Tariff)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tariff\n                                            \n                                                            Tariff\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Tariffs-management/tariffs-management.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { Tariff } from 'app/data/model/tariff.model';\nimport { mockTariffs } from 'app/data/mock/tariff.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TariffsManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetTariffs(\n    loaderTypeId: number,\n    sourceCityId: number | undefined,\n    targetCityId: number | undefined,\n    productId: number | undefined\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.GetTariffs;\n    const tariffsInfo: Tariff = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId ?? undefined,\n      TargetCityId: targetCityId ?? undefined,\n      GoodId: productId ?? undefined,\n    };\n    const bodyValue: {\n      SessionId: string;\n      LoaderTypeId: number;\n      SourceCityId?: number;\n      TargetCityId?: number;\n      GoodId?: number;\n    } = {\n      SessionId: this.userAuth.getSessionId() ?? '',\n      LoaderTypeId: tariffsInfo.LoaderTypeId,\n    };\n\n    if (tariffsInfo.SourceCityId != undefined) {\n      bodyValue.SourceCityId = tariffsInfo.SourceCityId;\n    }\n    if (tariffsInfo.TargetCityId != undefined) {\n      bodyValue.TargetCityId = tariffsInfo.TargetCityId;\n    }\n    if (tariffsInfo.GoodId != undefined) {\n      bodyValue.GoodId = tariffsInfo.GoodId;\n    }\n    if (\n      tariffsInfo.SourceCityId == undefined &&\n      tariffsInfo.TargetCityId == undefined &&\n      tariffsInfo.GoodId == undefined\n    ) {\n      bodyValue.SourceCityId = 0;\n    }\n\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTariffs);\n    //#endregion\n  }\n\n  public async AddPercentageToTariffs(\n    tariffs: Tariff[],\n    percentage: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.ChangeTariffsPercentage;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Tariffs: tariffs,\n      AddPercentage: percentage,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteTariffs(\n    tariffs: Tariff[]\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.DeleteTariffs;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Tariffs: tariffs,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditTariffs(\n    tariff: Tariff\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.EditTariffs;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Tariffs: [tariff],\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeTariffsStatus(\n    tariffs: Tariff[]\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.ChangeTariffsStatus;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Tariffs: tariffs,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async RegisterTariff(\n    tariff: Tariff\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Tariffs.RegisterTariff;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Tariffs: [tariff],\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TerminalCardComponent.html":{"url":"components/TerminalCardComponent.html","title":"component - TerminalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TerminalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/terminal-card/terminal-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terminal-card\n            \n\n\n            \n                imports\n                \n                            CardModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./terminal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./terminal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLoginLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                terminal\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        terminal\n                    \n                \n                \n                    \n                        Type :         LoadAnnouncementPlace\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/terminal-card/terminal-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoginLink\n                        \n                    \n                \n            \n            \n                \ngetLoginLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/terminal-card/terminal-card.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { APP_ROUTES } from 'app/constants/routes';\nimport { LoadAnnouncementPlace } from 'app/data/model/load-announcement-place.model';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\n\n@Component({\n  selector: 'app-terminal-card',\n  imports: [CardModule, ButtonModule],\n  templateUrl: './terminal-card.component.html',\n  styleUrl: './terminal-card.component.scss',\n})\nexport class TerminalCardComponent {\n  @Input() terminal?: LoadAnnouncementPlace;\n\n  getLoginLink() {\n    return this.terminal?.LAPURL + APP_ROUTES.AUTH.LOGIN;\n  }\n}\n\n    \n\n    \n        @if (terminal) {\n\n  \n    \n      {{ terminal.LAPTitle }}\n    \n  \n\n  @if (terminal.Description.trim() != '') {\n  \n    {{ terminal.Description }}\n  \n  }\n\n  \n    \n      \n    \n  \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (terminal) {            {{ terminal.LAPTitle }}        @if (terminal.Description.trim() != \\'\\') {      {{ terminal.Description }}    }                  }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TerminalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaInputComponent.html":{"url":"components/TextAreaInputComponent.html","title":"component - TextAreaInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextAreaInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/text-area-input/text-area-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-area-input\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./text-area-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./text-area-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-text-area-input',\n  imports: [],\n  templateUrl: './text-area-input.component.html',\n  styleUrl: './text-area-input.component.scss'\n})\nexport class TextAreaInputComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/text-input/text-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgPersianDatepickerModule\n                            NgClass\n                            InputGroupModule\n                            InputGroupAddonModule\n                            MessageModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./text-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClick\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurInput\n                            \n                            \n                                onFocusInput\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                buttonDisabled\n                            \n                            \n                                buttonIcon\n                            \n                            \n                                control\n                            \n                            \n                                datePickerPosition\n                            \n                            \n                                disabled\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                            \n                                type\n                            \n                            \n                                validationField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickButton\n                            \n                            \n                                input\n                            \n                            \n                                keydown\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstErrorMessage\n                                \n                                \n                                    isDisabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addonWidth\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datePickerPosition\n                    \n                \n                \n                    \n                        Type :     \"top\" | \"bottom\"\n\n                    \n                \n                \n                    \n                        Default value : 'bottom'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pi pi-user'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"password\" | \"text\" | \"date\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validationField\n                    \n                \n                \n                    \n                        Type :         ValidationField | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickButton\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        input\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keydown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:56\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlurInput\n                        \n                    \n                \n            \n            \n                \nonBlurInput(_: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusInput\n                        \n                    \n                \n            \n            \n                \nonFocusInput(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyDown\n                        \n                    \n                \n            \n            \n                \nonKeyDown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstErrorMessage\n                    \n                \n\n                \n                    \n                        getfirstErrorMessage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n\n                \n                    \n                        getisDisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/text-input/text-input.component.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass } from '@angular/common';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\nimport { NgPersianDatepickerModule } from 'ng-persian-datepicker';\n\nimport {\n  ErrorsValidation,\n  getDefaultErrorMessage,\n  ValidationField,\n  ValidationSchema,\n} from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-text-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgPersianDatepickerModule,\n    NgClass,\n    InputGroupModule,\n    InputGroupAddonModule,\n    MessageModule,\n    ButtonModule,\n  ],\n  templateUrl: './text-input.component.html',\n  styleUrl: './text-input.component.scss',\n})\nexport class TextInputComponent implements OnInit, OnChanges {\n  @Input() control = new FormControl('');\n  @Input() validationField: ValidationField | null = null;\n  @Input() placeholder = '';\n  @Input() readOnly = false;\n  @Input() disabled = false;\n  @Input() icon: string = 'pi pi-user';\n  @Input() label = '';\n  @Input() addonWidth: string | null = null;\n  @Input() buttonIcon = '';\n  @Input() buttonDisabled = false;\n  @Input() type: 'password' | 'text' | 'date' = 'text';\n  @Input() datePickerPosition: 'top' | 'bottom' = 'bottom';\n\n  @Output() clickButton = new EventEmitter();\n  @Output() input = new EventEmitter();\n  @Output() keydown = new EventEmitter();\n\n  get firstErrorMessage(): string | null {\n    const errors = this.control?.errors as ErrorsValidation;\n    if (!this.validationField || !errors) return null;\n\n    const rule = ValidationSchema[this.validationField];\n    return getDefaultErrorMessage(rule.name, errors);\n  }\n\n  get isDisabled(): boolean {\n    return this.control.disabled;\n  }\n\n  ngOnInit(): void {\n    this.setDisabledState();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n\n  onFocusInput(input: HTMLInputElement): void {\n    if (this.disabled) {\n      input.blur();\n    }\n  }\n\n  onBlurInput(_: HTMLInputElement): void {\n    if (this.readOnly) {\n      this.control.markAsUntouched();\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    this.keydown.emit(event);\n  }\n  \n  handleClick(): void {\n    this.clickButton.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    @if (label.trim() === '') {\n      \n      \n        \n      \n    } @else {\n      \n      \n        {{ label }}\n      \n    }\n\n    @if (type != 'date') {\n      \n      \n    } @if (type === 'date') {\n      \n      \n        \n          \n            \n          \n        \n      \n    }\n  \n\n  @if (buttonIcon.trim() !== '') {\n    \n    \n      \n    \n  }\n\n\n@if (control.touched && firstErrorMessage) {\n  \n    \n      {{ firstErrorMessage }}\n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (label.trim() === \\'\\') {                              } @else {                    {{ label }}          }    @if (type != \\'date\\') {                } @if (type === \\'date\\') {                                                                      }    @if (buttonIcon.trim() !== \\'\\') {                    }@if (control.touched && firstErrorMessage) {            {{ firstErrorMessage }}      }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemePreset.html":{"url":"interfaces/ThemePreset.html","title":"interface - ThemePreset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemePreset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/theme.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            components\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            primitives\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            semantic\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         ComponentTokens\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentTokens\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primitives\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primitives:         PrimitiveTokens\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrimitiveTokens\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        semantic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        semantic:         SemanticTokens\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SemanticTokens\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface PrimitiveTokens {\n  [key: string]: string;\n}\n\n// Semantic tokens provide contextual meaning to primitive tokens\ninterface SemanticTokens {\n  primary?: {\n    [shade: number]: string;\n  };\n  colorScheme?: {\n    light?: ColorScheme;\n    dark?: ColorScheme;\n  };\n  [key: string]: any;\n}\n\n// Defines the structure for color schemes\ninterface ColorScheme {\n  primary?: {\n    color?: string;\n    inverseColor?: string;\n    hoverColor?: string;\n    activeColor?: string;\n  };\n  highlight?: {\n    background?: string;\n    focusBackground?: string;\n    color?: string;\n    focusColor?: string;\n  };\n  [key: string]: any;\n}\n\n// Component tokens allow customization at the component level\ninterface ComponentTokens {\n  [componentName: string]: {\n    [property: string]: string;\n  };\n}\n\n// The complete theme preset combining all token types\nexport interface ThemePreset {\n  name?: string;\n  primitives?: PrimitiveTokens;\n  semantic?: SemanticTokens;\n  components?: ComponentTokens;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimePickerInput.html":{"url":"components/TimePickerInput.html","title":"component - TimePickerInput","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimePickerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-time-picker-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            InputGroupModule\n                            InputGroupAddonModule\n                            MessageModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./time-picker-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./time-picker-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeIntervalId\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                hour\n                            \n                            \n                                    Private\n                                isInternalUpdate\n                            \n                            \n                                minutes\n                            \n                            \n                                second\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrement\n                            \n                            \n                                    Private\n                                enforceTimeRange\n                            \n                            \n                                increment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurInput\n                            \n                            \n                                onFocusInput\n                            \n                            \n                                    Private\n                                setDisabledState\n                            \n                            \n                                startContinuousChange\n                            \n                            \n                                stopContinuousChange\n                            \n                            \n                                    Private\n                                updateParentControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                readOnly\n                            \n                            \n                                validationField\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstErrorMessage\n                                \n                                \n                                    isDisabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validationField\n                    \n                \n                \n                    \n                        Type :         ValidationField | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:46\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decrement\n                        \n                    \n                \n            \n            \n                \ndecrement(control: FormControl, min: number, max: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enforceTimeRange\n                        \n                    \n                \n            \n            \n                \n                        \n                    enforceTimeRange(control: FormControl, min: number, max: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increment\n                        \n                    \n                \n            \n            \n                \nincrement(control: FormControl, min: number, max: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlurInput\n                        \n                    \n                \n            \n            \n                \nonBlurInput(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusInput\n                        \n                    \n                \n            \n            \n                \nonFocusInput(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDisabledState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startContinuousChange\n                        \n                    \n                \n            \n            \n                \nstartContinuousChange(control: FormControl, min: number, max: number, mode: \"increment\" | \"decrement\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"increment\" | \"decrement\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopContinuousChange\n                        \n                    \n                \n            \n            \n                \nstopContinuousChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateParentControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParentControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeIntervalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('00')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isInternalUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('00')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        second\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('00')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstErrorMessage\n                    \n                \n\n                \n                    \n                        getfirstErrorMessage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n\n                \n                    \n                        getisDisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/shared/inputs/time-picker-input/time-picker-input.component.component.ts:72\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// 🎯 PrimeNG UI Modules\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { MessageModule } from 'primeng/message';\nimport { ButtonModule } from 'primeng/button';\n\n// 📐 Validation Utilities\nimport {\n  ErrorsValidation,\n  getDefaultErrorMessage,\n  ValidationField,\n  ValidationSchema,\n} from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-time-picker-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    InputGroupModule,\n    InputGroupAddonModule,\n    MessageModule,\n    ButtonModule,\n  ],\n  templateUrl: './time-picker-input.component.html',\n  styleUrl: './time-picker-input.component.scss',\n})\nexport class TimePickerInput implements OnInit, OnChanges, OnDestroy {\n  // 📥 Inputs\n  @Input() control = new FormControl('');\n  @Input() validationField: ValidationField | null = null;\n  @Input() readOnly = false;\n  @Input() disabled = false;\n  @Input() label: string | undefined;\n\n  // 🕒 Internal time controls\n  hour = new FormControl('00');\n  minutes = new FormControl('00');\n  second = new FormControl('00');\n\n  // 🔁 Cleanup subject for subscriptions\n  private destroy$ = new Subject();\n\n  // 🔐 Prevent recursive update loops\n  private isInternalUpdate = false;\n\n  // 🧾 Show first validation error (if any)\n  get firstErrorMessage(): string | null {\n    const errors = this.control?.errors as ErrorsValidation;\n    if (!this.validationField || !errors) return null;\n\n    const rule = ValidationSchema[this.validationField];\n    return getDefaultErrorMessage(rule.name, errors);\n  }\n\n  // ❌ Expose whether parent control is disabled\n  get isDisabled(): boolean {\n    return this.control.disabled;\n  }\n\n  // 🚀 On component init\n  ngOnInit(): void {\n    this.setDisabledState();\n\n    // ✅ Enforce valid time ranges\n    this.enforceTimeRange(this.hour, 0, 23);     // Hours: 00–23\n    this.enforceTimeRange(this.minutes, 0, 59);  // Minutes: 00–59\n    this.enforceTimeRange(this.second, 0, 59);   // Seconds: 00–59\n\n    // 🔄 Sync parent → internal controls\n    this.control.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => {\n        if (this.isInternalUpdate) return;\n\n        const time = String(value).split(':');\n        if (time.length === 3) {\n          this.hour.setValue(time[0], { emitEvent: false });\n          this.minutes.setValue(time[1], { emitEvent: false });\n          this.second.setValue(time[2], { emitEvent: false });\n        }\n      });\n  }\n\n  // 🔄 Handle @Input() changes\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      this.setDisabledState();\n    }\n  }\n\n  // 🧹 Cleanup on destroy\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // 🧭 Enable/disable parent control based on @Input()\n  private setDisabledState(): void {\n    if (this.disabled) {\n      this.control.disable({ emitEvent: false });\n    } else {\n      this.control.enable({ emitEvent: false });\n    }\n  }\n\n  // 👁️ Blur input on focus if disabled\n  onFocusInput(input: HTMLInputElement): void {\n    if (this.disabled) {\n      input.blur();\n    }\n  }\n\n  // 🧽 Format and prevent touch on readonly\n  onBlurInput(control: FormControl): void {\n    if (this.readOnly) {\n      this.control.markAsUntouched();\n      return;\n    }\n\n    const val = String(Number(control.value) || '0').padStart(2, '0');\n    control.setValue(val, { emitEvent: false });\n  }\n\n  // 🚦 Limit value range for a control (e.g., 0–59)\n  private enforceTimeRange(\n    control: FormControl,\n    min: number,\n    max: number\n  ): void {\n    control.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n      let num = Number(value);\n\n      if (isNaN(num)) {\n        control.setValue(min, { emitEvent: false });\n        return;\n      }\n\n      if (num  max) {\n        control.setValue(max, { emitEvent: false });\n      }\n\n      this.updateParentControl();\n    });\n  }\n\n  // ⏫ Auto increment/decrement interval logic\n  private changeIntervalId: any = null;\n\n  startContinuousChange(\n    control: FormControl,\n    min: number,\n    max: number,\n    mode: 'increment' | 'decrement'\n  ) {\n    // Start immediately\n    if (mode === 'increment') this.increment(control, min, max);\n    else this.decrement(control, min, max);\n\n    // Continue every 200ms\n    this.changeIntervalId = setInterval(() => {\n      if (mode === 'increment') this.increment(control, min, max);\n      else this.decrement(control, min, max);\n    }, 200);\n  }\n\n  stopContinuousChange() {\n    if (this.changeIntervalId) {\n      clearInterval(this.changeIntervalId);\n      this.changeIntervalId = null;\n    }\n  }\n\n  // ➕ Increase time value\n  increment(control: FormControl, min: number, max: number) {\n    let val = Number(control.value);\n    if (isNaN(val)) val = min;\n    else if (val >= max) val = 0;\n    else val++;\n\n    control.setValue(String(val).padStart(2, '0'), { emitEvent: false });\n    this.updateParentControl();\n  }\n\n  // ➖ Decrease time value\n  decrement(control: FormControl, min: number, max: number) {\n    let val = Number(control.value);\n    if (isNaN(val)) val = min;\n    else if (val \n    \n\n    \n        \n  \n  \n    \n    \n    \n  \n\n  :\n\n  \n  \n    \n    \n    \n  \n\n  :\n\n  \n  \n    \n    \n    \n  \n  {{ label }}\n\n\n\n\n  \n    {{ firstErrorMessage }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    :                    :                    {{ label }}      {{ firstErrorMessage }}  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimePickerInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast-service/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                messageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(title: string, detail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast-service/toast.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                detail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(title: string, detail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast-service/toast.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                detail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(title: string, detail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast-service/toast.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                detail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast-service/toast.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  private messageService = inject(MessageService);\n\n  success(title: string, detail: string) {\n    this.messageService.add({ severity: 'success', summary: title, detail });\n  }\n\n  error(title: string, detail: string) {\n    this.messageService.add({ severity: 'error', summary: title, detail });\n  }\n\n  info(title: string, detail: string) {\n    this.messageService.add({ severity: 'info', summary: title, detail });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TravelTime.html":{"url":"interfaces/TravelTime.html","title":"interface - TravelTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TravelTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/travel-time.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Active\n                                        \n                                \n                                \n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            LoaderTypeTitle\n                                        \n                                \n                                \n                                        \n                                            SourceCityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SourceCityName\n                                        \n                                \n                                \n                                        \n                                            TargetCityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TargetCityName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TravelTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityId:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SourceCityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SourceCityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityId:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TargetCityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TargetCityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TravelTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TravelTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TravelTime {\n  LoaderTypeId: number;\n  SourceCityId: number | undefined;\n  TargetCityId: number | undefined;\n  LoaderTypeTitle?: string;\n  SourceCityName?: string;\n  TargetCityName?: string;\n  TravelTime?: number;\n  Active?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TravelTimeManagementService.html":{"url":"injectables/TravelTimeManagementService.html","title":"injectable - TravelTimeManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TravelTimeManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/travel-time-management/travel-time-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ChangeTravelTimeStatus\n                            \n                            \n                                    Public\n                                    Async\n                                DeleteTravelTime\n                            \n                            \n                                    Public\n                                    Async\n                                EditTravelTime\n                            \n                            \n                                    Public\n                                    Async\n                                GetTravelTime\n                            \n                            \n                                    Public\n                                    Async\n                                GetTravelTimes\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewTravelTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeTravelTimeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTravelTimeStatus(loaderTypeId: number, sourceCityId: number, targetCityId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        DeleteTravelTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteTravelTime(loaderId: number, sourceCityId: number, targetCityId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditTravelTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditTravelTime(loaderTypeId: number, sourceCityId: number, targetCityId: number, time: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                time\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTravelTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTravelTime(loaderTypeId: number, sourceCityId: number, targetCityId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTravelTimes\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTravelTimes(loaderTypeId: number, sourceCityId?: number | undefined, targetCityId?: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewTravelTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewTravelTime(loaderTypeId: number, sourceCityId: number, targetCityId: number, time: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/travel-time-management/travel-time-management.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loaderTypeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sourceCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetCityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                time\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/travel-time-management/travel-time-management.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/travel-time-management/travel-time-management.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { TravelTime } from 'app/data/model/travel-time.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockTravelTimes } from 'app/data/mock/travel-time.mock';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TravelTimeManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetTravelTimes(\n    loaderTypeId: number,\n    sourceCityId?: number | undefined,\n    targetCityId?: number | undefined\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.TravelTime.GetTravelTimes;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId ?? undefined,\n      TargetCityId: targetCityId ?? undefined,\n    };\n    const bodyValue: {\n      SessionId: string;\n      LoaderTypeId: number;\n      SourceCityId?: number;\n      TargetCityId?: number;\n    } = {\n      SessionId: this.userAuth.getSessionId() ?? '',\n      LoaderTypeId: travelTimeInfo.LoaderTypeId,\n    };\n\n    if (travelTimeInfo.SourceCityId != undefined) {\n      bodyValue.SourceCityId = travelTimeInfo.SourceCityId;\n    }\n    if (travelTimeInfo.TargetCityId != undefined) {\n      bodyValue.TargetCityId = travelTimeInfo.TargetCityId;\n    }\n    if (\n      travelTimeInfo.SourceCityId == undefined &&\n      travelTimeInfo.TargetCityId == undefined\n    ) {\n      bodyValue.SourceCityId = 0;\n    }\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTravelTimes);\n    //#endregion\n  }\n\n  public async GetTravelTime(\n    loaderTypeId: number,\n    sourceCityId: number,\n    targetCityId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.TravelTime.GetTravelTime;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId,\n      TargetCityId: targetCityId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      LoaderTypeId: travelTimeInfo.LoaderTypeId,\n      SourceCityId: travelTimeInfo.SourceCityId,\n      TargetCityId: travelTimeInfo.TargetCityId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTravelTimes[0]);\n    //#endregion\n  }\n\n  public async RegisterNewTravelTime(\n    loaderTypeId: number,\n    sourceCityId: number,\n    targetCityId: number,\n    time: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.TravelTime.RegisterTravelTime;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId,\n      TargetCityId: targetCityId,\n      TravelTime: time,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TravelTime: travelTimeInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditTravelTime(\n    loaderTypeId: number,\n    sourceCityId: number,\n    targetCityId: number,\n    time: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.TravelTime.EditTravelTime;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId,\n      TargetCityId: targetCityId,\n      TravelTime: time,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TravelTime: travelTimeInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async DeleteTravelTime(\n    loaderId: number,\n    sourceCityId: number,\n    targetCityId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.TravelTime.DeleteTravelTime;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderId,\n      SourceCityId: sourceCityId,\n      TargetCityId: targetCityId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TravelTime: travelTimeInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ChangeTravelTimeStatus(\n    loaderTypeId: number,\n    sourceCityId: number,\n    targetCityId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.TravelTime.ChangeTravelTimeStatus;\n    const travelTimeInfo: TravelTime = {\n      LoaderTypeId: loaderTypeId,\n      SourceCityId: sourceCityId,\n      TargetCityId: targetCityId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TravelTime: travelTimeInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeTableChangedData.html":{"url":"interfaces/TreeTableChangedData.html","title":"interface - TreeTableChangedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TreeTableChangedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgClass } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTable, TreeTableModule } from 'primeng/treetable';\nimport { SearchInputComponent } from '../../shared/inputs/search-input/search-input.component';\nimport { ButtonModule } from 'primeng/button';\nimport { FormControl } from '@angular/forms';\n\ninterface SelectionKey {\n  checked: boolean;\n  partialChecked?: boolean;\n  isHidden: boolean;\n}\n\nexport interface TreeTableChangedData {\n  parent?: any;\n  children: any[];\n}\n\n@Component({\n  selector: 'app-tree-table-checkbox',\n  templateUrl: './tree-table-checkbox.component.html',\n  styleUrl: './tree-table-checkbox.component.scss',\n  imports: [TreeTableModule, NgClass, ButtonModule,SearchInputComponent],\n})\nexport class TreeTableCheckboxComponent implements OnInit, OnChanges {\n  @ViewChild('treeTable') tt!: TreeTable;\n\n  @Input() tree: TreeNode[] = [];\n  @Input() parentField = '';\n  @Input() childField = '';\n  @Input() cols: string[] = [];\n  @Input() rows: string[][] = [];\n  @Input() enabledSearch = false;\n  @Input() searchFields: string[] = [];\n  @Input() searchPlaceholder = '';\n  @Input() paginator = false;\n  @Input() rowsPerPage = 10;\n  @Input() paginatorLocale = 'en';\n  @Input() enabledAutoSearch: boolean = true;\n\n  @Output() onTableCheckBoxChange = new EventEmitter();\n  @Output() onSearch = new EventEmitter();\n\n  treeMap = new Map();\n  selectionKeys: Record = {};\n  lastSelectionKeys: Record = {};\n  searchTerm = new FormControl('');\n\n  ngOnInit(): void {\n    this.tree = this.initializeTree();\n    this.buildTreeMap(this.tree);\n    this.lastSelectionKeys = structuredClone(this.selectionKeys);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['tree']) {\n      this.tree = this.initializeTree();\n      this.buildTreeMap(this.tree);\n      this.lastSelectionKeys = structuredClone(this.selectionKeys);\n    }\n  }\n\n  selectionKeysChanged(newKeys: Record): void {\n    const allKeys = new Set([\n      ...Object.keys(this.lastSelectionKeys),\n      ...Object.keys(newKeys),\n    ]);\n\n    const children: any[] = [];\n    let parent: any | null = null;\n\n    for (const key of allKeys) {\n      const old = this.lastSelectionKeys[key];\n      const current = newKeys[key];\n\n      const oldChecked = old?.checked ?? false;\n      const oldPartial = old?.partialChecked ?? false;\n      const newChecked = current?.checked ?? false;\n      const newPartial = current?.partialChecked ?? false;\n\n      const hasChanged = oldChecked !== newChecked || oldPartial !== newPartial;\n      if (!hasChanged) continue;\n\n      const node = this.treeMap.get(key);\n      if (!node) continue;\n\n      const isParent = key.length  this.setKeysRecursively(node, `${i}`));\n  }\n\n  private setKeysRecursively(node: TreeNode, path: string): TreeNode {\n    const parentChecked = !!node.data?.[this.parentField];\n    let hasCheckedChild = false;\n    let hasUncheckedChild = false;\n\n    const children =\n      node.children?.map((child, i) => {\n        const childKey = `${path}-${i}`;\n        const checked = !!child.data?.[this.childField];\n        this.selectionKeys[childKey] = { checked, isHidden: false };\n\n        checked ? (hasCheckedChild = true) : (hasUncheckedChild = true);\n\n        return { ...child, key: childKey };\n      }) ?? [];\n\n    const partialChecked = hasCheckedChild && hasUncheckedChild;\n    const checked = partialChecked ? false : parentChecked;\n\n    this.selectionKeys[path] = { checked, partialChecked, isHidden: false };\n    return { ...node, key: path, children };\n  }\n\n  private buildTreeMap(nodes: TreeNode[]): void {\n    for (const node of nodes) {\n      if (!node.key) continue;\n      this.treeMap.set(node.key, node);\n      if (node.children?.length) {\n        this.buildTreeMap(node.children);\n      }\n    }\n  }\n\n  filterTree(query: string): void {\n    if (this.enabledAutoSearch) {\n      this.filters(query);\n      this.onSearch.emit(query);\n    }\n  }\n\n  onClickSearch() {\n    if (!this.enabledAutoSearch) {\n      this.filters(this.searchTerm.value ?? '');\n      this.onSearch.emit(this.searchTerm.value ?? '');\n    }\n  }\n\n  private filters(query: string) {\n    const q = query.trim().toLowerCase();\n    this.tree.forEach((node) => {\n      const parentMatch = this.searchFields.some((filed) =>\n        node.data?.[filed]?.toLowerCase().includes(q)\n      );\n\n      let matchedChild = false;\n\n      node.children?.forEach((child) => {\n        const childMatch = this.searchFields.some((filed) =>\n          child.data?.[filed]?.toLowerCase().includes(q)\n        );\n        if (childMatch) {\n          child.styleClass = '';\n          matchedChild = true;\n        } else {\n          child.styleClass = 'hidden';\n        }\n      });\n\n      if (parentMatch || matchedChild) {\n        node.styleClass = '';\n      } else {\n        node.styleClass = 'hidden';\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeTableCheckboxComponent.html":{"url":"components/TreeTableCheckboxComponent.html","title":"component - TreeTableCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeTableCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree-table-checkbox\n            \n\n\n            \n                imports\n                \n                            TreeTableModule\n                            NgClass\n                            ButtonModule\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tree-table-checkbox.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tree-table-checkbox.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastSelectionKeys\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectionKeys\n                            \n                            \n                                treeMap\n                            \n                            \n                                    \n                                tt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildTreeMap\n                            \n                            \n                                    Private\n                                filters\n                            \n                            \n                                filterTree\n                            \n                            \n                                    Private\n                                initializeTree\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickSearch\n                            \n                            \n                                selectionKeysChanged\n                            \n                            \n                                    Private\n                                setKeysRecursively\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                childField\n                            \n                            \n                                cols\n                            \n                            \n                                enabledAutoSearch\n                            \n                            \n                                enabledSearch\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorLocale\n                            \n                            \n                                parentField\n                            \n                            \n                                rows\n                            \n                            \n                                rowsPerPage\n                            \n                            \n                                searchFields\n                            \n                            \n                                searchPlaceholder\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSearch\n                            \n                            \n                                onTableCheckBoxChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        childField\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enabledAutoSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enabledSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginator\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginatorLocale\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentField\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchFields\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tree\n                    \n                \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSearch\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTableCheckBoxChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:51\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildTreeMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildTreeMap(nodes: TreeNode[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                        TreeNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filters\n                        \n                    \n                \n            \n            \n                \n                        \n                    filters(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterTree\n                        \n                    \n                \n            \n            \n                \nfilterTree(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeTree()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TreeNode[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickSearch\n                        \n                    \n                \n            \n            \n                \nonClickSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionKeysChanged\n                        \n                    \n                \n            \n            \n                \nselectionKeysChanged(newKeys: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newKeys\n                                            \n                                                            Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setKeysRecursively\n                        \n                    \n                \n            \n            \n                \n                        \n                    setKeysRecursively(node: TreeNode, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                        TreeNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TreeNode\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastSelectionKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeTable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('treeTable')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/trees/tree-table-checkbox/tree-table-checkbox.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTable, TreeTableModule } from 'primeng/treetable';\nimport { SearchInputComponent } from '../../shared/inputs/search-input/search-input.component';\nimport { ButtonModule } from 'primeng/button';\nimport { FormControl } from '@angular/forms';\n\ninterface SelectionKey {\n  checked: boolean;\n  partialChecked?: boolean;\n  isHidden: boolean;\n}\n\nexport interface TreeTableChangedData {\n  parent?: any;\n  children: any[];\n}\n\n@Component({\n  selector: 'app-tree-table-checkbox',\n  templateUrl: './tree-table-checkbox.component.html',\n  styleUrl: './tree-table-checkbox.component.scss',\n  imports: [TreeTableModule, NgClass, ButtonModule,SearchInputComponent],\n})\nexport class TreeTableCheckboxComponent implements OnInit, OnChanges {\n  @ViewChild('treeTable') tt!: TreeTable;\n\n  @Input() tree: TreeNode[] = [];\n  @Input() parentField = '';\n  @Input() childField = '';\n  @Input() cols: string[] = [];\n  @Input() rows: string[][] = [];\n  @Input() enabledSearch = false;\n  @Input() searchFields: string[] = [];\n  @Input() searchPlaceholder = '';\n  @Input() paginator = false;\n  @Input() rowsPerPage = 10;\n  @Input() paginatorLocale = 'en';\n  @Input() enabledAutoSearch: boolean = true;\n\n  @Output() onTableCheckBoxChange = new EventEmitter();\n  @Output() onSearch = new EventEmitter();\n\n  treeMap = new Map();\n  selectionKeys: Record = {};\n  lastSelectionKeys: Record = {};\n  searchTerm = new FormControl('');\n\n  ngOnInit(): void {\n    this.tree = this.initializeTree();\n    this.buildTreeMap(this.tree);\n    this.lastSelectionKeys = structuredClone(this.selectionKeys);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['tree']) {\n      this.tree = this.initializeTree();\n      this.buildTreeMap(this.tree);\n      this.lastSelectionKeys = structuredClone(this.selectionKeys);\n    }\n  }\n\n  selectionKeysChanged(newKeys: Record): void {\n    const allKeys = new Set([\n      ...Object.keys(this.lastSelectionKeys),\n      ...Object.keys(newKeys),\n    ]);\n\n    const children: any[] = [];\n    let parent: any | null = null;\n\n    for (const key of allKeys) {\n      const old = this.lastSelectionKeys[key];\n      const current = newKeys[key];\n\n      const oldChecked = old?.checked ?? false;\n      const oldPartial = old?.partialChecked ?? false;\n      const newChecked = current?.checked ?? false;\n      const newPartial = current?.partialChecked ?? false;\n\n      const hasChanged = oldChecked !== newChecked || oldPartial !== newPartial;\n      if (!hasChanged) continue;\n\n      const node = this.treeMap.get(key);\n      if (!node) continue;\n\n      const isParent = key.length  this.setKeysRecursively(node, `${i}`));\n  }\n\n  private setKeysRecursively(node: TreeNode, path: string): TreeNode {\n    const parentChecked = !!node.data?.[this.parentField];\n    let hasCheckedChild = false;\n    let hasUncheckedChild = false;\n\n    const children =\n      node.children?.map((child, i) => {\n        const childKey = `${path}-${i}`;\n        const checked = !!child.data?.[this.childField];\n        this.selectionKeys[childKey] = { checked, isHidden: false };\n\n        checked ? (hasCheckedChild = true) : (hasUncheckedChild = true);\n\n        return { ...child, key: childKey };\n      }) ?? [];\n\n    const partialChecked = hasCheckedChild && hasUncheckedChild;\n    const checked = partialChecked ? false : parentChecked;\n\n    this.selectionKeys[path] = { checked, partialChecked, isHidden: false };\n    return { ...node, key: path, children };\n  }\n\n  private buildTreeMap(nodes: TreeNode[]): void {\n    for (const node of nodes) {\n      if (!node.key) continue;\n      this.treeMap.set(node.key, node);\n      if (node.children?.length) {\n        this.buildTreeMap(node.children);\n      }\n    }\n  }\n\n  filterTree(query: string): void {\n    if (this.enabledAutoSearch) {\n      this.filters(query);\n      this.onSearch.emit(query);\n    }\n  }\n\n  onClickSearch() {\n    if (!this.enabledAutoSearch) {\n      this.filters(this.searchTerm.value ?? '');\n      this.onSearch.emit(this.searchTerm.value ?? '');\n    }\n  }\n\n  private filters(query: string) {\n    const q = query.trim().toLowerCase();\n    this.tree.forEach((node) => {\n      const parentMatch = this.searchFields.some((filed) =>\n        node.data?.[filed]?.toLowerCase().includes(q)\n      );\n\n      let matchedChild = false;\n\n      node.children?.forEach((child) => {\n        const childMatch = this.searchFields.some((filed) =>\n          child.data?.[filed]?.toLowerCase().includes(q)\n        );\n        if (childMatch) {\n          child.styleClass = '';\n          matchedChild = true;\n        } else {\n          child.styleClass = 'hidden';\n        }\n      });\n\n      if (parentMatch || matchedChild) {\n        node.styleClass = '';\n      } else {\n        node.styleClass = 'hidden';\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  @if (enabledSearch) {\n  \n    \n  \n  }\n\n  \n    \n  \n\n  \n  \n    \n      @for (col of columns; track $index) {\n      {{ col }}\n      }\n    \n  \n\n  \n  \n    \n      @for (rowItem of rows; track $index) {\n      \n        @if ($index == 0) {\n        \n        \n        } @for (field of rowItem; track $index) {\n        {{ rowData[field] }}\n        }\n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (enabledSearch) {          }                      @for (col of columns; track $index) {      {{ col }}      }                    @for (rowItem of rows; track $index) {              @if ($index == 0) {                        } @for (field of rowItem; track $index) {        {{ rowData[field] }}        }            }      '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeTableCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TruckAndDriverInformationFormComponent.html":{"url":"components/TruckAndDriverInformationFormComponent.html","title":"component - TruckAndDriverInformationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TruckAndDriverInformationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-truck-and-driver-information-form\n            \n\n\n            \n                imports\n                \n                            CardModule\n                            SplitterModule\n                                FormCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./truck-and-driver-information-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./truck-and-driver-information-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                driver_truckManager\n                            \n                            \n                                driverDataForHtml\n                            \n                            \n                                    Optional\n                                DriverInfo\n                            \n                            \n                                loaderTypeDataForHtml\n                            \n                            \n                                    Optional\n                                LoaderTypeInfo\n                            \n                            \n                                    Private\n                                loaderTypeManager\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                truckDataForHtml\n                            \n                            \n                                    Optional\n                                TruckInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                populateDataForHtml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                insideTabType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        insideTabType\n                    \n                \n                \n                    \n                        Type :         \"Truck\" | \"LoaderType\" | \"Driver\"\n\n                    \n                \n                \n                    \n                        Default value : 'Truck'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateDataForHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateDataForHtml()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        driver_truckManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Driver_TruckManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driverDataForHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         dataFormat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        DriverInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TruckDriverInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderTypeDataForHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         dataFormat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        LoaderTypeInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoaderType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaderTypeManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderTypesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckDataForHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         dataFormat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        TruckInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TruckInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input, OnInit } from '@angular/core';\nimport { CardModule } from 'primeng/card';\nimport { TruckInfo } from 'app/services/driver-truck-management/model/truck-info.model';\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { LoaderTypesService } from 'app/services/loader-types/loader-types.service';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\nimport { TruckDriverInfo } from 'app/services/driver-truck-management/model/truck-driver-info.model';\nimport { SplitterModule } from 'primeng/splitter';\nimport { FormCardComponent } from \"../../shared/form-card/form-card.component\";\n\ninterface dataFormat {\n  title: string;\n  value: any;\n}\n\n@Component({\n  selector: 'app-truck-and-driver-information-form',\n  imports: [CardModule, SplitterModule, FormCardComponent],\n  templateUrl: './truck-and-driver-information-form.component.html',\n  styleUrl: './truck-and-driver-information-form.component.scss',\n})\nexport class TruckAndDriverInformationFormComponent implements OnInit {\n  @Input() insideTabType: 'Truck' | 'LoaderType' | 'Driver' = 'Truck';\n\n  TruckInfo?: TruckInfo;\n  LoaderTypeInfo?: LoaderType;\n  DriverInfo?: TruckDriverInfo;\n  truckDataForHtml: dataFormat[] = [];\n  loaderTypeDataForHtml: dataFormat[] = [];\n  driverDataForHtml: dataFormat[] = [];\n\n  private driver_truckManager = inject(Driver_TruckManagementService);\n  private loaderTypeManager = inject(LoaderTypesService);\n  private toast = inject(ToastService);\n\n  async ngOnInit(): Promise {\n    //#region Set TruckInfo\n    if (this.insideTabType === 'Truck') {\n      const truckResponse =\n        await this.driver_truckManager.GetTruckInfoForSoftwareUser();\n      if (!checkAndToastError(truckResponse, this.toast)) return;\n      this.TruckInfo = truckResponse.data;\n    }\n    //#endregion\n\n    //#region LoaderTypeInfo\n    if (this.insideTabType === 'LoaderType') {\n      const loaderTypeResponse =\n        await this.loaderTypeManager.GetLoaderTypeInfoForSoftwareUser();\n      if (!checkAndToastError(loaderTypeResponse, this.toast)) return;\n      this.LoaderTypeInfo = loaderTypeResponse.data;\n    }\n    //#endregion\n\n    //#region DriverInfo\n    if (this.insideTabType === 'Driver') {\n      const driverResponse =\n        await this.driver_truckManager.GetDriverInfoForSoftwareUser();\n      if (!checkAndToastError(driverResponse, this.toast)) return;\n      this.DriverInfo = driverResponse.data;\n    }\n    //#endregion\n\n    this.populateDataForHtml();\n\n    console.log(this.TruckInfo, this.LoaderTypeInfo, this.DriverInfo);\n  }\n\n  private populateDataForHtml() {\n    this.loaderTypeDataForHtml = [\n      {\n        title: 'کد بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeId,\n      },\n      {\n        title: 'شرح بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeTitle,\n      },\n      {\n        title: 'نوع بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeFixStatusTitle,\n      },\n    ];\n\n    this.driverDataForHtml = [\n      {\n        title: 'کد راننده :',\n        value: this.DriverInfo?.DriverId,\n      },\n      {\n        title: 'نام و نام خانوادگی :',\n        value: this.DriverInfo?.NameFamily,\n      },\n      {\n        title: 'کد ملی :',\n        value: this.DriverInfo?.NationalCode,\n      },\n      {\n        title: 'شماره همراه :',\n        value: this.DriverInfo?.MobileNumber,\n      },\n      {\n        title: 'نام پدر :',\n        value: this.DriverInfo?.FatherName,\n      },\n      {\n        title: 'شماره گواهینامه :',\n        value: this.DriverInfo?.DrivingLicenseNo,\n      },\n      {\n        title: 'شماره هوشمند :',\n        value: this.DriverInfo?.SmartCardNo,\n      },\n    ];\n  }\n}\n\n    \n\n    \n        @if (insideTabType === \"Truck\") {\n\n  \n    \n      کد ناوگان :\n      {{ TruckInfo?.TruckId || \"نامشخص\" }}\n    \n    \n      پلاک و سریال :\n      \n        @if (TruckInfo == undefined) {\n        نامشخص\n        }@else {\n        \n          \n            \n              \n                ایران\n              \n              \n                {{ TruckInfo.Serial }}\n              \n            \n          \n          \n            {{ TruckInfo.Pelak }}\n          \n        \n        }\n      \n    \n  \n\n\n} @if (insideTabType === \"LoaderType\") {\n\n  \n    @for (item of loaderTypeDataForHtml; track $index) {\n    \n      {{ item.title || \"نامشخص\" }}\n      {{ item.value || \"نامشخص\" }}\n    \n    }\n  \n\n\n} @if (insideTabType === \"Driver\") {\n\n  \n    @for (item of driverDataForHtml; track $index) {\n    \n      {{ item.title || \"نامشخص\" }}\n      {{ item.value || \"نامشخص\" }}\n    \n    }\n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (insideTabType === \"Truck\") {            کد ناوگان :      {{ TruckInfo?.TruckId || \"نامشخص\" }}              پلاک و سریال :              @if (TruckInfo == undefined) {        نامشخص        }@else {                                                            ایران                                            {{ TruckInfo.Serial }}                                                          {{ TruckInfo.Pelak }}                          }            } @if (insideTabType === \"LoaderType\") {      @for (item of loaderTypeDataForHtml; track $index) {          {{ item.title || \"نامشخص\" }}      {{ item.value || \"نامشخص\" }}        }  } @if (insideTabType === \"Driver\") {      @for (item of driverDataForHtml; track $index) {          {{ item.title || \"نامشخص\" }}      {{ item.value || \"نامشخص\" }}        }  }'\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TruckAndDriverInformationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckComposedInfo.html":{"url":"interfaces/TruckComposedInfo.html","title":"interface - TruckComposedInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TruckComposedInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/driver-truck-management/model/truck-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            MoneyWallet\n                                        \n                                \n                                \n                                        \n                                            Truck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TruckDriver\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Turn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MoneyWallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MoneyWallet:         Wallet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Truck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Truck:         TruckInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TruckInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckDriver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckDriver:         TruckDriverInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TruckDriverInfo\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Turn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Turn:         Turn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Turn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TruckDriverInfo } from './truck-driver-info.model';\nimport { Turn } from '../../turn-management/model/turn.model';\nimport { Wallet } from '../../wallet-management/model/wallet.model';\n\nexport interface TruckInfo {\n  TruckId: number;\n  LoaderTypeId?: number;\n  Pelak?: string;\n  Serial?: string;\n  SmartCardNo?: string;\n}\n\nexport interface TruckComposedInfo {\n  Truck: TruckInfo;\n  TruckDriver?: TruckDriverInfo;\n  Turn?: Turn;\n  MoneyWallet?: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckDriverInfo.html":{"url":"interfaces/TruckDriverInfo.html","title":"interface - TruckDriverInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TruckDriverInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/driver-truck-management/model/truck-driver-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Address\n                                        \n                                \n                                \n                                        \n                                            DriverId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DrivingLicenseNo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            FatherName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            MobileNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            NameFamily\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            NationalCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SmartCardNo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DriverId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DriverId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DrivingLicenseNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DrivingLicenseNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FatherName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FatherName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MobileNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NameFamily\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NameFamily:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NationalCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NationalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SmartCardNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SmartCardNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TruckDriverInfo {\n  DriverId: number;\n  NationalCode?: string;\n  NameFamily?: string;\n  MobileNumber?: string;\n  FatherName?: string;\n  DrivingLicenseNo?: string;\n  Address?: string;\n  SmartCardNo?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckInfo.html":{"url":"interfaces/TruckInfo.html","title":"interface - TruckInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TruckInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/driver-truck-management/model/truck-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            LoaderTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Pelak\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Serial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SmartCardNo\n                                        \n                                \n                                \n                                        \n                                            TruckId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        LoaderTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoaderTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Pelak\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Pelak:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Serial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Serial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SmartCardNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SmartCardNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TruckDriverInfo } from './truck-driver-info.model';\nimport { Turn } from '../../turn-management/model/turn.model';\nimport { Wallet } from '../../wallet-management/model/wallet.model';\n\nexport interface TruckInfo {\n  TruckId: number;\n  LoaderTypeId?: number;\n  Pelak?: string;\n  Serial?: string;\n  SmartCardNo?: string;\n}\n\nexport interface TruckComposedInfo {\n  Truck: TruckInfo;\n  TruckDriver?: TruckDriverInfo;\n  Turn?: Turn;\n  MoneyWallet?: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TruckInfoFormComponent.html":{"url":"components/TruckInfoFormComponent.html","title":"component - TruckInfoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TruckInfoFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-truck-info-form\n            \n\n\n            \n                imports\n                \n                            NgPersianDatepickerModule\n                            ButtonModule\n                            ReactiveFormsModule\n                                TextInputComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./truck-info-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./truck-info-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loadFormsInformation\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                truckInfoForm\n                            \n                            \n                                truckNativenessForm\n                            \n                            \n                                    Private\n                                truckService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNativeness\n                            \n                            \n                                getTruckInfoFromForm\n                            \n                            \n                                getTruckNativenessInfoFromForm\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                    Async\n                                loadNativenessForm\n                            \n                            \n                                    Async\n                                loadTruckInfoFromAPI\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateTruckInfoForm\n                            \n                            \n                                populateTruckNativenessForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchSmartCard\n                                \n                                \n                                    truckId\n                                \n                                \n                                    licensePlateNumber\n                                \n                                \n                                    serialNumber\n                                \n                                \n                                    smartCard\n                                \n                                \n                                    loaderType\n                                \n                                \n                                    nativeness\n                                \n                                \n                                    truckNativenessExpiredDate\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeNativeness\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeNativeness()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTruckInfoFromForm\n                        \n                    \n                \n            \n            \n                \ngetTruckInfoFromForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TruckInfo\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTruckNativenessInfoFromForm\n                        \n                    \n                \n            \n            \n                \ngetTruckNativenessInfoFromForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TruckNativenessInfo\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(response: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadNativenessForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadNativenessForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadTruckInfoFromAPI\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTruckInfoFromAPI(smartCard: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartCard\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateTruckInfoForm\n                        \n                    \n                \n            \n            \n                \npopulateTruckInfoForm(truck: TruckInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truck\n                                            \n                                                            TruckInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateTruckNativenessForm\n                        \n                    \n                \n            \n            \n                \npopulateTruckNativenessForm(info: TruckNativenessInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            TruckNativenessInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFormsInformation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    searchSmartCard: ['', ValidationSchema.smartCard],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    truckId: ['', ValidationSchema.truckId],\n    licensePlateNumber: ['', ValidationSchema.licensePlateNumber],\n    serialNumber: ['', ValidationSchema.serialNumber],\n    smartCard: ['', ValidationSchema.smartCard],\n    loaderType: ['', ValidationSchema.loaderType],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckNativenessForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    nativeness: ['', ValidationSchema.nativeness],\n    truckNativenessExpiredDate: [\n      Date.now(),\n      ValidationSchema.truckNativenessExpiredDate,\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        truckService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Driver_TruckManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchSmartCard\n                    \n                \n\n                \n                    \n                        getsearchSmartCard()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:175\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        truckId\n                    \n                \n\n                \n                    \n                        gettruckId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        licensePlateNumber\n                    \n                \n\n                \n                    \n                        getlicensePlateNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:183\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serialNumber\n                    \n                \n\n                \n                    \n                        getserialNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:187\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        smartCard\n                    \n                \n\n                \n                    \n                        getsmartCard()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:191\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaderType\n                    \n                \n\n                \n                    \n                        getloaderType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:195\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nativeness\n                    \n                \n\n                \n                    \n                        getnativeness()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:199\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        truckNativenessExpiredDate\n                    \n                \n\n                \n                    \n                        gettruckNativenessExpiredDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/truck-driver-manages-form/truck-info-form/truck-info-form.component.ts:203\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { NgPersianDatepickerModule } from 'ng-persian-datepicker';\n\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { TruckInfo } from 'app/services/driver-truck-management/model/truck-info.model';\nimport { TruckNativenessInfo } from 'app/services/driver-truck-management/model/truck-nativeness-info.model';\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\n\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SearchInputComponent } from '../../../shared/inputs/search-input/search-input.component';\n\n@Component({\n  selector: 'app-truck-info-form',\n  templateUrl: './truck-info-form.component.html',\n  styleUrl: './truck-info-form.component.scss',\n  imports: [\n    NgPersianDatepickerModule,\n    ButtonModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n    SearchInputComponent,\n  ],\n})\nexport class TruckInfoFormComponent {\n  private fb = inject(FormBuilder);\n  private truckService = inject(Driver_TruckManagementService);\n  private toast = inject(ToastService);\n  private loadingService = inject(LoadingService);\n\n  private destroy$ = new Subject();\n\n  loading = false;\n  addonWidth = '8rem';\n  searchForm: FormGroup = this.fb.group({\n    searchSmartCard: ['', ValidationSchema.smartCard],\n  });\n\n  truckInfoForm: FormGroup = this.fb.group({\n    truckId: ['', ValidationSchema.truckId],\n    licensePlateNumber: ['', ValidationSchema.licensePlateNumber],\n    serialNumber: ['', ValidationSchema.serialNumber],\n    smartCard: ['', ValidationSchema.smartCard],\n    loaderType: ['', ValidationSchema.loaderType],\n  });\n\n  truckNativenessForm: FormGroup = this.fb.group({\n    nativeness: ['', ValidationSchema.nativeness],\n    truckNativenessExpiredDate: [\n      Date.now(),\n      ValidationSchema.truckNativenessExpiredDate,\n    ],\n  });\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n  }\n\n  loadFormsInformation = async (smartCard: string) => {\n    await this.loadTruckInfoFromAPI(smartCard);\n    await this.loadNativenessForm();\n  };\n\n  async loadTruckInfoFromAPI(smartCard: string): Promise {\n    if (this.searchForm.invalid || this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.truckService.GetTruckInfoFromAPI(smartCard);\n      if (this.isSuccessful(response)) {\n        this.populateTruckInfoForm(response.data!);\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  async loadNativenessForm(): Promise {\n    if (this.truckId.invalid || this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.truckService.GetTruckNativeness(\n        this.truckId.value\n      );\n      if (!this.isSuccessful(response)) return;\n\n      this.populateTruckNativenessForm(response.data!);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private isSuccessful(response: ApiResponse): boolean {\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  async changeNativeness(): Promise {\n    if (this.truckNativenessForm.invalid || this.loading) return;\n\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.truckService.ChangeTruckNativeness(\n        this.truckId.value,\n        this.truckNativenessExpiredDate.value\n      );\n\n      if (this.isSuccessful(response)) {\n        this.populateTruckNativenessForm(response.data!);\n      }\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  populateTruckInfoForm(truck: TruckInfo): void {\n    this.truckInfoForm.patchValue({\n      truckId: truck.TruckId ?? '',\n      licensePlateNumber: truck.Pelak ?? '',\n      serialNumber: truck.Serial ?? '',\n      smartCard: truck.SmartCardNo ?? '',\n      loaderType: truck.LoaderTypeId ?? '',\n    });\n  }\n\n  populateTruckNativenessForm(info: TruckNativenessInfo): void {\n    this.truckNativenessForm.patchValue({\n      nativeness: info.TruckNativenessTypeTitle ?? '',\n      truckNativenessExpiredDate: info.TruckNativenessExpireDate ?? '',\n    });\n  }\n\n  getTruckInfoFromForm(): TruckInfo {\n    return {\n      TruckId: this.truckId.value ?? null,\n      Pelak: this.licensePlateNumber.value ?? null,\n      Serial: this.serialNumber.value ?? null,\n      SmartCardNo: this.smartCard.value ?? null,\n      LoaderTypeId: this.loaderType.value ?? null,\n    };\n  }\n\n  getTruckNativenessInfoFromForm(): TruckNativenessInfo {\n    return {\n      TruckNativenessTypeTitle: this.nativeness.value ?? null,\n      TruckNativenessExpireDate: this.truckNativenessExpiredDate.value ?? null,\n    };\n  }\n\n  // Form Control Getters\n  get searchSmartCard(): FormControl {\n    return this.searchForm.get('searchSmartCard') as FormControl;\n  }\n\n  get truckId(): FormControl {\n    return this.truckInfoForm.get('truckId') as FormControl;\n  }\n\n  get licensePlateNumber(): FormControl {\n    return this.truckInfoForm.get('licensePlateNumber') as FormControl;\n  }\n\n  get serialNumber(): FormControl {\n    return this.truckInfoForm.get('serialNumber') as FormControl;\n  }\n\n  get smartCard(): FormControl {\n    return this.truckInfoForm.get('smartCard') as FormControl;\n  }\n\n  get loaderType(): FormControl {\n    return this.truckInfoForm.get('loaderType') as FormControl;\n  }\n\n  get nativeness(): FormControl {\n    return this.truckNativenessForm.get('nativeness') as FormControl;\n  }\n\n  get truckNativenessExpiredDate(): FormControl {\n    return this.truckNativenessForm.get(\n      'truckNativenessExpiredDate'\n    ) as FormControl;\n  }\n}\n\n    \n\n    \n        \n \n  \n    \n      \n    \n  \n\n  \n  \n    اطلاعات ناوگان\n    \n      \n        \n          \n        \n\n        \n          \n        \n\n        \n          \n        \n\n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n  \n    بومی گری\n    \n      \n        \n          \n        \n\n        \n          \n        \n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                           اطلاعات ناوگان                                                                                                                                                              بومی گری                                                                                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TruckInfoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TruckNativenessInfo.html":{"url":"interfaces/TruckNativenessInfo.html","title":"interface - TruckNativenessInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TruckNativenessInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/driver-truck-management/model/truck-nativeness-info.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            TruckNativenessExpireDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TruckNativenessTypeId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TruckNativenessTypeTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        TruckNativenessExpireDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckNativenessExpireDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckNativenessTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckNativenessTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckNativenessTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckNativenessTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TruckNativenessInfo {\n  TruckNativenessTypeId?: number;\n  TruckNativenessTypeTitle?: string;\n  TruckNativenessExpireDate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Turn.html":{"url":"interfaces/Turn.html","title":"interface - Turn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Turn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/turn-management/model/turn.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            BillOfLadingNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DateOfLastChanged\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            OtaghdarTurnNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SequentialTurnTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SoftwareUserName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TruckDriver\n                                        \n                                \n                                \n                                        \n                                            TurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TurnIssueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TurnIssueTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TurnStatusDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TurnStatusTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BillOfLadingNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BillOfLadingNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DateOfLastChanged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DateOfLastChanged:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        OtaghdarTurnNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        OtaghdarTurnNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SequentialTurnTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SequentialTurnTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SoftwareUserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SoftwareUserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TruckDriver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TruckDriver:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnIssueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnIssueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnIssueTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnIssueTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnStatusDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnStatusDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnStatusTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnStatusTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Turn {\n  TurnId: number;\n  TurnIssueDate?: string;\n  TurnIssueTime?: string;\n  TruckDriver?: string;\n  SoftwareUserName?: string;\n  BillOfLadingNumber?: string;\n  OtaghdarTurnNumber?: string;\n  TurnStatusTitle?: string;\n  TurnStatusDescription?: string;\n  DateOfLastChanged?: string;\n  SequentialTurnTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TurnAccounting.html":{"url":"interfaces/TurnAccounting.html","title":"interface - TurnAccounting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TurnAccounting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/turn-management/model/turn-accounting.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            AccountingTypeTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DateShamsi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            SequentialTurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Time\n                                        \n                                \n                                \n                                        \n                                            TurnId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AccountingTypeTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AccountingTypeTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DateShamsi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DateShamsi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SequentialTurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SequentialTurnId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TurnId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TurnId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TurnAccounting {\n  TurnId: number;\n  SequentialTurnId?: string;\n  DateShamsi?: string;\n  Time?: string;\n  AccountingTypeTitle?: string;\n  UserName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TurnManagementService.html":{"url":"injectables/TurnManagementService.html","title":"injectable - TurnManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TurnManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/turn-management/turn-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                CancelTurn\n                            \n                            \n                                    Public\n                                    Async\n                                EmergencyTurnRegister\n                            \n                            \n                                    Public\n                                    Async\n                                GetLatestTurns\n                            \n                            \n                                    Public\n                                    Async\n                                GetLatestTurnsForSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                GetTurnAccounting\n                            \n                            \n                                    Public\n                                    Async\n                                RealTimeTurnRegister\n                            \n                            \n                                    Public\n                                    Async\n                                ReserveTurnRegister\n                            \n                            \n                                    Public\n                                    Async\n                                ResuscitateReserveTurn\n                            \n                            \n                                    Public\n                                    Async\n                                ResuscitateTurn\n                            \n                            \n                                    Private\n                                TrimTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        CancelTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    CancelTurn(turnId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                turnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EmergencyTurnRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    EmergencyTurnRegister(truckId: number, sequentialTurnId: number, description: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLatestTurns\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLatestTurns(truckId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetLatestTurnsForSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetLatestTurnsForSoftwareUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTurnAccounting\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTurnAccounting(turnId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                turnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RealTimeTurnRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    RealTimeTurnRegister(truckId: number, sequentialTurnId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ReserveTurnRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    ReserveTurnRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:290\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ResuscitateReserveTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResuscitateReserveTurn(truckId: number, sequentialTurnId: number, date: string, time: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sequentialTurnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                time\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ResuscitateTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResuscitateTurn(turnId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                turnId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        TrimTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    TrimTurn(turn: Turn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/turn-management/turn-management.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                turn\n                                            \n                                                            Turn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Turn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/turn-management/turn-management.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/turn-management/turn-management.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { Driver_TruckManagementService } from '../driver-truck-management/driver-truck-management.service';\nimport { API_ROUTES } from 'app/constants/api';\nimport { TruckInfo } from 'app/services/driver-truck-management/model/truck-info.model';\nimport { mockTurns } from './mock/turn.mock';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { TurnAccounting } from './model/turn-accounting.model';\nimport { mockTurnAccounting } from './mock/turn-accounting.mock';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { SequentialTurn } from '../sequential-turn-management/model/sequential-turn.model';\nimport { Turn } from './model/turn.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TurnManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  //#region Turn main methods\n\n  public async GetLatestTurns(truckId: number): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Turns.GetLatestTurns;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTurns);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => this.TrimTurn(data)),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetLatestTurnsForSoftwareUser(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Turns.GetLatestTurnsForSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTurns[0]);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      // data: (response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private TrimTurn(turn: Turn): Turn {\n    return {\n      TurnId: turn.TurnId,\n      TurnIssueDate: turn.TurnIssueDate?.trim(),\n      TurnIssueTime: turn.TurnIssueTime?.trim(),\n      TruckDriver: turn.TruckDriver?.trim(),\n      SoftwareUserName: turn.SoftwareUserName?.trim(),\n      BillOfLadingNumber: turn.BillOfLadingNumber?.trim(),\n      OtaghdarTurnNumber: turn.OtaghdarTurnNumber?.trim(),\n      TurnStatusTitle: turn.TurnStatusTitle?.trim(),\n      TurnStatusDescription: turn.TurnStatusDescription?.trim(),\n      DateOfLastChanged: turn.DateOfLastChanged?.trim(),\n      SequentialTurnTitle: turn.SequentialTurnTitle?.trim(),\n    };\n  }\n\n  public async GetTurnAccounting(\n    turnId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Turns.GetAccounting;\n    const turnInfo: Turn = {\n      TurnId: turnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TurnId: turnInfo.TurnId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockTurnAccounting);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        TurnId: data.TurnId,\n        SequentialTurnId: data.SequentialTurnId?.trim(),\n        DateShamsi: data.DateShamsi?.trim(),\n        Time: data.Time?.trim(),\n        AccountingTypeTitle: data.Time?.trim(),\n        UserName: data.UserName?.trim(),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async ResuscitateTurn(\n    turnId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Turns.ResuscitateTurn;\n    const turnInfo: Turn = {\n      TurnId: turnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TurnId: turnInfo.TurnId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async CancelTurn(turnId: number): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.TransportationAPI.Turns.CancelTurn;\n    const turnInfo: Turn = {\n      TurnId: turnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TurnId: turnInfo.TurnId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Turn Registering method\n\n  public async RealTimeTurnRegister(\n    truckId: number,\n    sequentialTurnId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Turns.TurnRegisterRequests\n        .RealTimeTurnRegister;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const sequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: sequentialTurnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n      SequentialTurnId: sequentialTurnInfo.SeqTurnId,\n    };\n    //#endregion\n\n    //#region Request\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EmergencyTurnRegister(\n    truckId: number,\n    sequentialTurnId: number,\n    description: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Turns.TurnRegisterRequests\n        .EmergencyTurnRegister;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const sequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: sequentialTurnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n      SequentialTurnId: sequentialTurnInfo.SeqTurnId,\n      Description: description,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n\n  //#region Reserve Turn\n\n  public async ResuscitateReserveTurn(\n    truckId: number,\n    sequentialTurnId: number,\n    date: string,\n    time: string\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Turns.ReserveTurnRequests\n        .ResuscitateReserveTurn;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const sequentialTurnInfo: SequentialTurn = {\n      SeqTurnId: sequentialTurnId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n      SequentialTurnId: sequentialTurnInfo.SeqTurnId,\n      ShamsiDate: date,\n      Time: time,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ReserveTurnRegister(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.TransportationAPI.Turns.ReserveTurnRequests\n        .RegisterReserveTurn;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  //#endregion\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TurnsListFormComponent.html":{"url":"components/TurnsListFormComponent.html","title":"component - TurnsListFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TurnsListFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-turns-list-form\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                                TextInputComponent\n                                SearchInputComponent\n                            TableModule\n                            Dialog\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./turns-list-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./turns-list-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountingCols\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                dialogTurnAccounting\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                headerTitle\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchTruckInformation\n                            \n                            \n                                searchTrukForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                truckManagerService\n                            \n                            \n                                truckTurnsList\n                            \n                            \n                                    Private\n                                turnManagerService\n                            \n                            \n                                turnsAccounting\n                            \n                            \n                                turnsCols\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activeTurn\n                            \n                            \n                                confirmActivation\n                            \n                            \n                                confirmDeactivation\n                            \n                            \n                                    Async\n                                deActiveTurn\n                            \n                            \n                                    Private\n                                    Async\n                                loadTurnsList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseDialog\n                            \n                            \n                                    Async\n                                openTurnAccounting\n                            \n                            \n                                    Private\n                                populateSearchForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    smartCode\n                                \n                                \n                                    truckId\n                                \n                                \n                                    licensePlate\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activeTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    activeTurn(row: Turn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            Turn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmActivation\n                        \n                    \n                \n            \n            \n                \nconfirmActivation(rowData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rowData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmDeactivation\n                        \n                    \n                \n            \n            \n                \nconfirmDeactivation(rowData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rowData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deActiveTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    deActiveTurn(row: Turn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            Turn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadTurnsList\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTurnsList(smartCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseDialog\n                        \n                    \n                \n            \n            \n                \nonCloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openTurnAccounting\n                        \n                    \n                \n            \n            \n                \n                        \n                    openTurnAccounting(row: Turn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            Turn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateSearchForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateSearchForm(truckId: number, licensePlateNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                licensePlateNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountingCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'شماره نوبت',\n    'شماره صفوف نوبت دهی',\n    'تاریخ',\n    'زمان',\n    'تراکنش',\n    'کاربر',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogTurnAccounting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTruckInformation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTrukForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    smart: ['', ValidationSchema.smartCard],\n    truckId: ['', ValidationSchema.truckId],\n    licensePlate: ['', ValidationSchema.licensePlateNumber],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        truckManagerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Driver_TruckManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckTurnsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Turn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        turnManagerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turnsAccounting\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TurnAccounting[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turnsCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'شماره نوبت',\n    'تسلسل نوبت',\n    'تاریخ صدور',\n    'زمان صدور',\n    'راننده',\n    'وضعیت نوبت',\n    'شرح',\n    'آخرین تغییرات',\n    'صف نوبت',\n    'کاربر',\n    'ابطال نوبت',\n    'احیا نوبت',\n    'لیست تراکنش ها',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        smartCode\n                    \n                \n\n                \n                    \n                        getsmartCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:208\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        truckId\n                    \n                \n\n                \n                    \n                        gettruckId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        licensePlate\n                    \n                \n\n                \n                    \n                        getlicensePlate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-list-form/turns-list-form.component.ts:216\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { SearchInputComponent } from 'app/components/shared/inputs/search-input/search-input.component';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ButtonModule } from 'primeng/button';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TableModule } from 'primeng/table';\nimport { TurnAccounting } from 'app/services/turn-management/model/turn-accounting.model';\nimport { Dialog } from 'primeng/dialog';\nimport { Turn } from 'app/services/turn-management/model/turn.model';\nimport { TurnManagementService } from 'app/services/turn-management/turn-management.service';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'app-turns-list-form',\n  imports: [\n    ButtonModule,\n    TextInputComponent,\n    SearchInputComponent,\n    TableModule,\n    Dialog,\n    ConfirmDialogModule,\n  ],\n  providers: [ConfirmationService],\n  templateUrl: './turns-list-form.component.html',\n  styleUrl: './turns-list-form.component.scss',\n})\nexport class TurnsListFormComponent {\n  private fb = inject(FormBuilder);\n  private toast = inject(ToastService);\n  private truckManagerService = inject(Driver_TruckManagementService);\n  private loadingService = inject(LoadingService);\n  private destroy$ = new Subject();\n  private turnManagerService = inject(TurnManagementService);\n  private confirmationService = inject(ConfirmationService);\n\n  turnsCols = [\n    'شماره نوبت',\n    'تسلسل نوبت',\n    'تاریخ صدور',\n    'زمان صدور',\n    'راننده',\n    'وضعیت نوبت',\n    'شرح',\n    'آخرین تغییرات',\n    'صف نوبت',\n    'کاربر',\n    'ابطال نوبت',\n    'احیا نوبت',\n    'لیست تراکنش ها',\n  ];\n\n  accountingCols = [\n    'شماره نوبت',\n    'شماره صفوف نوبت دهی',\n    'تاریخ',\n    'زمان',\n    'تراکنش',\n    'کاربر',\n  ];\n\n  loading = false;\n  truckTurnsList: Turn[] = [];\n  searchTrukForm = this.fb.group({\n    smart: ['', ValidationSchema.smartCard],\n    truckId: ['', ValidationSchema.truckId],\n    licensePlate: ['', ValidationSchema.licensePlateNumber],\n  });\n  dialogTurnAccounting: boolean = false;\n  turnsAccounting: TurnAccounting[] = [];\n  headerTitle: any;\n\n  // Lifecycle: on component init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((val) => (this.loading = val));\n  }\n\n  // Lifecycle: clean up on destroy\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  searchTruckInformation = async (query: string) => {\n    if (this.loading) return;\n    await this.loadTurnsList(query);\n  };\n\n  private async loadTurnsList(smartCode: string) {\n    if (this.smartCode.invalid) return;\n    try {\n      this.loadingService.setLoading(true);\n      const resTruckInfo = await this.truckManagerService.GetTruckInfoFromAPI(\n        smartCode\n      );\n      if (!checkAndToastError(resTruckInfo, this.toast)) {\n        this.truckTurnsList = [];\n        return;\n      }\n      this.populateSearchForm(\n        resTruckInfo.data.TruckId,\n        resTruckInfo.data.Pelak ?? ''\n      );\n\n      const resTurnsInfo = await this.turnManagerService.GetLatestTurns(\n        resTruckInfo.data.TruckId\n      );\n      if (!checkAndToastError(resTurnsInfo, this.toast)) return;\n      this.truckTurnsList = resTurnsInfo.data;\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  async activeTurn(row: Turn) {\n    try {\n      this.loadingService.setLoading(true);\n\n      const response = await this.turnManagerService.ResuscitateTurn(\n        row.TurnId\n      );\n      if (!checkAndToastError(response, this.toast)) return;\n      await this.loadTurnsList(this.smartCode.value);\n      this.toast.success('موفق', response.data.Message);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  async deActiveTurn(row: Turn) {\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.turnManagerService.CancelTurn(row.TurnId);\n      if (!checkAndToastError(response, this.toast)) return;\n      await this.loadTurnsList(this.smartCode.value);\n      this.toast.success('موفق', response.data.Message);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  async openTurnAccounting(row: Turn) {\n    try {\n      this.loadingService.setLoading(true);\n      const response = await this.turnManagerService.GetTurnAccounting(\n        row.TurnId\n      );\n      if (!checkAndToastError(response, this.toast)) return;\n      this.turnsAccounting = response.data;\n      this.headerTitle = `لیست تراکنش های شماره نوبت ${row.TurnId}`;\n      this.dialogTurnAccounting = true;\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  onCloseDialog() {\n    this.turnsAccounting = [];\n  }\n\n  confirmActivation(rowData: any) {\n    this.confirmationService.confirm({\n      message: `آیا از احیا نوبت مطمئن هستید؟`,\n      accept: () => {\n        this.activeTurn(rowData); // your actual logic\n      },\n      rejectButtonProps: {\n        severity: 'secondary',\n        outlined: false,\n      },\n      acceptButtonProps: {\n        severity: 'info',\n        outlined: false,\n      },\n    });\n  }\n\n  confirmDeactivation(rowData: any) {\n    this.confirmationService.confirm({\n      message: `آیا از ابطال نوبت مطمئن هستید؟`,\n      accept: () => {\n        this.deActiveTurn(rowData); // your actual logic\n      },\n      rejectButtonProps: {\n        severity: 'secondary',\n        outlined: false,\n      },\n      acceptButtonProps: {\n        severity: 'danger',\n        outlined: false,\n      },\n    });\n  }\n\n  private populateSearchForm(truckId: number, licensePlateNumber: string) {\n    this.truckId.setValue(truckId);\n    this.licensePlate.setValue(licensePlateNumber);\n  }\n\n  get smartCode(): FormControl {\n    return this.searchTrukForm.get('smart') as FormControl;\n  }\n\n  get truckId(): FormControl {\n    return this.searchTrukForm.get('truckId') as FormControl;\n  }\n\n  get licensePlate(): FormControl {\n    return this.searchTrukForm.get('licensePlate') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n\n\n  \n    \n      @for (col of columns; track $index) {\n      {{ col }}\n      }\n    \n  \n\n  \n    \n      {{ rowData.TurnId }}\n      {{ rowData.OtaghdarTurnNumber || \"-\" }}\n      {{ rowData.TurnIssueDate || \"-\" }}\n      {{ rowData.TurnIssueTime || \"-\" }}\n      {{ rowData.TruckDriver || \"-\" }}\n      {{ rowData.TurnStatusTitle || \"-\" }}\n      {{ rowData.TurnStatusDescription || \"-\" }}\n      {{ rowData.DateOfLastChanged || \"-\" }}\n      {{ rowData.SequentialTurnTitle || \"-\" }}\n      {{ rowData.SoftwareUserName || \"-\" }}\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        @for (col of columns; track $index) {\n        {{ col }}\n        }\n      \n    \n\n    \n      \n        {{ rowData.TurnId || \"-\" }}\n        {{ rowData.SequentialTurnId || \"-\" }}\n        {{ rowData.DateShamsi || \"-\" }}\n        {{ rowData.Time || \"-\" }}\n        {{ rowData.AccountingTypeTitle || \"-\" }}\n        {{ rowData.UserName || \"-\" }}\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  @for (col of columns; track $index) {      {{ col }}      }                  {{ rowData.TurnId }}      {{ rowData.OtaghdarTurnNumber || \"-\" }}      {{ rowData.TurnIssueDate || \"-\" }}      {{ rowData.TurnIssueTime || \"-\" }}      {{ rowData.TruckDriver || \"-\" }}      {{ rowData.TurnStatusTitle || \"-\" }}      {{ rowData.TurnStatusDescription || \"-\" }}      {{ rowData.DateOfLastChanged || \"-\" }}      {{ rowData.SequentialTurnTitle || \"-\" }}      {{ rowData.SoftwareUserName || \"-\" }}                                                                                      @for (col of columns; track $index) {        {{ col }}        }                            {{ rowData.TurnId || \"-\" }}        {{ rowData.SequentialTurnId || \"-\" }}        {{ rowData.DateShamsi || \"-\" }}        {{ rowData.Time || \"-\" }}        {{ rowData.AccountingTypeTitle || \"-\" }}        {{ rowData.UserName || \"-\" }}            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TurnsListFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TurnsTruckInfoBaseFormComponent.html":{"url":"components/TurnsTruckInfoBaseFormComponent.html","title":"component - TurnsTruckInfoBaseFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TurnsTruckInfoBaseFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-turns-truck-info-base-form\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                SearchInputComponent\n                                TextInputComponent\n                                SearchAutoCompleteComponent\n                            Card\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./turns-truck-info-base-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./turns-truck-info-base-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addonWidth\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchSequentialTurnWithLoaderType\n                            \n                            \n                                searchTruckDriverInfo\n                            \n                            \n                                searchTruckInfoForm\n                            \n                            \n                                    Private\n                                sequentialTurnService\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                    Private\n                                truckDriverMangerService\n                            \n                            \n                                truckInfoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAutoCompleteChange\n                            \n                            \n                                    Async\n                                onSelectSequentialTurn\n                            \n                            \n                                    Private\n                                populateTruckForm\n                            \n                            \n                                resetTurnsBaseForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sequentialTurnId\n                            \n                            \n                                sequentialTurnTitle\n                            \n                            \n                                truckId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    smart\n                                \n                                \n                                    loaderTypeId\n                                \n                                \n                                    licensePlate\n                                \n                                \n                                    driverId\n                                \n                                \n                                    driverName\n                                \n                                \n                                    driverNationalId\n                                \n                                \n                                    turnId\n                                \n                                \n                                    otaghdarTurnNumber\n                                \n                                \n                                    sequentialTurn\n                                \n                                \n                                    turnStats\n                                \n                                \n                                    turnDescription\n                                \n                                \n                                    walletCode\n                                \n                                \n                                    walletBalance\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sequentialTurnId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('', Validators.min(0))\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sequentialTurnTitle\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        truckId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl('', Validators.min(0))\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAutoCompleteChange\n                        \n                    \n                \n            \n            \n                \nonAutoCompleteChange(controller: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controller\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSelectSequentialTurn\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSelectSequentialTurn(sequentialTurn: SequentialTurn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sequentialTurn\n                                            \n                                                            SequentialTurn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateTruckForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateTruckForm(truck: TruckInfo, driver?: TruckDriverInfo, turn?: Turn, wallet?: Wallet)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truck\n                                            \n                                                            TruckInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                driver\n                                            \n                                                            TruckDriverInfo\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                turn\n                                            \n                                                            Turn\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                wallet\n                                            \n                                                            Wallet\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTurnsBaseForm\n                        \n                    \n                \n            \n            \n                \nresetTurnsBaseForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addonWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '10rem'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSequentialTurnWithLoaderType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTruckDriverInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTruckInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    smart: ['', ValidationSchema.smartCard],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sequentialTurnService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SequentialTurnManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        truckDriverMangerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Driver_TruckManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        truckInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:74\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        smart\n                    \n                \n\n                \n                    \n                        getsmart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:197\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaderTypeId\n                    \n                \n\n                \n                    \n                        getloaderTypeId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        licensePlate\n                    \n                \n\n                \n                    \n                        getlicensePlate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:205\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        driverId\n                    \n                \n\n                \n                    \n                        getdriverId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:209\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        driverName\n                    \n                \n\n                \n                    \n                        getdriverName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:213\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        driverNationalId\n                    \n                \n\n                \n                    \n                        getdriverNationalId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:217\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        turnId\n                    \n                \n\n                \n                    \n                        getturnId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:221\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        otaghdarTurnNumber\n                    \n                \n\n                \n                    \n                        getotaghdarTurnNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:225\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sequentialTurn\n                    \n                \n\n                \n                    \n                        getsequentialTurn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        turnStats\n                    \n                \n\n                \n                    \n                        getturnStats()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:233\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        turnDescription\n                    \n                \n\n                \n                    \n                        getturnDescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:237\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        walletCode\n                    \n                \n\n                \n                    \n                        getwalletCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:241\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        walletBalance\n                    \n                \n\n                \n                    \n                        getwalletBalance()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/turns-management-form/turns-truck-info-base-form/turns-truck-info-base-form.component.ts:245\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, Input } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\n\n// 🔧 Constants & Models\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport { TruckDriverInfo } from 'app/services/driver-truck-management/model/truck-driver-info.model';\nimport { TruckInfo } from 'app/services/driver-truck-management/model/truck-info.model';\nimport { Turn } from 'app/services/turn-management/model/turn.model';\nimport { SequentialTurn } from 'app/services/sequential-turn-management/model/sequential-turn.model';\nimport { Wallet } from 'app/services/wallet-management/model/wallet.model';\n\n// 🧩 Services\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { SequentialTurnManagementService } from 'app/services/sequential-turn-management/sequential-turn-management.service';\n\n// 🧰 Utilities\nimport { checkAndToastError } from 'app/utils/api-utils';\n\n// 🧱 Shared Components\nimport { SearchInputComponent } from 'app/components/shared/inputs/search-input/search-input.component';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { SearchAutoCompleteComponent } from 'app/components/shared/inputs/search-auto-complete/search-auto-complete.component';\nimport { Card } from 'primeng/card';\n``;\n@Component({\n  selector: 'app-turns-truck-info-base-form',\n  imports: [\n    ReactiveFormsModule,\n    SearchInputComponent,\n    TextInputComponent,\n    SearchAutoCompleteComponent,\n    Card,\n  ],\n  templateUrl: './turns-truck-info-base-form.component.html',\n  styleUrl: './turns-truck-info-base-form.component.scss',\n})\nexport class TurnsTruckInfoBaseFormComponent {\n  // 📦 Dependency Injection\n  private fb = inject(FormBuilder);\n  private truckDriverMangerService = inject(Driver_TruckManagementService);\n  private loadingService = inject(LoadingService);\n  private toast = inject(ToastService);\n  private sequentialTurnService = inject(SequentialTurnManagementService);\n\n  // 📡 Destroy stream for unsubscribing\n  private destroy$ = new Subject();\n\n  // 📥 Inputs\n  @Input() sequentialTurnId = new FormControl('', Validators.min(0));\n  @Input() sequentialTurnTitle = new FormControl('');\n  @Input() truckId = new FormControl('', Validators.min(0));\n\n  // 🔄 Loading state\n  loading = false;\n\n  // 🧩 UI config\n  addonWidth = '10rem';\n\n  // 📋 Search form for smart card input\n  searchTruckInfoForm = this.fb.group({\n    smart: ['', ValidationSchema.smartCard],\n  });\n\n  // 📋 Main form for truck, driver, and turn info\n  truckInfoForm!: FormGroup;\n\n  // ♻️ Cleanup subscription\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // 🚦 Listen to loading state on init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.loading = value));\n\n    this.truckInfoForm = this.fb.group({\n      truckId: this.truckId,\n      loaderTypeId: ['', Validators.min(0)],\n      licensePlate: ['', ValidationSchema.licensePlateNumber],\n      driverId: [''],\n      driverNationalId: [''],\n      turnId: [''],\n      otaghdarTurnNumber: [''],\n      sequentialTurn: [''],\n      turnStats: [''],\n      driverName: [''],\n      turnDescription: [''],\n      walletCode: [''],\n      walletBalance: [0],\n    });\n  }\n\n  // 🔍 Search truck and driver info based on smart code\n  searchTruckDriverInfo = async (smartCode: string) => {\n    if (this.loading) return;\n    try {\n      this.loadingService.setLoading(true);\n\n      const resTruckInfo =\n        await this.truckDriverMangerService.GetTruckInfoFromAPI(smartCode);\n      if (!checkAndToastError(resTruckInfo, this.toast)) return;\n\n      const resComposed =\n        await this.truckDriverMangerService.GetComposedTruckInfoWithLastTurn(\n          resTruckInfo.data.TruckId\n        );\n      if (!checkAndToastError(resComposed, this.toast))\n        return this.resetTurnsBaseForm();\n\n      const { Truck, TruckDriver, Turn, MoneyWallet } = resComposed.data;\n      this.populateTruckForm(Truck, TruckDriver, Turn, MoneyWallet);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  };\n\n  // 🧩 Populate form values with retrieved data\n  private populateTruckForm(\n    truck: TruckInfo,\n    driver?: TruckDriverInfo,\n    turn?: Turn,\n    wallet?: Wallet\n  ) {\n    this.truckInfoForm.patchValue({\n      truckId: truck.TruckId,\n      loaderTypeId: truck.LoaderTypeId,\n      licensePlate: truck.Pelak,\n      driverId: driver?.DriverId ?? '',\n      driverNationalId: driver?.NationalCode ?? '',\n      driverName: driver?.NameFamily ?? '',\n      turnId: turn?.TurnId ?? '',\n      sequentialTurn: turn?.SequentialTurnTitle ?? '',\n      otaghdarTurnNumber: turn?.OtaghdarTurnNumber ?? '',\n      turnStats: turn?.TurnStatusTitle ?? '',\n      turnDescription: turn?.TurnStatusDescription ?? '',\n      walletCode: wallet?.MoneyWalletCode ?? '',\n      walletBalance: wallet?.Balance ?? 0,\n    });\n  }\n\n  // 🔍 Autocomplete for sequential turns\n  searchSequentialTurnWithLoaderType = async (_: string) => {\n    if (this.searchTruckInfoForm.invalid) return [];\n\n    const res =\n      await this.sequentialTurnService.GetSequentialTurnWithLoaderType(\n        this.loaderTypeId.value\n      );\n    if (!checkAndToastError(res, this.toast)) return [];\n    return res.data!;\n  };\n\n  // ❌ Reset control value when input is cleared\n  onAutoCompleteChange(controller: FormControl) {\n    controller.setValue('');\n  }\n\n  // ✅ On sequential turn selection\n  async onSelectSequentialTurn(sequentialTurn: SequentialTurn) {\n    this.sequentialTurnId.setValue(String(sequentialTurn.SeqTurnId));\n  }\n\n  // 🔄 Reset form to default state\n  resetTurnsBaseForm() {\n    this.truckInfoForm.reset({\n      truckId: '',\n      loaderTypeId: '',\n      licensePlate: '',\n      driverId: '',\n      driverNationalId: '',\n      turnId: '',\n      sequentialTurn: '',\n      driverName: '',\n      otaghdarTurnNumber: '',\n      turnStats: '',\n      turnDescription: '',\n      walletCode: '',\n      walletBalance: 0,\n    });\n    this.sequentialTurnTitle.reset('');\n    this.sequentialTurnId.reset('');\n  }\n\n  // 📥 Getters for searchTruckInfoForm\n  get smart(): FormControl {\n    return this.searchTruckInfoForm.get('smart') as FormControl;\n  }\n\n  get loaderTypeId(): FormControl {\n    return this.truckInfoForm.get('loaderTypeId') as FormControl;\n  }\n\n  get licensePlate(): FormControl {\n    return this.truckInfoForm.get('licensePlate') as FormControl;\n  }\n\n  get driverId(): FormControl {\n    return this.truckInfoForm.get('driverId') as FormControl;\n  }\n\n  get driverName(): FormControl {\n    return this.truckInfoForm.get('driverName') as FormControl;\n  }\n\n  get driverNationalId(): FormControl {\n    return this.truckInfoForm.get('driverNationalId') as FormControl;\n  }\n\n  get turnId(): FormControl {\n    return this.truckInfoForm.get('turnId') as FormControl;\n  }\n\n  get otaghdarTurnNumber(): FormControl {\n    return this.truckInfoForm.get('otaghdarTurnNumber') as FormControl;\n  }\n\n  get sequentialTurn(): FormControl {\n    return this.truckInfoForm.get('sequentialTurn') as FormControl;\n  }\n\n  get turnStats(): FormControl {\n    return this.truckInfoForm.get('turnStats') as FormControl;\n  }\n\n  get turnDescription(): FormControl {\n    return this.truckInfoForm.get('turnDescription') as FormControl;\n  }\n\n  get walletCode(): FormControl {\n    return this.truckInfoForm.get('walletCode') as FormControl;\n  }\n\n  get walletBalance(): FormControl {\n    return this.truckInfoForm.get('walletBalance') as FormControl;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n\n\n  \n    \n    \n      ناوگان\n      \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n      راننده\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n      آخرین صف نوبت\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n      کیف پول\n\n      \n        \n      \n\n      \n        \n      \n    \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ناوگان                                                          راننده                                                                              آخرین صف نوبت                                                                                                  کیف پول                                                  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TurnsTruckInfoBaseFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAuthService.html":{"url":"injectables/UserAuthService.html","title":"injectable - UserAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-auth-service/user-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                    Readonly\n                                apiUrl\n                            \n                            \n                                    Private\n                                cookieService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                sessionKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSessionId\n                            \n                            \n                                    Public\n                                    Async\n                                GetUserOfSession\n                            \n                            \n                                    Public\n                                    Async\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    Public\n                                    Async\n                                setSessionId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSessionId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetUserOfSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetUserOfSession(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginFormData: LoginFormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginFormData\n                                            \n                                                            LoginFormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        setSessionId\n                        \n                    \n                \n            \n            \n                \n                        \n                    setSessionId(sessionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth-service/user-auth.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-auth-service/user-auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : API_ROUTES.SoftwareUserAPI.AuthUser\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-auth-service/user-auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cookieService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CookieService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-auth-service/user-auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-auth-service/user-auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sessionKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sessionId'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-auth-service/user-auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { LoginFormData } from 'app/data/model/login-form-data.model';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { UserSession } from 'app/data/model/user-session.model';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'environments/environment';\nimport { mockUserSession } from 'app/data/mock/user-session.mock';\nimport { SoftwareUserInfo } from 'app/data/model/software-user-info.model';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { mockSoftwareUserInfo } from 'app/data/mock/software-user-info.mock';\nimport { Router } from '@angular/router';\nimport { APP_ROUTES } from 'app/constants/routes';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAuthService {\n  private readonly apiUrl = API_ROUTES.SoftwareUserAPI.AuthUser;\n  private readonly sessionKey = 'sessionId';\n\n  private cookieService = inject(CookieService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n  private router = inject(Router);\n\n  public async login(\n    loginFormData: LoginFormData\n  ): Promise> {\n    //#region Mock Handling\n    if (!environment.production && environment.disableApi) {\n      await this.setSessionId(mockUserSession.sessionId);\n      return {\n        success: true,\n        data: mockUserSession,\n      };\n    }\n    //#endregion\n\n    const { sessionId, username, password, captcha } = loginFormData;\n    const bodyValue = {\n      SessionId: sessionId,\n      UserShenaseh: username,\n      Userpassword: password,\n      Captcha: captcha,\n    };\n\n    const result = await this.apiCommunicator.CommunicateWithAPI_Post(this.apiUrl, bodyValue);\n\n    await this.setSessionId(result.data?.SessionId!);\n\n    return {\n      success: result.success,\n      data: {\n        sessionId: result.data?.SessionId!,\n      },\n      error: result.error,\n    };\n  }\n\n  public async logout(): Promise {\n    this.cookieService.delete(this.sessionKey);\n    // سمت سرور اضافه شود در صورت نیاز\n  }\n\n  public async isLoggedIn(): Promise> {\n    const sessionId = this.getSessionId();\n\n    const apiUrl = API_ROUTES.SoftwareUserAPI.SessionChecker;\n    if (sessionId == null) {\n      this.router.navigate([APP_ROUTES.AUTH.LOGIN]);\n      await this.logout();\n      return new Promise(function (resolve, _) {\n        resolve({ success: false });\n      });\n    }\n\n    //#region Mock Handling\n    if (!environment.production && environment.disableApi) {\n      return { success: true, data: { ISSessionLive: true } };\n    }\n    //#endregion\n\n    const bodyValue = { sessionId: this.getSessionId() };\n\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue);\n    return response;\n  }\n\n  public getSessionId(): string | null {\n    return this.cookieService.get(this.sessionKey) || null;\n  }\n\n  public async setSessionId(sessionId: string): Promise {\n    if (await this.isLoggedIn()) {\n      await this.logout();\n    }\n\n    this.cookieService.set(this.sessionKey, sessionId, {\n      path: '/',\n      secure: environment.production,\n      sameSite: environment.production ? 'None' : 'Lax',\n      // expires: new Date(Date.now() + 1000 * 60 * 30), // 30 minutes\n    });\n  }\n\n  public async GetUserOfSession(\n    sessionId: string\n  ): Promise> {\n    const apiUrl = API_ROUTES.SoftwareUserAPI.GetUserOfSession;\n    const bodyValue = {\n      SessionId: sessionId,\n    };\n\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSoftwareUserInfo);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoFormComponent.html":{"url":"components/UserInfoFormComponent.html","title":"component - UserInfoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserInfoFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DialogService\n                \n            \n\n\n            \n                selector\n                app-user-info-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            ButtonModule\n                            DialogModule\n                                SelectInputComponent\n                                BinaryRadioInputComponent\n                                TextInputComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-info-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-info-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                dialogService\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                fetchUserByPhone\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                roles\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                userInfoForm\n                            \n                            \n                                    Private\n                                userManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateUserSms\n                            \n                            \n                                    Private\n                                getSoftwareUser\n                            \n                            \n                                    Private\n                                isSuccessful\n                            \n                            \n                                    Private\n                                    Async\n                                loadUserTypes\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                populateForm\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                resetSearchForm\n                            \n                            \n                                resetUserInfoForm\n                            \n                            \n                                    Async\n                                resetUserPassword\n                            \n                            \n                                    Async\n                                sendWebsiteLink\n                            \n                            \n                                    Private\n                                showNewPasswordDialog\n                            \n                            \n                                    Async\n                                submitUserInfo\n                            \n                            \n                                    Async\n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchPhone\n                                \n                                \n                                    id\n                                \n                                \n                                    phone\n                                \n                                \n                                    name\n                                \n                                \n                                    userType\n                                \n                                \n                                    smsActive\n                                \n                                \n                                    userActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:55\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateUserSms\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateUserSms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSoftwareUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:231\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SoftwareUserInfo\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSuccessful\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSuccessful(res: ApiResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadUserTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUserTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        populateForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    populateForm(data: SoftwareUserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SoftwareUserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSearchForm\n                        \n                    \n                \n            \n            \n                \nresetSearchForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:283\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetUserInfoForm\n                        \n                    \n                \n            \n            \n                \nresetUserInfoForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:272\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetUserPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendWebsiteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendWebsiteLink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showNewPasswordDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNewPasswordDialog(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitUserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:224\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserByPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchPhone\n                    \n                \n\n                \n                    \n                        getsearchPhone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:290\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:295\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        phone\n                    \n                \n\n                \n                    \n                        getphone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:300\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:305\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userType\n                    \n                \n\n                \n                    \n                        getuserType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:310\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        smsActive\n                    \n                \n\n                \n                    \n                        getsmsActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:315\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userActive\n                    \n                \n\n                \n                    \n                        getuserActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/user-Info-form/user-info-form.component.ts:320\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { DialogService } from 'primeng/dynamicdialog';\n\nimport { SelectInputComponent } from 'app/components/shared/inputs/select-input/select-input.component';\nimport { BinaryRadioInputComponent } from 'app/components/shared/inputs/binary-radio-input/binary-radio-input.component';\nimport { TextInputComponent } from 'app/components/shared/inputs/text-input/text-input.component';\nimport { SearchInputComponent } from 'app/components/shared/inputs/search-input/search-input.component';\n\nimport { UserManagementService } from 'app/services/user-management/user-management.service';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\n\nimport { NewPasswordDialogComponent } from 'app/components/shared/dialog/new-password-dialog/new-password-dialog.component';\nimport { SoftwareUserInfo } from 'app/data/model/software-user-info.model';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { ValidationSchema } from 'app/constants/validation-schema';\n\n@Component({\n  selector: 'app-user-info-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    ButtonModule,\n    DialogModule,\n    SelectInputComponent,\n    BinaryRadioInputComponent,\n    TextInputComponent,\n    SearchInputComponent,\n  ],\n  providers: [DialogService],\n  templateUrl: './user-info-form.component.html',\n  styleUrl: './user-info-form.component.scss',\n})\nexport class UserInfoFormComponent implements OnInit, OnDestroy {\n  private fb = inject(FormBuilder);\n  private userManager = inject(UserManagementService);\n  private toast = inject(ToastService);\n  private loadingService = inject(LoadingService);\n  private dialogService = inject(DialogService);\n  private destroy$ = new Subject();\n\n  userInfoForm: FormGroup;\n  searchForm: FormGroup;\n  roles: { label: string; value: number }[] = [];\n  loading = false;\n\n  constructor() {\n    // Initialize the search and user info forms\n    this.searchForm = this.fb.group({\n      searchPhone: ['', ValidationSchema.mobile],\n    });\n\n    this.userInfoForm = this.fb.group({\n      id: [0, ValidationSchema.id],\n      phone: ['', ValidationSchema.mobile],\n      name: ['', ValidationSchema.fullName],\n      userType: [0],\n      smsActive: [false],\n      userActive: [true],\n    });\n  }\n\n  // Lifecycle: on component init\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((val) => (this.loading = val));\n\n    this.loadUserTypes();\n  }\n\n  // Lifecycle: clean up on destroy\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // Load user types from the backend and format them for dropdown\n  private async loadUserTypes(): Promise {\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.GetUserTypes();\n      if (!this.isSuccessful(res)) return;\n\n      this.roles =\n        res.data?.map((type) => ({\n          value: type.UTId,\n          label: type.UTTitle,\n        })) ?? [];\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // Fetch user info using phone number (called by search)\n  fetchUserByPhone = async (phone: string) => {\n    if (this.searchForm.invalid || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.GetSoftwareUserInfo(phone);\n      if (!this.isSuccessful(res)) return;\n      this.populateForm(res.data!);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  };\n\n  // Activate SMS access for a user\n  async activateUserSms(): Promise {\n    if (\n      this.id.value === 0 ||\n      this.smsActive.invalid ||\n      this.smsActive.value ||\n      this.loading\n    )\n      return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.ActivateUserSMS(this.id.value);\n      if (!this.isSuccessful(res)) return;\n\n      this.smsActive.setValue(true);\n      this.toast.success('موفق', res.data?.Message ?? 'عملیات موفق آمیز بود.');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // Reset the user's password and display in dialog\n  async resetUserPassword(): Promise {\n    if (this.id.value === 0 || this.loading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.ResetSoftwareUserPassword(\n        this.id.value\n      );\n      if (!this.isSuccessful(res)) return;\n\n      const { Username, Password } = res.data!;\n      this.showNewPasswordDialog(Username, Password);\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // Register a new user using form data\n  async registerUser(): Promise {\n    if (this.loading && this.userInfoForm.invalid) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const user = this.getSoftwareUser();\n      const res = await this.userManager.RegisterNewSoftwareUser({\n        ...user,\n        UserId: 0,\n      });\n      if (!this.isSuccessful(res)) return;\n\n      this.toast.success('موفق', 'کاربر با موفقیت ثبت شد.');\n      this.resetUserInfoForm();\n      this.resetSearchForm();\n\n      this.populateForm({\n        ...user,\n        UserId: res.data?.UserId ?? 0,\n      });\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // Update an existing user's information\n  async updateUserInfo(): Promise {\n    if (this.userInfoForm.invalid || this.loading) return;\n\n    const user = this.getSoftwareUser();\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.EditSoftwareUser(user);\n      if (!this.isSuccessful(res)) return;\n      this.toast.success('موفق', res.data?.Message ?? '');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  // Send the web login link to the user's phone\n  async sendWebsiteLink(): Promise {\n    if (this.id.value === 0) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const res = await this.userManager.SendWebsiteLink(this.id.value);\n      if (!res.success) {\n        this.toast.error(\n          'خطا',\n          res.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد'\n        );\n        return;\n      }\n      this.toast.success(\n        'موفق',\n        res.data?.Message ?? 'لینک سامانه با موفقیت ارسال گردید'\n      );\n    } finally {\n      this.loadingService.setLoading(true);\n    }\n  }\n\n  // Decide whether to register or update based on user ID\n  async submitUserInfo(): Promise {\n    this.id.value === 0\n      ? await this.registerUser()\n      : await this.updateUserInfo();\n  }\n\n  // Extract user data from form into a SoftwareUserInfo object\n  private getSoftwareUser(): SoftwareUserInfo {\n    return {\n      UserId: this.id.value,\n      MobileNumber: this.phone.value,\n      UserName: this.name.value,\n      UserTypeId: this.userType.value,\n      SMSOwnerActive: this.smsActive.value,\n      UserActive: this.userActive.value,\n    };\n  }\n\n  // Open dialog showing new username and password\n  private showNewPasswordDialog(username: string, password: string): void {\n    this.dialogService.open(NewPasswordDialogComponent, {\n      header: 'رمز عبور جدید',\n      width: '20rem',\n      modal: true,\n      inputValues: { username, password },\n    });\n  }\n\n  // Populate form fields with existing user data\n  private populateForm(data: SoftwareUserInfo): void {\n    this.id.setValue(data.UserId);\n    this.phone.setValue(data.MobileNumber);\n    this.name.setValue(data.UserName);\n    this.userType.setValue(data.UserTypeId);\n    this.smsActive.setValue(data.SMSOwnerActive);\n    this.userActive.setValue(data.UserActive);\n  }\n\n  // Check if response is valid and successful\n  private isSuccessful(res: ApiResponse): boolean {\n    if (!res.success || !res.data) {\n      this.toast.error('خطا', res.error?.message ?? 'خطای غیرمنتظره‌ای رخ داد');\n      return false;\n    }\n    return true;\n  }\n\n  // Reset user form to default values\n  resetUserInfoForm(): void {\n    this.userInfoForm.reset();\n    this.userInfoForm.markAsPristine();\n    this.userInfoForm.markAsUntouched();\n    this.id.setValue(0);\n    this.userType.setValue(0);\n    this.smsActive.setValue(false);\n    this.userActive.setValue(true);\n  }\n\n  // Reset the phone search input form\n  resetSearchForm(): void {\n    this.searchForm.reset();\n    this.searchForm.markAsPristine();\n    this.searchForm.markAsUntouched();\n  }\n\n  // Getter for searchPhone control\n  get searchPhone(): FormControl {\n    return this.searchForm.get('searchPhone') as FormControl;\n  }\n\n  // Getter for ID control\n  get id(): FormControl {\n    return this.userInfoForm.get('id') as FormControl;\n  }\n\n  // Getter for phone control\n  get phone(): FormControl {\n    return this.userInfoForm.get('phone') as FormControl;\n  }\n\n  // Getter for name control\n  get name(): FormControl {\n    return this.userInfoForm.get('name') as FormControl;\n  }\n\n  // Getter for user type control\n  get userType(): FormControl {\n    return this.userInfoForm.get('userType') as FormControl;\n  }\n\n  // Getter for SMS activation control\n  get smsActive(): FormControl {\n    return this.userInfoForm.get('smsActive') as FormControl;\n  }\n\n  // Getter for user activation control\n  get userActive(): FormControl {\n    return this.userInfoForm.get('userActive') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n  \n    \n    \n      \n      \n        \n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n        \n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n\n      \n\n      \n\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserManagementService.html":{"url":"injectables/UserManagementService.html","title":"injectable - UserManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-management/user-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ActivateUserSMS\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeUserWebProcessAccess\n                            \n                            \n                                    Public\n                                    Async\n                                ChangeUserWebProcessGroupAccess\n                            \n                            \n                                    Public\n                                    Async\n                                EditSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                GetSoftwareUserInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetSoftwareUserProfile\n                            \n                            \n                                    Public\n                                    Async\n                                GetUserTypes\n                            \n                            \n                                    Public\n                                    Async\n                                GetWebProcessGroups_WebProcesses\n                            \n                            \n                                    Public\n                                    Async\n                                RegisterNewSoftwareUser\n                            \n                            \n                                    Public\n                                    Async\n                                ResetSoftwareUserPassword\n                            \n                            \n                                    Public\n                                    Async\n                                SendWebsiteLink\n                            \n                            \n                                    Private\n                                TrimSoftwareUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ActivateUserSMS\n                        \n                    \n                \n            \n            \n                \n                        \n                    ActivateUserSMS(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeUserWebProcessAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeUserWebProcessAccess(userId: number, pId: number, pAccess: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:247\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pAccess\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ChangeUserWebProcessGroupAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeUserWebProcessGroupAccess(userId: number, pGId: number, pGAccess: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:270\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pGId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pGAccess\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        EditSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    EditSoftwareUser(userInfo: SoftwareUserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userInfo\n                                            \n                                                            SoftwareUserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetSoftwareUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetSoftwareUserInfo(mobileNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mobileNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetSoftwareUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetSoftwareUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetUserTypes\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetUserTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:220\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetWebProcessGroups_WebProcesses\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetWebProcessGroups_WebProcesses(mobileNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:297\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mobileNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        RegisterNewSoftwareUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RegisterNewSoftwareUser(userInfo: SoftwareUserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userInfo\n                                            \n                                                            SoftwareUserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ResetSoftwareUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResetSoftwareUserPassword(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        SendWebsiteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    SendWebsiteLink(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        TrimSoftwareUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    TrimSoftwareUserInfo(softwareUserInfo: SoftwareUserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management/user-management.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                softwareUserInfo\n                                            \n                                                            SoftwareUserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SoftwareUserInfo\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-management/user-management.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-management/user-management.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { API_ROUTES } from 'app/constants/api';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { UserType } from 'app/data/model/user-type.model';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { SoftwareUserInfo } from 'app/data/model/software-user-info.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { ApiGroupProcess } from 'app/data/model/api-group-process.model';\nimport { ApiProcess } from 'app/data/model/api-process.model';\nimport {\n  APIUsernamePassword,\n  UsernamePassword,\n} from 'app/data/model/username-password.model';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { mockUserTypes } from 'app/data/mock/user-types.mock';\nimport { mockSoftwareUserInfo } from 'app/data/mock/software-user-info.mock';\nimport { mockShortResponse } from 'app/data/mock/short-response.mock';\nimport { mockAPIUsernamePassword } from 'app/data/mock/username-password.mock';\nimport { mockApiGroupProcess } from 'app/data/mock/api-group-process.mock';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserManagementService {\n  private apiCommunicator = inject(APICommunicationManagementService);\n  private userAuth = inject(UserAuthService);\n\n  public async SendWebsiteLink(\n    userId: number\n  ): Promise> {\n    //#region Const\n    const apiUrl = API_ROUTES.SoftwareUserAPI.UserManagement.SendWebsiteLink;\n    const userInfo: SoftwareUserInfo = {\n      UserId: userId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserId: userInfo.UserId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async ResetSoftwareUserPassword(\n    userId: number\n  ): Promise> {\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement.ResetSoftwareUserPassword;\n    const userInfo: SoftwareUserInfo = { UserId: userId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserId: userInfo.UserId,\n    };\n    //#endregion\n\n    //#region Request\n    var response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockAPIUsernamePassword);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: {\n        Username: response.data?.UserShenaseh!,\n        Password: response.data?.UserPassword!,\n      },\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async ActivateUserSMS(\n    userId: number\n  ): Promise> {\n    //#region Consts\n    const apiUrl = API_ROUTES.SoftwareUserAPI.UserManagement.ActivateSMSOwner;\n    const userInfo: SoftwareUserInfo = { UserId: userId };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserId: userInfo.UserId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async EditSoftwareUser(\n    userInfo: SoftwareUserInfo\n  ): Promise> {\n    //#region Consts\n    const apiUrl = API_ROUTES.SoftwareUserAPI.UserManagement.EditSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawSoftwareUser: userInfo,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n    //#endregion\n  }\n\n  public async RegisterNewSoftwareUser(\n    userInfo: SoftwareUserInfo\n  ): Promise> {\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement.RegisteringSoftwareUser;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      RawSoftwareUser: userInfo,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSoftwareUserInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: { UserId: response.data?.SoftwareUserId! },\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetSoftwareUserInfo(\n    mobileNumber: string\n  ): Promise> {\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement.GetSoftwareUserInfo;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserMobileNumber: mobileNumber,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSoftwareUserInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimSoftwareUserInfo(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetSoftwareUserProfile(): Promise\n  > {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement.GetSoftwareUserProfile;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockSoftwareUserInfo);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: this.TrimSoftwareUserInfo(response.data!),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  private TrimSoftwareUserInfo(\n    softwareUserInfo: SoftwareUserInfo\n  ): SoftwareUserInfo {\n    return {\n      UserId: softwareUserInfo.UserId,\n      UserName: softwareUserInfo.UserName?.trim(),\n      MobileNumber: softwareUserInfo.MobileNumber?.trim(),\n      UserTypeId: softwareUserInfo.UserTypeId,\n      UserActive: softwareUserInfo.UserActive,\n      SMSOwnerActive: softwareUserInfo.SMSOwnerActive,\n      UserTypeTitle: softwareUserInfo.UserTypeTitle?.trim(),\n    };\n  }\n\n  public async GetUserTypes(): Promise> {\n    //#region Consts\n    const apiUrl = API_ROUTES.SoftwareUserAPI.UserManagement.GetUserTypes;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockUserTypes);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((x) => ({\n        UTId: x.UTId,\n        UTTitle: x.UTTitle.trim(),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async ChangeUserWebProcessAccess(\n    userId: number,\n    pId: number,\n    pAccess: boolean\n  ): Promise> {\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement\n        .ChangeSoftwareUserWebProcessAccess;\n    const userInfo: SoftwareUserInfo = { UserId: userId };\n    const needToChange: ApiProcess = { PId: pId, PAccess: pAccess };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserId: userInfo.UserId,\n      PId: needToChange.PId,\n      PAccess: needToChange.PAccess,\n    };\n\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n  }\n\n  public async ChangeUserWebProcessGroupAccess(\n    userId: number,\n    pGId: number,\n    pGAccess: boolean\n  ): Promise> {\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement\n        .ChangeSoftwareUserWebProcessGroupAccess;\n    const userInfo: SoftwareUserInfo = { UserId: userId };\n    const needToChange: ApiGroupProcess = {\n      PGId: pGId,\n      WebProcesses: [],\n      PGAccess: pGAccess,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserId: userInfo.UserId,\n      PGId: needToChange.PGId,\n      PGAccess: needToChange.PGAccess,\n    };\n\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockShortResponse);\n  }\n\n  public async GetWebProcessGroups_WebProcesses(\n    mobileNumber: string\n  ): Promise> {\n    const apiUrl =\n      API_ROUTES.SoftwareUserAPI.UserManagement\n        .GetWebProcessGroups_WebProcesses;\n    const userInfo: SoftwareUserInfo = {\n      UserId: 0,\n      MobileNumber: mobileNumber,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      SoftwareUserMobileNumber: userInfo.MobileNumber,\n    };\n\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockApiGroupProcess);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/user-session.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession{\n  sessionId:string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserType.html":{"url":"interfaces/UserType.html","title":"interface - UserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/user-type.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            UTId\n                                        \n                                \n                                \n                                        \n                                            UTTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        UTId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UTId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UTTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UTTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserType {\n  UTId: number;\n  UTTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsernamePassword.html":{"url":"interfaces/UsernamePassword.html","title":"interface - UsernamePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsernamePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/username-password.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface APIUsernamePassword {\n  UserShenaseh: string;\n  UserPassword: string;\n}\n\nexport interface UsernamePassword {\n  Username: string;\n  Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersMenuAccessFormComponent.html":{"url":"components/UsersMenuAccessFormComponent.html","title":"component - UsersMenuAccessFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersMenuAccessFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-menu-access-form\n            \n\n\n            \n                imports\n                \n                            TreeTableModule\n                            CommonModule\n                                SearchInputComponent\n                            ButtonModule\n                            ProgressSpinnerModule\n                            ReactiveFormsModule\n                                TextInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./users-menu-access-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./users-menu-access-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessTable\n                            \n                            \n                                cols\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingService\n                            \n                            \n                                searchForm\n                            \n                            \n                                selectedNodes\n                            \n                            \n                                selectedNodesCopy\n                            \n                            \n                                    Private\n                                toast\n                            \n                            \n                                userInfo\n                            \n                            \n                                    Private\n                                userManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserAccessMenu\n                            \n                            \n                                    Private\n                                    Async\n                                LoadWebProcessGroups_WebProcessesTable\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                SaveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchPhone\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserAccessMenu\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserAccessMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        LoadWebProcessGroups_WebProcessesTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    LoadWebProcessGroups_WebProcessesTable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        SaveChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    SaveChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessTable\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TreeNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cols\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { field: 'PGTitle', header: 'نام منو' },\n    { field: 'Description', header: 'توضیحات' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoadingService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    searchPhone: ['', ValidationSchema.mobile],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedNodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SelectedNodes\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedNodesCopy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SelectedNodes\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SoftwareUserInfo\n\n                    \n                \n                \n                    \n                        Default value : { UserId: 0 }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchPhone\n                    \n                \n\n                \n                    \n                        getsearchPhone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/forms/user-management-form/users-menu-access-form/users-menu-access-form.component.ts:257\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { CommonModule } from '@angular/common';\nimport { UserManagementService } from 'app/services/user-management/user-management.service';\nimport { SearchInputComponent } from 'app/components/shared/inputs/search-input/search-input.component';\nimport { SoftwareUserInfo } from 'app/data/model/software-user-info.model';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ButtonModule } from 'primeng/button';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { ShortResponse } from 'app/data/model/short-response.model';\nimport { TextInputComponent } from '../../../shared/inputs/text-input/text-input.component';\nimport { ValidationSchema } from 'app/constants/validation-schema';\nimport {Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'app/services/loading-service/loading-service.service';\n\ninterface SelectedNodes {\n  [key: string]: { checked: boolean; partialChecked?: boolean };\n}\n\n@Component({\n  selector: 'app-users-menu-access-form',\n  imports: [\n    TreeTableModule,\n    CommonModule,\n    SearchInputComponent,\n    ButtonModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    TextInputComponent,\n  ],\n  templateUrl: './users-menu-access-form.component.html',\n  styleUrl: './users-menu-access-form.component.scss',\n})\nexport class UsersMenuAccessFormComponent implements OnInit, OnDestroy {\n  private userManager = inject(UserManagementService);\n  private toast = inject(ToastService);\n  private fb = inject(FormBuilder);\n  private loadingService = inject(LoadingService);\n  private destroy$ = new Subject();\n\n  isLoading: boolean = false;\n  accessTable?: TreeNode[] = [];\n  selectedNodes: SelectedNodes = {};\n  selectedNodesCopy: SelectedNodes = {};\n  userInfo: SoftwareUserInfo = { UserId: 0 };\n\n  searchForm: FormGroup = this.fb.group({\n    searchPhone: ['', ValidationSchema.mobile],\n  });\n  cols = [\n    { field: 'PGTitle', header: 'نام منو' },\n    { field: 'Description', header: 'توضیحات' },\n  ];\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.loadingService.loading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((value) => (this.isLoading = value));\n  }\n\n  async SaveChanges() {\n    if (this.isLoading) return;\n\n    this.loadingService.setLoading(true);\n\n    try {\n      // === Step 1: Disable old access (selectedNodesCopy, PAccess: false) ===\n      const disablePromises: Promise>[] = [];\n\n      for (const key in this.selectedNodesCopy) {\n        if (\n          this.selectedNodesCopy[key].checked ||\n          this.selectedNodesCopy[key].partialChecked\n        ) {\n          if (key.includes('-')) {\n            disablePromises.push(\n              this.userManager.ChangeUserWebProcessAccess(\n                this.userInfo.UserId,\n                Number(key.split('-')[1]),\n                false\n              )\n            );\n          } else {\n            disablePromises.push(\n              this.userManager.ChangeUserWebProcessGroupAccess(\n                this.userInfo.UserId,\n                Number(key),\n                false\n              )\n            );\n          }\n        }\n      }\n\n      const disableResults = await Promise.allSettled(disablePromises);\n      const firstDisableError = disableResults.find(\n        (r) => r.status === 'rejected'\n      ) as PromiseRejectedResult | undefined;\n\n      if (firstDisableError) {\n        const error =\n          (firstDisableError.reason as any)?.error?.message ??\n          'خطای غیرمنتظره‌ای در حذف دسترسی رخ داد';\n        this.toast.error('خطا', error);\n        return;\n      }\n\n      // === Step 2: Enable new access (selectedNodes, PAccess: true) ===\n      const enablePromises: Promise>[] = [];\n\n      for (const key in this.selectedNodes) {\n        if (\n          this.selectedNodes[key].checked ||\n          this.selectedNodes[key].partialChecked\n        ) {\n          if (key.includes('-')) {\n            enablePromises.push(\n              this.userManager.ChangeUserWebProcessAccess(\n                this.userInfo.UserId,\n                Number(key.split('-')[1]),\n                true\n              )\n            );\n          } else {\n            enablePromises.push(\n              this.userManager.ChangeUserWebProcessGroupAccess(\n                this.userInfo.UserId,\n                Number(key),\n                true\n              )\n            );\n          }\n        }\n      }\n\n      const enableResults = await Promise.allSettled(enablePromises);\n      const firstEnableError = enableResults.find(\n        (r) => r.status === 'rejected'\n      ) as PromiseRejectedResult | undefined;\n      const firstEnableSuccess = enableResults.find(\n        (r) => r.status === 'fulfilled'\n      ) as PromiseFulfilledResult> | undefined;\n\n      if (firstEnableError) {\n        const error =\n          (firstEnableError.reason as any)?.error?.message ??\n          'خطای غیرمنتظره‌ای در اعمال دسترسی رخ داد';\n        this.toast.error('خطا', error);\n      } else {\n        const message =\n          firstEnableSuccess?.value?.data?.Message ??\n          'دسترسی با موفقیت اعمال شد';\n        this.toast.success('موفق', message);\n      }\n\n      // === Reload the table ===\n      await this.LoadWebProcessGroups_WebProcessesTable();\n    } catch (err) {\n      this.toast.error('خطا', 'خطای بحرانی در ذخیره‌سازی رخ داد');\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n  }\n\n  private async LoadWebProcessGroups_WebProcessesTable(): Promise {\n    const response = await this.userManager.GetWebProcessGroups_WebProcesses(\n      this.userInfo.MobileNumber!\n    );\n    if (!response.success || !response.data) {\n      this.toast.error(\n        'خطا',\n        response.error?.message ?? 'خطا در هنگام براگزاری اطلاعات'\n      );\n      this.accessTable = [];\n      return;\n    }\n\n    const loadedTable = response.data;\n    this.accessTable =\n      loadedTable.map((x) => ({\n        key: x.PGId.toString(),\n        data: {\n          PGTitle: x.PGTitle,\n          Description: '',\n        },\n        checked: x.PGAccess === true,\n        children: x.WebProcesses?.map((y) => ({\n          key: x.PGId.toString() + '-' + y.PId.toString(),\n          data: {\n            PGTitle: y.PTitle,\n            Description: y.Description,\n          },\n          checked: y.PAccess === true,\n          children: [],\n        })),\n      })) ?? [];\n\n    this.accessTable.forEach((parentNode) => {\n      this.selectedNodes[parentNode.key!] = {\n        checked: parentNode.checked!,\n        partialChecked: parentNode.partialSelected,\n      };\n      parentNode.children?.forEach((childNode) => {\n        this.selectedNodes[childNode.key!] = {\n          checked: childNode.checked!,\n          partialChecked: childNode.partialSelected,\n        };\n      });\n    });\n\n    this.selectedNodesCopy = structuredClone(this.selectedNodes);\n  }\n\n  async getUserAccessMenu() {\n    if (this.searchForm.invalid || this.isLoading) return;\n\n    this.loadingService.setLoading(true);\n    try {\n      const response = await this.userManager.GetSoftwareUserInfo(\n        this.searchPhone.value\n      );\n      if (!response.success || !response.data) {\n        this.toast.error(\n          'خطا',\n          response.error?.message ?? 'خطا در هنگام براگزاری اطلاعات'\n        );\n        this.accessTable = [];\n        return;\n      }\n\n      this.userInfo = {\n        UserId: response.data?.UserId,\n        MobileNumber: response.data?.MobileNumber,\n      };\n    } finally {\n      this.loadingService.setLoading(false);\n    }\n\n    this.loadingService.setLoading(true);\n    await this.LoadWebProcessGroups_WebProcessesTable();\n    this.loadingService.setLoading(false);\n  }\n\n  get searchPhone() {\n    return this.searchForm.get('searchPhone') as FormControl;\n  }\n}\n\n    \n\n    \n        \n  \n     \n    \n    \n      \n      \n    \n  \n    \n\n    \n      \n        \n          \n            {{ col.header }}\n          \n        \n      \n\n      \n        \n          \n            \n            \n            {{ rowData[col.field] }}\n          \n        \n      \n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                             {{ col.header }}                                                                                    {{ rowData[col.field] }}                                  '\n    var COMPONENTS = [{'name': 'AnnouncementGroupFormComponent', 'selector': 'app-announcement-group-form'},{'name': 'AnnouncementSubGroupFormComponent', 'selector': 'app-announcement-sub-group-form'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryRadioInputComponent', 'selector': 'app-binary-radio-input'},{'name': 'CaptchaInputComponent', 'selector': 'app-captcha-input'},{'name': 'CheckboxInputComponent', 'selector': 'app-checkbox-input'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DatePickerInput', 'selector': 'app-date-picker-input'},{'name': 'DriverInfoFormComponent', 'selector': 'app-driver-info-form'},{'name': 'DriverTruckWalletFormComponent', 'selector': 'app-driver-truck-wallet-form'},{'name': 'EmergencyTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'FactoriesAndFreightFormComponent', 'selector': 'app-factories-and-freight-form'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordFormComponent', 'selector': 'app-forget-password-form'},{'name': 'ForgetPasswordPageComponent', 'selector': 'app-forget-password-page'},{'name': 'FormCardComponent', 'selector': 'app-form-card'},{'name': 'FullScreenBackgroundComponent', 'selector': 'app-full-screen-background'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomePageComponent', 'selector': 'app-home'},{'name': 'LadPlacesFormComponent', 'selector': 'app-lad-places-form'},{'name': 'LoadCapacitorFormComponent', 'selector': 'app-load-capacitor-form'},{'name': 'LoaderTypeFormComponent', 'selector': 'app-loader-type-form'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MainViewComponent', 'selector': 'app-main-tab'},{'name': 'NewPasswordDialogComponent', 'selector': 'app-reset-password-dialog'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProductFormComponent', 'selector': 'app-product-form'},{'name': 'ProvinceAndCityFormComponent', 'selector': 'app-province-and-city-form'},{'name': 'RealTimeTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'RelationOfAnnouncementGroupAndSubGroupComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToAnnouncementSubGroupsFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'RelationOfSequentialTurnToLoaderTypeFormComponent', 'selector': 'app-relation-of-announcement-group-and-sub-group'},{'name': 'ResuscitateTurnsFormComponent', 'selector': 'app-real-time-turns-form'},{'name': 'SearchAutoCompleteComponent', 'selector': 'app-search-auto-complete'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SelectInputComponent', 'selector': 'app-select-input'},{'name': 'SequentialTurnsFormComponent', 'selector': 'app-sequential-turns-form'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarMenuComponent', 'selector': 'app-sidebar-menu'},{'name': 'SubMenuComponent', 'selector': 'app-sub-menu'},{'name': 'SupportButtonComponent', 'selector': 'app-support-button'},{'name': 'TabBarComponent', 'selector': 'app-tab-bar'},{'name': 'TabViewComponent', 'selector': 'app-tab-view'},{'name': 'TariffsFormComponent', 'selector': 'app-tariffs-editor-form'},{'name': 'TerminalCardComponent', 'selector': 'app-terminal-card'},{'name': 'TextAreaInputComponent', 'selector': 'app-text-area-input'},{'name': 'TextInputComponent', 'selector': 'app-text-input'},{'name': 'TimePickerInput', 'selector': 'app-time-picker-input'},{'name': 'TravelTimeFormComponent', 'selector': 'app-travel-time-form'},{'name': 'TreeTableCheckboxComponent', 'selector': 'app-tree-table-checkbox'},{'name': 'TruckAndDriverInformationFormComponent', 'selector': 'app-truck-and-driver-information-form'},{'name': 'TruckInfoFormComponent', 'selector': 'app-truck-info-form'},{'name': 'TurnsListFormComponent', 'selector': 'app-turns-list-form'},{'name': 'TurnsTruckInfoBaseFormComponent', 'selector': 'app-turns-truck-info-base-form'},{'name': 'UserInfoFormComponent', 'selector': 'app-user-info-form'},{'name': 'UsersMenuAccessFormComponent', 'selector': 'app-users-menu-access-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersMenuAccessFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wallet.html":{"url":"interfaces/Wallet.html","title":"interface - Wallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/model/wallet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Balance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            MoneyWalletCode\n                                        \n                                \n                                \n                                        \n                                            MoneyWalletId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MoneyWalletCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MoneyWalletCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MoneyWalletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MoneyWalletId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Wallet {\n  MoneyWalletId: number;\n  MoneyWalletCode?: string;\n  Balance?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletDefaultAmount.html":{"url":"interfaces/WalletDefaultAmount.html","title":"interface - WalletDefaultAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletDefaultAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/model/wallet-default-amount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Amount\n                                        \n                                \n                                \n                                        \n                                            AmountTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AmountTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AmountTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WalletDefaultAmount {\n  AmountTitle: string;\n  Amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletManagementService.html":{"url":"injectables/WalletManagementService.html","title":"injectable - WalletManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/wallet-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiCommunicator\n                            \n                            \n                                    Private\n                                userAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                GetSmsWalletInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetTruckerAssociationWalletInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetTruckWalletInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetUserWalletInfo\n                            \n                            \n                                    Public\n                                    Async\n                                GetWalletBalance\n                            \n                            \n                                    Public\n                                    Async\n                                GetWalletDefaultAmounts\n                            \n                            \n                                    Public\n                                    Async\n                                GetWalletPaymentRecords\n                            \n                            \n                                    Public\n                                    Async\n                                GetWalletTransactions\n                            \n                            \n                                    Public\n                                    Async\n                                SendPaymentRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetSmsWalletInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetSmsWalletInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTruckerAssociationWalletInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTruckerAssociationWalletInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetTruckWalletInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetTruckWalletInfo(truckId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                truckId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetUserWalletInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetUserWalletInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetWalletBalance(walletId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetWalletDefaultAmounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetWalletDefaultAmounts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetWalletPaymentRecords\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetWalletPaymentRecords(walletId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        GetWalletTransactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetWalletTransactions(walletId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        SendPaymentRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    SendPaymentRequest(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/wallet-management/wallet-management.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(APICommunicationManagementService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet-management/wallet-management.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet-management/wallet-management.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { UserAuthService } from '../user-auth-service/user-auth.service';\nimport { APICommunicationManagementService } from '../api-communication-management/apicommunication-management.service';\nimport { ApiResponse } from 'app/data/model/api-Response.model';\nimport { WalletTransaction } from './model/wallet-transaction.model';\nimport { API_ROUTES } from 'app/constants/api';\nimport { Wallet } from './model/wallet.model';\nimport { mockWalletTransactions } from './mock/wallet-transaction.mock';\nimport { WalletPaymentHistory } from './model/wallet-payment-history.model';\nimport { mockWalletPaymentHistories } from './mock/wallet-payment-history.mock';\nimport { mockWallet } from './mock/wallet.mock';\nimport { WalletDefaultAmount } from './model/wallet-default-amount.model';\nimport { mockWalletDefaultAmounts } from './mock/wallet-default-amount.mock';\nimport { WalletPaymentRequest } from './model/wallet-payment-request.model';\nimport { mockWalletPaymentRequest } from './mock/wallet-payment-request.mock';\nimport { TruckInfo } from '../driver-truck-management/model/truck-info.model';\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletManagementService {\n  private userAuth = inject(UserAuthService);\n  private apiCommunicator = inject(APICommunicationManagementService);\n\n  public async GetUserWalletInfo(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletInfo.GetUserWallet;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWallet);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data,\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetTruckWalletInfo(\n    truckId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletInfo.GetTruckWallet;\n    const truckInfo: TruckInfo = {\n      TruckId: truckId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      TruckId: truckInfo.TruckId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWallet);\n    //#endregion\n  }\n\n  public async GetTruckerAssociationWalletInfo(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.WalletAndTrafficApi.WalletInfo.GetTruckerAssociationWallet;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWallet);\n    //#endregion\n  }\n\n  public async GetSmsWalletInfo(): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletInfo.GetSmsWallet;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWallet);\n    //#endregion\n  }\n\n  \n\n  public async GetWalletBalance(\n    walletId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletInfo.GetWalletBalance;\n    const walletInfo: Wallet = {\n      MoneyWalletId: walletId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      MoneyWalletId: walletInfo.MoneyWalletId,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, {\n      Balance: 10000000,\n    });\n    //#endregion\n  }\n\n  public async GetWalletDefaultAmounts(): Promise\n  > {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletInfo.GetDefaultAmounts;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWalletDefaultAmounts);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        AmountTitle: data.AmountTitle.trim(),\n        Amount: data.Amount,\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async SendPaymentRequest(\n    amount: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl = API_ROUTES.WalletAndTrafficApi.WalletRequests.PaymentRequest;\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      Amount: amount,\n    };\n    //#endregion\n\n    //#region Request + Return\n    return await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWalletPaymentRequest);\n    //#endregion\n  }\n\n  public async GetWalletTransactions(\n    walletId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.WalletAndTrafficApi.WalletInfo.GetWalletTransactions;\n    const walletInfo: Wallet = {\n      MoneyWalletId: walletId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      MoneyWalletId: walletInfo.MoneyWalletId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWalletTransactions);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        TransactionTitle: data.TransactionTitle.trim(),\n        TransactionColor: data.TransactionColor.trim(),\n        ShamsiDate: data.ShamsiDate.trim(),\n        Time: data.Time.trim(),\n        CurrentBalance: data.CurrentBalance,\n        Amount: data.Amount,\n        Reminder: data.Reminder,\n        UserName: data.UserName.trim(),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n\n  public async GetWalletPaymentRecords(\n    walletId: number\n  ): Promise> {\n    this.userAuth.isLoggedIn();\n\n    //#region Consts\n    const apiUrl =\n      API_ROUTES.WalletAndTrafficApi.WalletInfo.GetWalletPaymentRecords;\n    const walletInfo: Wallet = {\n      MoneyWalletId: walletId,\n    };\n    const bodyValue = {\n      SessionId: this.userAuth.getSessionId(),\n      MoneyWalletId: walletInfo.MoneyWalletId,\n    };\n    //#endregion\n\n    //#region Request\n    const response = await this.apiCommunicator.CommunicateWithAPI_Post(apiUrl, bodyValue, mockWalletPaymentHistories);\n    //#endregion\n\n    //#region Return\n    return {\n      success: response.success,\n      data: response.data?.map((data) => ({\n        ShamsiDate: data.ShamsiDate.trim(),\n        Time: data.Time.trim(),\n        Amount: data.Amount,\n        UserName: data.UserName.trim(),\n      })),\n      error: response.error,\n    };\n    //#endregion\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletPaymentHistory.html":{"url":"interfaces/WalletPaymentHistory.html","title":"interface - WalletPaymentHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletPaymentHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/model/wallet-payment-history.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Amount\n                                        \n                                \n                                \n                                        \n                                            ShamsiDate\n                                        \n                                \n                                \n                                        \n                                            Time\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShamsiDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ShamsiDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WalletPaymentHistory {\n  ShamsiDate: string;\n  Time: string;\n  Amount: number;\n  UserName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletPaymentRequest.html":{"url":"interfaces/WalletPaymentRequest.html","title":"interface - WalletPaymentRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletPaymentRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/model/wallet-payment-request.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Authority\n                                        \n                                \n                                \n                                        \n                                            PaymentURI\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Authority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Authority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PaymentURI\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PaymentURI:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WalletPaymentRequest {\n  Authority: string;\n  PaymentURI: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletTransaction.html":{"url":"interfaces/WalletTransaction.html","title":"interface - WalletTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet-management/model/wallet-transaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Amount\n                                        \n                                \n                                \n                                        \n                                            CurrentBalance\n                                        \n                                \n                                \n                                        \n                                            Reminder\n                                        \n                                \n                                \n                                        \n                                            ShamsiDate\n                                        \n                                \n                                \n                                        \n                                            Time\n                                        \n                                \n                                \n                                        \n                                            TransactionColor\n                                        \n                                \n                                \n                                        \n                                            TransactionTitle\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CurrentBalance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CurrentBalance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Reminder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Reminder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShamsiDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ShamsiDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransactionColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransactionColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TransactionTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TransactionTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WalletTransaction {\n  TransactionTitle: string;\n  TransactionColor: string;\n  ShamsiDate: string;\n  Time: string;\n  CurrentBalance: number;\n  Amount: number;\n  Reminder: number;\n  UserName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebProcess.html":{"url":"interfaces/WebProcess.html","title":"interface - WebProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WebProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/model/web-process.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WebProcess {\n  id:number;\n  title: string;\n  name: string;\n  description: string;\n  icon: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/announcementSubGroupInRelation.html":{"url":"interfaces/announcementSubGroupInRelation.html","title":"interface - announcementSubGroupInRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  announcementSubGroupInRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sequential-turn-management/model/relation-of-sequentialTurn-to-announcementSubGroup.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AnnouncementSGId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            AnnouncementSGTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AnnouncementSGTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AnnouncementSGTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RelationOfSequentialTurnToAnnouncementSubGroup {\n  SeqTurnId: number;\n  SeqTurnTitle?: string;\n  AnnouncementSubGroups: announcementSubGroupInRelation[];\n}\nexport interface announcementSubGroupInRelation {\n  AnnouncementSGId: number;\n  AnnouncementSGTitle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/dataFormat.html":{"url":"interfaces/dataFormat.html","title":"interface - dataFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  dataFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/forms/truck-and-driver-information-form/truck-and-driver-information-form.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject, Input, OnInit } from '@angular/core';\nimport { CardModule } from 'primeng/card';\nimport { TruckInfo } from 'app/services/driver-truck-management/model/truck-info.model';\nimport { Driver_TruckManagementService } from 'app/services/driver-truck-management/driver-truck-management.service';\nimport { checkAndToastError } from 'app/utils/api-utils';\nimport { ToastService } from 'app/services/toast-service/toast.service';\nimport { LoaderTypesService } from 'app/services/loader-types/loader-types.service';\nimport { LoaderType } from 'app/services/loader-types/model/loader-type.model';\nimport { TruckDriverInfo } from 'app/services/driver-truck-management/model/truck-driver-info.model';\nimport { SplitterModule } from 'primeng/splitter';\nimport { FormCardComponent } from \"../../shared/form-card/form-card.component\";\n\ninterface dataFormat {\n  title: string;\n  value: any;\n}\n\n@Component({\n  selector: 'app-truck-and-driver-information-form',\n  imports: [CardModule, SplitterModule, FormCardComponent],\n  templateUrl: './truck-and-driver-information-form.component.html',\n  styleUrl: './truck-and-driver-information-form.component.scss',\n})\nexport class TruckAndDriverInformationFormComponent implements OnInit {\n  @Input() insideTabType: 'Truck' | 'LoaderType' | 'Driver' = 'Truck';\n\n  TruckInfo?: TruckInfo;\n  LoaderTypeInfo?: LoaderType;\n  DriverInfo?: TruckDriverInfo;\n  truckDataForHtml: dataFormat[] = [];\n  loaderTypeDataForHtml: dataFormat[] = [];\n  driverDataForHtml: dataFormat[] = [];\n\n  private driver_truckManager = inject(Driver_TruckManagementService);\n  private loaderTypeManager = inject(LoaderTypesService);\n  private toast = inject(ToastService);\n\n  async ngOnInit(): Promise {\n    //#region Set TruckInfo\n    if (this.insideTabType === 'Truck') {\n      const truckResponse =\n        await this.driver_truckManager.GetTruckInfoForSoftwareUser();\n      if (!checkAndToastError(truckResponse, this.toast)) return;\n      this.TruckInfo = truckResponse.data;\n    }\n    //#endregion\n\n    //#region LoaderTypeInfo\n    if (this.insideTabType === 'LoaderType') {\n      const loaderTypeResponse =\n        await this.loaderTypeManager.GetLoaderTypeInfoForSoftwareUser();\n      if (!checkAndToastError(loaderTypeResponse, this.toast)) return;\n      this.LoaderTypeInfo = loaderTypeResponse.data;\n    }\n    //#endregion\n\n    //#region DriverInfo\n    if (this.insideTabType === 'Driver') {\n      const driverResponse =\n        await this.driver_truckManager.GetDriverInfoForSoftwareUser();\n      if (!checkAndToastError(driverResponse, this.toast)) return;\n      this.DriverInfo = driverResponse.data;\n    }\n    //#endregion\n\n    this.populateDataForHtml();\n\n    console.log(this.TruckInfo, this.LoaderTypeInfo, this.DriverInfo);\n  }\n\n  private populateDataForHtml() {\n    this.loaderTypeDataForHtml = [\n      {\n        title: 'کد بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeId,\n      },\n      {\n        title: 'شرح بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeTitle,\n      },\n      {\n        title: 'نوع بارگیر :',\n        value: this.LoaderTypeInfo?.LoaderTypeFixStatusTitle,\n      },\n    ];\n\n    this.driverDataForHtml = [\n      {\n        title: 'کد راننده :',\n        value: this.DriverInfo?.DriverId,\n      },\n      {\n        title: 'نام و نام خانوادگی :',\n        value: this.DriverInfo?.NameFamily,\n      },\n      {\n        title: 'کد ملی :',\n        value: this.DriverInfo?.NationalCode,\n      },\n      {\n        title: 'شماره همراه :',\n        value: this.DriverInfo?.MobileNumber,\n      },\n      {\n        title: 'نام پدر :',\n        value: this.DriverInfo?.FatherName,\n      },\n      {\n        title: 'شماره گواهینامه :',\n        value: this.DriverInfo?.DrivingLicenseNo,\n      },\n      {\n        title: 'شماره هوشمند :',\n        value: this.DriverInfo?.SmartCardNo,\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.13\n        \n            @angular/compiler : ^19.2.13\n        \n            @angular/core : ^19.2.13\n        \n            @angular/forms : ^19.2.13\n        \n            @angular/platform-browser : ^19.2.13\n        \n            @angular/platform-browser-dynamic : ^19.2.13\n        \n            @angular/router : ^19.2.13\n        \n            @angular/service-worker : ^19.2.13\n        \n            @ngrx/store : ^19.2.1\n        \n            @ngrx/store-devtools : ^19.2.1\n        \n            @primeng/themes : ^19.1.3\n        \n            crypto-js : ^4.2.0\n        \n            jalali-ts : ^8.0.0\n        \n            ng-persian-datepicker : ^10.0.0\n        \n            ngx-cookie-service : ^19.1.2\n        \n            primeflex : ^4.0.0\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^19.1.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorCodes   (src/.../error-messages.ts)\n                        \n                        \n                            FormMode   (src/.../announcement-group-form.component.ts)\n                        \n                        \n                            FormMode   (src/.../announcement-sub-group-form.component.ts)\n                        \n                        \n                            FormMode   (src/.../sequential-turns-form.component.ts)\n                        \n                        \n                            TabComponentKey   (src/.../tab-component-registry.ts)\n                        \n                        \n                            TariffsFormMode   (src/.../tariffs-form.component.ts)\n                        \n                        \n                            TravelTimeFormMode   (src/.../travel-time-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/error-messages.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorCodes\n                    \n                \n                        \n                            \n                                 BadRequest\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 Forbidden\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 NotFound\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 InternalServerError\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n                        \n                            \n                                 NotFoundInLocalAPI\n                            \n                        \n                        \n                            \n                                Value : 27\n                            \n                        \n                        \n                            \n                                 NotAuthenticated\n                            \n                        \n                        \n                            \n                                Value : 25\n                            \n                        \n                        \n                            \n                                 NoRecordFound\n                            \n                        \n                        \n                            \n                                Value : 28\n                            \n                        \n            \n        \n\n    src/app/components/forms/announcement-management-form/announcement-group-form/announcement-group-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormMode\n                    \n                \n                        \n                            \n                                 EDITABLE\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n            \n        \n\n    src/app/components/forms/announcement-management-form/announcement-sub-group-form/announcement-sub-group-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormMode\n                    \n                \n                        \n                            \n                                 EDITABLE\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n            \n        \n\n    src/app/components/forms/sequential-turns-management-form/sequential-turns-form/sequential-turns-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormMode\n                    \n                \n                        \n                            \n                                 EDITABLE\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n            \n        \n\n    src/app/constants/tab-component-registry.ts\n    \n        \n            \n                \n                    \n                        \n                        TabComponentKey\n                    \n                \n                        \n                            \n                                 Main\n                            \n                        \n                        \n                            \n                                 UserManagement\n                            \n                        \n                        \n                            \n                                 TruckDriverManagement\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SequentialTurnManagement\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 FactoriesAndFreightManagement\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 AnnouncementManagement\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 LoaderTypeManagement\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 LADPlaceManagementService\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 ProvinceAndCityManagement\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 ProductTypesManagement\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 LoaderManagement\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 TravelTimeManagement\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 TurnsManagement\n                            \n                        \n                        \n                            \n                                Value : 19\n                            \n                        \n                        \n                            \n                                 LoadCapacitorManagement\n                            \n                        \n                        \n                            \n                                Value : 35\n                            \n                        \n                        \n                            \n                                 TariffsManagement\n                            \n                        \n                        \n                            \n                                Value : 53\n                            \n                        \n                        \n                            \n                                 Driver_TruckManagement\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n            \n        \n\n    src/app/components/forms/tariffs-manages-form/tariffs-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TariffsFormMode\n                    \n                \n                        \n                            \n                                 EDITABLE\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n            \n        \n\n    src/app/components/forms/travel-time-form/travel-time-form.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TravelTimeFormMode\n                    \n                \n                        \n                            \n                                 EDITABLE\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkAndToastError   (src/.../api-utils.ts)\n                        \n                        \n                            getDefaultErrorMessage   (src/.../validation-schema.ts)\n                        \n                        \n                            handleHttpError   (src/.../http-error-handler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/api-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkAndToastError\n                        \n                    \n                \n            \n            \n                \ncheckAndToastError(res: ApiResponse, toast: ToastService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            ApiResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toast\n                                            \n                                                            ToastService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/constants/validation-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDefaultErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetDefaultErrorMessage(name: string, e: ErrorsValidation)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                e\n                                            \n                                                            ErrorsValidation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/utils/http-error-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleHttpError\n                        \n                    \n                \n            \n            \n                \nhandleHttpError(error)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ApiResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nThis repo built for the BPT-SJHB Panel.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    58 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    67 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ValidationField   (src/.../validation-schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/validation-schema.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationField\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
